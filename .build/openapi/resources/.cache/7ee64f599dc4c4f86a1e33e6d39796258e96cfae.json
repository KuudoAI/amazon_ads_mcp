{
  "components": {
    "callbacks": {},
    "examples": {},
    "headers": {},
    "links": {},
    "parameters": {},
    "requestBodies": {},
    "responses": {},
    "schemas": {
      "AcceptLanguage": {
        "enum": [
          "ar-AE",
          "de-DE",
          "en-AU",
          "en-CA",
          "en-GB",
          "en-IN",
          "en-US",
          "es-ES",
          "es-MX",
          "es-US",
          "fr-CA",
          "fr-FR",
          "it-IT",
          "ja-JP",
          "ko-KR",
          "nl-NL",
          "pl-PL",
          "pt-BR",
          "tr-TR",
          "zh-CN"
        ],
        "type": "string"
      },
      "Action": {
        "description": "The action to be performed on the resource.",
        "enum": [
          "accessOnDemand",
          "advertiseAsinLess",
          "associateHighValueActions",
          "createCampaigns",
          "createDynamicProductSets",
          "createGeoGatedCampaigns",
          "launchCampaigns",
          "view",
          "viewBookMetrics",
          "viewStockFilter"
        ],
        "type": "string"
      },
      "AdProgram": {
        "description": "This defines the AdPrograms supported",
        "enum": [
          "DTC",
          "MAAS",
          "SB",
          "SD",
          "SPOT"
        ],
        "type": "string"
      },
      "BadRequestExceptionResponseContent": {
        "properties": {
          "code": {
            "description": "Programmatic status code.",
            "type": "number"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Check": {
        "description": "A union of all the checks that we would want to skip",
        "oneOf": [
          {
            "properties": {
              "skipAllBillingChecks": {
                "description": "Skip all billing/payments/suspension related checks",
                "type": "boolean"
              }
            },
            "required": [
              "skipAllBillingChecks"
            ],
            "title": "skipAllBillingChecks",
            "type": "object"
          }
        ]
      },
      "CountryFailure": {
        "description": "Country-level failure object returned in case of error encountered while computing eligibility for the country.",
        "properties": {
          "failureCode": {
            "description": "Error identification string code - BAD_REQUEST, INTERNAL_SERVER_ERROR, NOT_FOUND, FORBIDDEN, NOT_AUTHORIZED.",
            "type": "string"
          },
          "failureDetails": {
            "description": "Details of the failure encountered.",
            "type": "string"
          },
          "requestId": {
            "description": "Error tracing identifiers.",
            "type": "string"
          }
        },
        "required": [
          "failureCode"
        ],
        "type": "object"
      },
      "CountryProductDetailsMap": {
        "additionalProperties": {
          "$ref": "#/components/schemas/ProductDetailsList"
        },
        "description": "A country code, in the ISO 3166-1 for example US for USA alpha-2 format, and the county's corresponding product identifiers list.",
        "maxProperties": 50,
        "minProperties": 1,
        "type": "object"
      },
      "CountryProductResponse": {
        "description": "A country and the county's corresponding product identifiers list with advertising eligibility response.",
        "properties": {
          "countryCode": {
            "description": "A country code in the ISO 3166-1 alpha-2 format. Eligibility in this country will be checked for the corresponding list of product identifiers.\n|Country|Country ISO 3166 Code|\n|-------|---------------------|\n|Australia|AU|\n|Belgium|BE|\n|Brazil|BR|\n|Canada|CA|\n|Chile|CL|\n|Colombia|CO|\n|Egypt|EG|\n|France|FR|\n|Germany|DE|\n|India|IN|\n|Ireland|IE|\n|Italy|IT|\n|Japan|JP|\n|Mexico|MX|\n|Netherlands|NL|\n|Nigeria|NG|\n|Poland|PL|\n|Russia|RU|\n|Saudi Arabia|SA|\n|Singapore|SG|\n|South Africa|ZA|\n|South Korea|KR|\n|Spain|ES|\n|Sweden|SE|\n|Turkey|TR|\n|United Arab Emirates|AE|\n|United Kingdom|GB|\n|United States|US|\n",
            "type": "string"
          },
          "countryFailure": {
            "$ref": "#/components/schemas/CountryFailure",
            "description": "Optional failure that is returned when failing to compute product responses for given country."
          },
          "productResponseList": {
            "description": "A list of product advertising eligibility responses.",
            "items": {
              "$ref": "#/components/schemas/ProductResponse"
            },
            "type": "array"
          }
        },
        "required": [
          "countryCode",
          "productResponseList"
        ],
        "type": "object"
      },
      "EligibilityStatus": {
        "description": "The advertising eligibility status of a product.",
        "properties": {
          "helpUrl": {
            "description": "A URL with additional information about the status identifier. May not be present for all status identifiers.",
            "type": "string"
          },
          "message": {
            "description": "A human-readable description of the status identifier specified in the `name` field.",
            "type": "string"
          },
          "name": {
            "description": "The status identifier.",
            "enum": [
              "ADULT_PRODUCT",
              "CLOSED_CATEGORY",
              "INELIGIBLE_CONDITION",
              "INELIGIBLE_OFFER",
              "INELIGIBLE_PRODUCT_COST",
              "LISTING_SUPRESSED",
              "MISSING_IMAGE",
              "MISSING_TITLE",
              "NOT_IN_BUYBOX",
              "OUT_OF_STOCK",
              "RESTRICTED_CATEGORY",
              "VARIATION_PARENT"
            ],
            "type": "string"
          },
          "severity": {
            "description": "An enumerated advertising eligibility severity status. If set to `INELIGIBLE`, the product cannot be included in an advertisement. If set to `ELIGIBLE_WITH_WARNING`, the product may not receive impressions when included in an advertisement.",
            "enum": [
              "ELIGIBLE_WITH_WARNING",
              "INELIGIBLE"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "EligibilityStatusDetail": {
        "description": "Describes a single program's eligibility status",
        "properties": {
          "eligible": {
            "description": "Boolean value where if true, advertiser is eligible to access the given program.",
            "type": "boolean"
          },
          "reasons": {
            "description": "String identifier for the status.",
            "items": {
              "$ref": "#/components/schemas/ReasonItem"
            },
            "maxItems": 99,
            "minItems": 1,
            "type": "array",
            "uniqueItems": true
          }
        },
        "type": "object"
      },
      "EligibilityStatusDetailV2": {
        "description": "Describes a single program's eligibility status",
        "properties": {
          "adProgram": {
            "$ref": "#/components/schemas/AdProgram"
          },
          "eligible": {
            "description": "Boolean value where if true, advertiser is eligible to access the given program.",
            "type": "boolean"
          },
          "reasons": {
            "description": "String identifier for the status.",
            "items": {
              "$ref": "#/components/schemas/ReasonItem"
            },
            "maxItems": 99,
            "minItems": 1,
            "type": "array",
            "uniqueItems": true
          }
        },
        "type": "object"
      },
      "EligibilityStatusMap": {
        "additionalProperties": {
          "$ref": "#/components/schemas/EligibilityStatusDetail"
        },
        "description": "This is a map that will be key'd on the ad program (SB/SD/DTC/MAAS/SPOT); the value will be an eligibility object.",
        "type": "object"
      },
      "ExcessiveBatchSizeExceptionResponseContent": {
        "properties": {
          "code": {
            "description": "Programmatic status code.",
            "type": "number"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Feature": {
        "properties": {
          "action": {
            "description": "the action to be performed on the resource",
            "type": "string"
          },
          "marketplaceId": {
            "description": "The marketplace to check the feature access in (Can be obfuscated or not)\nEspecially useful for global requests",
            "type": "string"
          },
          "resource": {
            "description": "The advertising resource of which you wish to check feature access for. Example: Sponsored Display Campaign.",
            "type": "string"
          }
        },
        "required": [
          "action",
          "marketplaceId",
          "resource"
        ],
        "type": "object"
      },
      "FeatureAcceptLanguage": {
        "enum": [
          "ar_AE",
          "de_DE",
          "en_AU",
          "en_CA",
          "en_GB",
          "en_IN",
          "en_US",
          "es_ES",
          "es_MX",
          "es_US",
          "fr_CA",
          "fr_FR",
          "it_IT",
          "ja_JP",
          "ko_KR",
          "nl_NL",
          "pl_PL",
          "pt_BR",
          "tr_TR",
          "zh_CN"
        ],
        "type": "string"
      },
      "FeatureEligibilityError": {
        "properties": {
          "errorCode": {
            "description": "The error code ffor the error encountered",
            "type": "string"
          },
          "errorId": {
            "description": "The integer code for the error encountered",
            "type": "number"
          },
          "errorMessage": {
            "description": "The human readable message for the error encountered",
            "type": "string"
          },
          "httpStatusCode": {
            "description": "The http status code of the item",
            "type": "number"
          },
          "itemRequestId": {
            "description": "The id of the item that is Marketplace + Resource + Action",
            "type": "string"
          }
        },
        "type": "object"
      },
      "FeatureEligibilityItem": {
        "properties": {
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "httpStatusCode": {
            "description": "the http status code of the item",
            "type": "number"
          },
          "isEligible": {
            "description": "Boolean value where if true, advertiser is eligible to access the given feature.",
            "type": "boolean"
          },
          "itemRequestId": {
            "description": "The id of the item that is Marketplace + Resource + Action",
            "type": "string"
          },
          "marketplaceId": {
            "description": "The marketplace to check the feature access in, will be obfuscated or not depending on the input",
            "type": "string"
          },
          "reasons": {
            "description": "String identifier for the status.",
            "items": {
              "$ref": "#/components/schemas/FeatureReasonItem"
            },
            "maxItems": 20,
            "minItems": 0,
            "type": "array",
            "uniqueItems": true
          },
          "resource": {
            "$ref": "#/components/schemas/Resource"
          }
        },
        "type": "object"
      },
      "FeatureEligibilityRequestContent": {
        "description": "A request to evaluate feature eligibility",
        "properties": {
          "features": {
            "description": "The List of features and marketplaces of which you wish the feature to be evalulated in",
            "items": {
              "$ref": "#/components/schemas/Feature"
            },
            "maxItems": 30,
            "minItems": 1,
            "type": "array",
            "uniqueItems": true
          }
        },
        "required": [
          "features"
        ],
        "type": "object"
      },
      "FeatureEligibilityResponseContent": {
        "description": "A list of feature eligibility responses for an advertiser, split by success and error",
        "properties": {
          "error": {
            "items": {
              "$ref": "#/components/schemas/FeatureEligibilityError"
            },
            "maxItems": 30,
            "minItems": 0,
            "type": "array"
          },
          "success": {
            "items": {
              "$ref": "#/components/schemas/FeatureEligibilityItem"
            },
            "maxItems": 30,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "FeatureReasonItem": {
        "properties": {
          "code": {
            "$ref": "#/components/schemas/ReasonCode"
          },
          "description": {
            "description": "Message explaining what the status means. Example: Payment preference not found for associated billing account. Please add a new payment method",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GlobalProductEligibilityRequest": {
        "description": "A multi-country product advertising global eligibility request object.",
        "properties": {
          "adType": {
            "default": "sp",
            "description": "Set to 'sp' to check product eligibility for Sponsored Products advertisements. Set to 'sb' to check product eligibility for Sponsored Brands advertisements. Set to 'sd' to check product eligibility for Sponsored Display advertisements.",
            "enum": [
              "sb",
              "sd",
              "sp"
            ],
            "type": "string"
          },
          "countryProductDetailsMap": {
            "$ref": "#/components/schemas/CountryProductDetailsMap"
          },
          "locale": {
            "default": "en-US",
            "description": "Set to the locale string in the table below to specify the language in which the response is returned.\n|Locale|Language (ISO 639)|Country (ISO 3166)|\n|------|------------------|------------------|\n|ar-AE|Arabic (ar)|United Arab Emirates (AE)|\n|zh-CN|Chinese (zh)|China (CN)|\n|nl-NL|Dutch (nl)|Netherlands (NL)|\n|en-AU|English (en)|Australia (AU)|\n|en-CA|English (en)|Canada (CA)|\n|en-IN|English (en)|India (IN)|\n|en-GB|English (en)|United Kingdom (GB)|\n|en-US|English (en)|United States (US)|\n|fr-CA|French (fr)|Canada (CA)|\n|fr-FR|French (fr)|France (FR)|\n|de-DE|German (de)|Germany (DE)|\n|it-IT|Italian (it)|Italy (IT)|\n|ja-JP|Japanese (ja)|Japan (JP)|\n|ko-KR|Korean (ko)|South Korea (KR)|\n|pt-BR|Portuguese (pt)|Brazil (BR)|\n|es-ES|Spanish (es)|Spain (ES)|\n|es-US|Spanish (es)|United States (US)|\n|es-MX|Spanish (es)|Mexico (MX)|\n|tr-TR|Turkish (tr)|Turkey (TR)|\n",
            "type": "string"
          }
        },
        "required": [
          "countryProductDetailsMap"
        ],
        "type": "object"
      },
      "GlobalProductEligibilityResponse": {
        "description": "A multi-country product advertising eligibility response object.",
        "properties": {
          "countryProductResponseList": {
            "description": "A list of country and the county's corresponding product advertising eligibility responses.",
            "items": {
              "$ref": "#/components/schemas/CountryProductResponse"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "GlobalStoreSetting": {
        "description": "Fields required to check eligibility for [GlobalStore Program](https://sellercentral.amazon.com/help/hub/reference/external/202139180) Ads.",
        "properties": {
          "catalogSourceCountryCode": {
            "description": "Country code of source marketplace where seller has listed the product. Possible source country codes include US, UK, DE, JP, and AE.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "IneligibleLevel": {
        "enum": [
          "INELIGIBLE",
          "INELIGIBLE_WITH_RESOLUTION"
        ],
        "type": "string"
      },
      "InternalServerErrorExceptionResponseContent": {
        "properties": {
          "code": {
            "description": "Programmatic status code.",
            "type": "number"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MarketplaceEntitiesEligibilityStatusList": {
        "properties": {
          "eligibilityStatusList": {
            "description": "This is a map that will be key'd on the ad program (SB/SD/DTC/MAAS/SPOT); the value will be an eligibility object.",
            "items": {
              "$ref": "#/components/schemas/EligibilityStatusDetailV2"
            },
            "maxItems": 50,
            "minItems": 0,
            "type": "array"
          },
          "marketplaceId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "NotFoundExceptionResponseContent": {
        "properties": {
          "code": {
            "description": "Programmatic status code.",
            "type": "number"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OfferEligibilityError": {
        "description": "The HTTP status code of the response",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OfferEligibilityRequest": {
        "description": "A offer advertising eligibility request object",
        "properties": {
          "adProduct": {
            "default": "SPONSORED_PRODUCTS",
            "description": "This field is used to specify eligibility checks for a given adProduct. Eligibility checks may vary across adProduct.",
            "enum": [
              "SPONSORED_PRODUCTS"
            ],
            "type": "string"
          },
          "locale": {
            "description": "Set to the locale string in the table below to specify the language in which the response is returned",
            "example": "en_US",
            "type": "string"
          },
          "offers": {
            "description": "A List of offerIds",
            "items": {
              "$ref": "#/components/schemas/Offers"
            },
            "maxItems": 300,
            "minItems": 1,
            "type": "array"
          },
          "retailerId": {
            "description": "Id of a retailer. You can retrieve this from the /adsAccounts API.",
            "type": "string"
          }
        },
        "required": [
          "adProduct",
          "locale",
          "offers",
          "retailerId"
        ],
        "type": "object"
      },
      "OfferEligibilityResponse": {
        "description": "A offer advertising eligibility response object",
        "properties": {
          "offerResponseList": {
            "description": "A list of offer advertising eligibility responses",
            "items": {
              "$ref": "#/components/schemas/OfferResponse"
            },
            "maxItems": 300,
            "minItems": 1,
            "type": "array"
          },
          "requestId": {
            "description": "Error tracing identifiers.",
            "type": "string"
          },
          "unprocessedOffers": {
            "description": "A list of offers that could not be processed",
            "items": {
              "$ref": "#/components/schemas/UnprocessedOffer"
            },
            "maxItems": 300,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "offerResponseList"
        ],
        "type": "object"
      },
      "OfferResponse": {
        "description": "Response object for AES offer API",
        "properties": {
          "eligibilityStatusIssues": {
            "items": {
              "$ref": "#/components/schemas/eligibilityStatusIssue"
            },
            "maxItems": 50,
            "minItems": 1,
            "type": "array"
          },
          "offer": {
            "$ref": "#/components/schemas/Offers"
          },
          "overallStatus": {
            "description": "A human-readable description of the product's advertising eligibility status.",
            "enum": [
              "ELIGIBLE",
              "ELIGIBLE_WITH_WARNING",
              "INELIGIBLE"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Offers": {
        "description": "List containing offerIds",
        "properties": {
          "offerId": {
            "description": "offerIDs",
            "type": "string"
          }
        },
        "required": [
          "offerId"
        ],
        "type": "object"
      },
      "ProductDetails": {
        "description": "An Amazon product identifier, seller product identifier, or both.",
        "properties": {
          "asin": {
            "description": "An Amazon product identifier.",
            "type": "string"
          },
          "globalStoreSetting": {
            "$ref": "#/components/schemas/GlobalStoreSetting"
          },
          "sku": {
            "description": "A seller product identifier.",
            "type": "string"
          }
        },
        "required": [
          "asin"
        ],
        "type": "object"
      },
      "ProductDetailsList": {
        "description": "A list of product identifier objects.",
        "items": {
          "$ref": "#/components/schemas/ProductDetails"
        },
        "maxItems": 30,
        "minItems": 1,
        "type": "array"
      },
      "ProductEligibilityError": {
        "description": "The error response object.",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProductEligibilityRequest": {
        "description": "A product advertising eligibility request object.",
        "properties": {
          "adType": {
            "default": "sp",
            "description": "Set to 'sp' to check product eligibility for Sponsored Products advertisements. Set to 'sb' to check product eligibility for Sponsored Brands advertisements. Set to 'sd' to check product eligibility for Sponsored Displays advertisements. Set to 'dsp' to check product eligibility for Demand Side Platform advertisements.",
            "enum": [
              "dsp",
              "sb",
              "sd",
              "sp"
            ],
            "type": "string"
          },
          "locale": {
            "description": "Set to the locale string in the table below to specify the language in which the response is returned",
            "example": "en_US",
            "type": "string"
          },
          "productDetailsList": {
            "description": "A list of product identifier objects.",
            "items": {
              "$ref": "#/components/schemas/ProductDetails"
            },
            "maxItems": 50,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "productDetailsList"
        ],
        "type": "object"
      },
      "ProductEligibilityResponse": {
        "description": "A product advertising eligibility response object.",
        "properties": {
          "productResponseList": {
            "description": "A list of product advertising eligibility responses.",
            "items": {
              "$ref": "#/components/schemas/ProductResponse"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ProductResponse": {
        "description": "An product advertising eligibility response.",
        "properties": {
          "eligibilityStatusList": {
            "items": {
              "$ref": "#/components/schemas/EligibilityStatus"
            },
            "type": "array"
          },
          "overallStatus": {
            "description": "A human-readable description of the product's advertising eligibility status. Inherits highest severity from eligibilityStatusList.",
            "enum": [
              "ELIGIBLE",
              "ELIGIBLE_WITH_WARNING",
              "INELIGIBLE"
            ],
            "type": "string"
          },
          "productDetails": {
            "$ref": "#/components/schemas/ProductDetails"
          }
        },
        "required": [
          "eligibilityStatusList",
          "overallStatus",
          "productDetails"
        ],
        "type": "object"
      },
      "ProgramEligibilityRequestContent": {
        "description": "A request to evaluate account level eligibility for Amazon ad programs (Sponsored Products, Sponsored Brands, Sponsored Display, Stores, DirectToConsumer, Amazon Attribution, etc).",
        "properties": {
          "skipChecks": {
            "$ref": "#/components/schemas/Check"
          }
        },
        "type": "object"
      },
      "ProgramEligibilityResponseContent": {
        "description": "An object of program eligibility responses for an advertiser.",
        "properties": {
          "eligibilityStatusMap": {
            "$ref": "#/components/schemas/EligibilityStatusMap"
          }
        },
        "type": "object"
      },
      "ProgramEligibilityV2RequestContent": {
        "description": "A request to evaluate account level eligibility for Amazon ad programs (Sponsored Products, Sponsored Brands, Sponsored Display, Stores, DirectToConsumer, Amazon Attribution, etc).",
        "properties": {
          "maxResults": {
            "description": "Max results for pagination",
            "maximum": 100,
            "minimum": 1,
            "type": "number"
          },
          "nextToken": {
            "description": "The pagination token that is required to go to the next page",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProgramEligibilityV2ResponseContent": {
        "description": "An object of program eligibility responses for an advertiser.",
        "properties": {
          "eligibilityStatusLists": {
            "items": {
              "$ref": "#/components/schemas/MarketplaceEntitiesEligibilityStatusList"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RateExceededExceptionResponseContent": {
        "properties": {
          "code": {
            "description": "Programmatic status code.",
            "type": "number"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ReasonCode": {
        "enum": [
          "ACCOUNT_SUSPENDED",
          "ADVERTISER_TYPE_NOT_SUPPORTED",
          "ADVERTISING_ACCOUNT_NOT_FOUND",
          "AMAZON_BUSINESS_EXCLUSIVE_CAMPAIGN_NOT_ELIGIBLE",
          "AMAZON_HAUL_EXCLUSIVE_CAMPAIGN_NOT_ELIGIBLE",
          "AMAZON_MARKETING_CLOUD_ON_DEMAND_NOT_ELIGIBLE",
          "BILLING_ACCOUNT_NOT_FOUND",
          "BLOCKED",
          "BUSINESS_NOT_VERIFIED",
          "BUSINESS_THRESHOLDS_NOT_MET",
          "DIRECT_TO_CONSUMER_OWNER_TAG_ID_NOT_FOUND",
          "DIRECT_TO_CONSUMER_SUBSCRIPTION_NOT_FOUND",
          "DYNAMIC_PRODUCT_SETS_CAMPAIGN_FEATURE_NOT_ELIGIBLE",
          "EXPIRED_PAYMENT_METHOD",
          "GEO_GATED_CAMPAIGN_FEATURE_NOT_ELIGIBLE",
          "GLOBAL_CAMPAIGNS_NOT_ELIGIBLE",
          "MTA_NOT_ELIGIBLE",
          "NOT_BRAND_REPRESENTATIVE",
          "NOT_LAUNCHED_IN_MARKETPLACE",
          "NO_BRAND_RELATIONS",
          "NO_TACTIC_ENABLED",
          "PAYMENT_METHOD_NOT_FOUND",
          "PAYMENT_METHOD_NOT_VALID",
          "PAYMENT_PROFILE_NOT_FOUND",
          "PREPAY_BALANCE_TOO_LOW",
          "RO_BALANCE_TOO_LOW",
          "STOCK_FILTER_CAMPAIGN_FEATURE_NOT_ELIGIBLE",
          "SUBSCRIPTION_NOT_FOUND",
          "TAX_INFO_NOT_COMPLETE",
          "UNKNOWN",
          "VETTING_FAILURE"
        ],
        "type": "string"
      },
      "ReasonItem": {
        "properties": {
          "code": {
            "$ref": "#/components/schemas/ReasonCode"
          },
          "description": {
            "description": "Message explaining what the status means. Example: Payment preference not found for associated billing account. Please add a new payment method",
            "type": "string"
          },
          "level": {
            "$ref": "#/components/schemas/IneligibleLevel"
          }
        },
        "type": "object"
      },
      "Resource": {
        "description": "The advertising resource of which you wish to check feature access for. Example: Sponsored Display Campaign.",
        "enum": [
          "amc",
          "campaigns:amazonBusinessExclusive",
          "campaigns:amazonHaulExclusive",
          "dsp:campaigns",
          "multiTouchAttributionMetrics",
          "sa:campaigns",
          "sa:productSelector",
          "sd:campaigns",
          "sd:campaigns:asinless",
          "sp:globalCampaigns",
          "st:campaigns",
          "st:campaigns:asinless",
          "unifiedReportCenter"
        ],
        "type": "string"
      },
      "UnauthorizedExceptionResponseContent": {
        "properties": {
          "code": {
            "description": "Programmatic status code.",
            "type": "number"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UnprocessedOffer": {
        "description": "List containing unprocessed offers",
        "properties": {
          "error": {
            "description": "error message",
            "type": "string"
          },
          "offer": {
            "$ref": "#/components/schemas/Offers"
          }
        },
        "required": [
          "offer"
        ],
        "type": "object"
      },
      "eligibilityStatusIssue": {
        "description": "The advertising eligibility status of a product",
        "properties": {
          "helpUrl": {
            "description": "A URL with additional information about the status identifier. May not be present for all status identifiers.",
            "type": "string"
          },
          "message": {
            "description": "A human-readable description of the status identifier specified in the `name` field",
            "type": "string"
          },
          "name": {
            "description": "The status identifier",
            "type": "string"
          },
          "severity": {
            "description": "An enumerated advertising eligibility severity status",
            "enum": [
              "ELIGIBLE_WITH_WARNING",
              "INELIGIBLE"
            ],
            "type": "string"
          }
        },
        "required": [
          "message",
          "name",
          "severity"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {}
  },
  "info": {
    "description": "Check advertising eligibility of global offers.",
    "title": "Eligibility",
    "version": "3.0"
  },
  "openapi": "3.0.1",
  "paths": {
    "/eligibility/product/list": {
      "post": {
        "description": "Gets a list of advertising eligibility objects for a set of products. Requests are permitted only for products sold by the merchant associated with the profile. Note that the request object is a list of ASINs, but multiple SKUs are returned if there is more than one SKU associated with an ASIN. If a product is not eligible for advertising, the response includes an object describing the reasons for ineligibility.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "operationId": "productEligibility",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductEligibilityRequest"
              }
            }
          },
          "description": "Request for Product Eligibility",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductEligibilityResponse"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductEligibilityError"
                }
              }
            },
            "description": "Bad request."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductEligibilityError"
                }
              }
            },
            "description": "Unauthorized. Request failed because user is not authenticated or is not allowed to invoke the operation."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductEligibilityError"
                }
              }
            },
            "description": "Forbidden. Request failed because user does not have access to a specified resource"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductEligibilityError"
                }
              }
            },
            "description": "Cannot find requested entity. Note that this may occur if a product is not associated with the given profile/merchant, or a product is no longer in the catalog."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductEligibilityError"
                }
              }
            },
            "description": "Unprocessable entity. The request was understood, but it contained invalid parameters."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductEligibilityError"
                }
              }
            },
            "description": "Too many requests. The request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductEligibilityError"
                }
              }
            },
            "description": "Internal server error. Retry later. Contact support if this response persists."
          }
        },
        "summary": "Gets advertising eligibility status for a list of products.",
        "tags": [
          "Product Eligibility"
        ]
      }
    },
    "/eligibility/programs": {
      "post": {
        "description": "Checks the advertiser's eligibility to ad programs.\n\n**Authorized resource type**:\nGlobal Ad Account ID, Profile ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[]",
        "operationId": "ProgramEligibility",
        "parameters": [
          {
            "description": "Specify the language in which the response is returned.",
            "in": "header",
            "name": "Accept-Language",
            "schema": {
              "$ref": "#/components/schemas/AcceptLanguage"
            }
          },
          {
            "description": "The header used to pass global account associated with the advertiser account\nUse `GET` method on the Global Ads Account resource to list the global ads account associated with the access token passed in the HTTP Authorization header and choose AdvertisingAccountIdentifier id from the response to pass it as input.\nUse for v2 global calls",
            "in": "header",
            "name": "Amazon-Ads-AccountId",
            "schema": {
              "description": "The header used to pass global account associated with the advertiser account\nUse `GET` method on the Global Ads Account resource to list the global ads account associated with the access token passed in the HTTP Authorization header and choose AdvertisingAccountIdentifier id from the response to pass it as input.\nUse for v2 global calls",
              "maxLength": 120,
              "pattern": "\\S*",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "maxLength": 180,
              "pattern": "\\S*",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
              "maxLength": 120,
              "pattern": "\\S*",
              "type": "string"
            }
          },
          {
            "description": "The content type of the request.",
            "in": "header",
            "name": "Content-Type",
            "schema": {
              "description": "The content type of the request.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProgramEligibilityRequestContent"
              }
            },
            "application/vnd.programeligibility.v2+json": {
              "examples": {
                "ProgramEligibilityV2_example1": {
                  "summary": "Valid Request",
                  "value": {
                    "maxResults": 1
                  }
                }
              },
              "schema": {
                "$ref": "#/components/schemas/ProgramEligibilityV2RequestContent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramEligibilityResponseContent"
                }
              },
              "application/vnd.programeligibility.v2+json": {
                "examples": {
                  "ProgramEligibilityV2_example1": {
                    "summary": "Valid Request",
                    "value": {
                      "eligibilityStatusMaps": [
                        {
                          "eligibilityStatusMap": {
                            "SB": {
                              "eligible": "false",
                              "reasons": [
                                {
                                  "code": "NO_BRAND_RELATIONS",
                                  "description": "Advertiser has no known relations to a brand.",
                                  "level": "INELIGIBLE_WITH_RESOLUTION"
                                }
                              ]
                            },
                            "SD": {
                              "eligible": "false",
                              "reasons": [
                                {
                                  "code": "NO_BRAND_RELATIONS",
                                  "description": "Advertiser has no known relations to a brand.",
                                  "level": "INELIGIBLE_WITH_RESOLUTION"
                                }
                              ]
                            },
                            "SPOT": {
                              "eligible": "false",
                              "reasons": [
                                {
                                  "code": "NO_BRAND_RELATIONS",
                                  "description": "Advertiser has no known relations to a brand.",
                                  "level": "INELIGIBLE_WITH_RESOLUTION"
                                }
                              ]
                            }
                          },
                          "marketplaceId": "ATVPDKIKX0DER"
                        }
                      ],
                      "nextToken": "token"
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ProgramEligibilityV2ResponseContent"
                }
              }
            },
            "description": "ProgramEligibility 200 response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestExceptionResponseContent"
                }
              }
            },
            "description": "BadRequestException 400 response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundExceptionResponseContent"
                }
              }
            },
            "description": "NotFoundException 404 response"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateExceededExceptionResponseContent"
                }
              }
            },
            "description": "RateExceededException 429 response"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorExceptionResponseContent"
                }
              }
            },
            "description": "InternalServerErrorException 500 response"
          }
        },
        "tags": [
          "Program Eligibility"
        ]
      }
    }
  }
}