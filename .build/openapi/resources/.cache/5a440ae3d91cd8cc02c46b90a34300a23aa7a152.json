{
  "components": {
    "callbacks": {},
    "examples": {},
    "headers": {},
    "links": {},
    "parameters": {
      "clientHeader": {
        "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
        "in": "header",
        "name": "Amazon-Advertising-API-ClientId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "profileHeader": {
        "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
        "in": "header",
        "name": "Amazon-Advertising-API-Scope",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "requestBodies": {},
    "responses": {
      "SBKeywordRecommendationThemeResponse": {
        "content": {
          "application/vnd.sbkeywordrecommendationtheme.v3+json": {
            "schema": {
              "example": [
                {
                  "keywords": [
                    {
                      "recommendationId": "recommendationId1",
                      "value": "running shoes"
                    },
                    {
                      "recommendationId": "recommendationId2",
                      "value": "shoes"
                    }
                  ],
                  "themeType": "KEYWORDS_RELATED_TO_YOUR_BRAND"
                },
                {
                  "keywords": [
                    {
                      "recommendationId": "recommendationId3",
                      "value": "backpacks"
                    },
                    {
                      "recommendationId": "recommendationId4",
                      "value": "camping backpack"
                    }
                  ],
                  "themeType": "KEYWORDS_RELATED_TO_YOUR_LANDING_PAGES"
                }
              ],
              "items": {
                "$ref": "#/components/schemas/SBKeywordRecommendationThemeSuggestion"
              },
              "maxItems": 100,
              "minItems": 0,
              "type": "array"
            }
          }
        },
        "description": "Successful theme keyword recommendations response."
      }
    },
    "schemas": {
      "AcceptHeader": {
        "description": "Clients request a specific version of a resource using the Accept request-header field set to the value field of the desired content-type.",
        "enum": [
          "application/vnd.sbAdCreativeResource.v4+json",
          "application/vnd.sbCreativeImageRecommendationResource.v4+json",
          "application/vnd.sbCreativeRecommendationResource.v4+json"
        ],
        "type": "string"
      },
      "AccessDeniedErrorCode": {
        "enum": [
          "ACCESS_DENIED"
        ],
        "type": "string"
      },
      "AccessDeniedErrorResponseContent": {
        "properties": {
          "code": {
            "$ref": "#/components/schemas/AccessDeniedErrorCode"
          },
          "message": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message",
          "requestId"
        ],
        "type": "object"
      },
      "AccessDeniedExceptionResponseContent": {
        "properties": {
          "code": {
            "$ref": "#/components/schemas/AccessDeniedErrorCode"
          },
          "message": {
            "description": "Human readable error message.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "type": "object"
      },
      "Ad": {
        "properties": {
          "adGroupId": {
            "description": "The adGroup identifier.",
            "type": "string"
          },
          "adId": {
            "description": "The ad identifier. Note: Ads created using version 3/non-multi ad group campaigns do not have an associated adId. [Learn more](https://advertising.amazon.com/API/docs/en-us/sponsored-brands/campaigns/managing-multi-ad-group-campaigns#ads).",
            "type": "string"
          },
          "campaignId": {
            "description": "The campaign identifier.",
            "type": "string"
          },
          "creative": {
            "$ref": "#/components/schemas/Creative"
          },
          "extendedData": {
            "$ref": "#/components/schemas/AdExtendedData"
          },
          "landingPage": {
            "$ref": "#/components/schemas/LandingPage"
          },
          "name": {
            "description": "The name of the ad. Note: Ads created using version 3/non-multi ad group campaigns do not have an associated name. [Learn more](https://advertising.amazon.com/API/docs/en-us/sponsored-brands/campaigns/managing-multi-ad-group-campaigns#ads).",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/EntityState"
          }
        },
        "required": [
          "adGroupId",
          "campaignId",
          "state"
        ],
        "type": "object"
      },
      "AdExtendedData": {
        "properties": {
          "creationDate": {
            "description": "Creation date in epoch time.",
            "type": "number"
          },
          "lastUpdateDate": {
            "description": "Date of last update in epoch time.",
            "type": "number"
          },
          "servingStatus": {
            "$ref": "#/components/schemas/AdServingStatus"
          },
          "servingStatusDetails": {
            "description": "The serving status reasons of the Ad.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "AdFailureResponseItem": {
        "properties": {
          "errors": {
            "description": "A list of validation errors.",
            "items": {
              "$ref": "#/components/schemas/AdMutationError"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "index": {
            "description": "the index of the ad in the array from the request body.",
            "maximum": 10,
            "minimum": 0,
            "type": "number"
          }
        },
        "required": [
          "index"
        ],
        "type": "object"
      },
      "AdGroup": {
        "properties": {
          "adGroupId": {
            "description": "The identifier of the keyword.",
            "type": "string"
          },
          "campaignId": {
            "description": "The identifier of the campaign to which the keyword is associated.",
            "type": "string"
          },
          "extendedData": {
            "$ref": "#/components/schemas/AdGroupExtendedData"
          },
          "name": {
            "description": "The name of the ad group.",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/EntityState"
          }
        },
        "required": [
          "adGroupId",
          "campaignId",
          "name",
          "state"
        ],
        "type": "object"
      },
      "AdGroupExtendedData": {
        "properties": {
          "creationDate": {
            "description": "Creation date in epoch time.",
            "type": "number"
          },
          "lastUpdateDate": {
            "description": "Date of last update in epoch time.",
            "type": "number"
          },
          "servingStatus": {
            "$ref": "#/components/schemas/AdGroupServingStatus"
          },
          "servingStatusDetails": {
            "description": "The serving status reasons of the Ad Group.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "AdGroupFailureResponseItem": {
        "properties": {
          "errors": {
            "description": "A list of validation errors.",
            "items": {
              "$ref": "#/components/schemas/AdGroupMutationError"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "index": {
            "description": "the index of the adGroup in the array from the request body.",
            "maximum": 10,
            "minimum": 0,
            "type": "number"
          }
        },
        "required": [
          "index"
        ],
        "type": "object"
      },
      "AdGroupMutationError": {
        "properties": {
          "errorType": {
            "description": "The type of the error.",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/AdGroupMutationErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ],
        "type": "object"
      },
      "AdGroupMutationErrorSelector": {
        "properties": {
          "biddingError": {
            "$ref": "#/components/schemas/BiddingError"
          },
          "dateError": {
            "$ref": "#/components/schemas/DateError"
          },
          "otherError": {
            "$ref": "#/components/schemas/OtherError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/RangeError"
          }
        },
        "type": "object"
      },
      "AdGroupServingStatus": {
        "description": "`Notice: the servingStatus enums have not been finalized yet.`\nThe ad group serving status determined by system.\n- AD_GROUP_STATUS_ENABLED - Ad group's status is enabled.\n- AD_GROUP_PAUSED - Ad group's status is paused.\n- AD_GROUP_ARCHIVED - Ad group's status is archived.\n- AD_GROUP_INCOMPLETE - Ad group does not contain any ads or targeting clauses.\n- AD_GROUP_POLICING_PENDING_REVIEW - Ad group is pending review because of policing reason\n- AD_GROUP_POLICING_CREATIVE_REJECTED - Ad group is rejected due to creative because of policing reason\n- AD_GROUP_LOW_BID - Ad group is less than the minimum allowed bid in its marketplace\n\n- ADVERTISER_STATUS_ENABLED - Advertiser's status is enabled\n- ADVERTISER_POLICING_PENDING_REVIEW - Avertiser is pending review because of policing reason\n- ADVERTISER_POLICING_SUSPENDED - Advertiser's status is suspended because of policing reason\n- ADVERTISER_PAUSED - Advertiser's status is paused\n- ADVERTISER_ARCHIVED - Advertiser's status is archived\n- ADVERTISER_PAYMENT_FAILURE - Advertiser's internal status is suspended\n- ADVERTISER_ACCOUNT_OUT_OF_BUDGET - Advertiser is out of budget for all Sponsored Ads campaigns\n- ADVERTISER_OUT_OF_PREPAY_BALANCE - Advertiser is out of prepay balance for all Sponsored Ads campaigns\n- ADVERTISER_EXCEED_SPENDS_LIMIT - Advertiser spends over the daily limit\n\n- CAMPAIGN_STATUS_ENABLED - Campaign's (parent) status is enabled.\n- CAMPAIGN_PAUSED - Campaign's (parent) status is paused.\n- CAMPAIGN_ARCHIVED - Campaign's (parent) status is archived.\n- CAMPAIGN_INCOMPLETE - Campaign (parent) does not contain any ads or targeting clauses.\n- CAMPAIGN_OUT_OF_BUDGET - Campaign (parent) is out of budget.\n\n- PORTFOLIO_STATUS_ENABLED - Portfolio's (parent) status is enabled\n- PORTFOLIO_PAUSED - Portfolio's (parent) status is paused\n- PORTFOLIO_ARCHIVED - Portfolio's (parent) status is archived\n- PORTFOLIO_OUT_OF_BUDGET - Portfolio (parent) is out of budget\n- PORTFOLIO_PENDING_START_DATE - Portfolio's (parent) start date is in the future\n- PORTFOLIO_ENDED - Portfolio's (parent) end date is in the past.\n\n- INELIGIBLE - Ad group is ineligible.\n- ELIGIBLE - Ad group is eligible.\n- ENDED - Campaign's (parent) end date is in the past.\n- PENDING_REVIEW - Campaign (parent) is pending review.\n- PENDING_START_DATE - Campaign's (parent) start date is in the future.\n- REJECTED - Campaign (parent) is rejected by moderation process.\n- UNKNOWN - Serving status is unknown. Please contact us for support.",
        "enum": [
          "AD_GROUP_STATUS_ENABLED",
          "AD_GROUP_PAUSED",
          "AD_GROUP_ARCHIVED",
          "AD_GROUP_INCOMPLETE",
          "AD_GROUP_POLICING_PENDING_REVIEW",
          "AD_GROUP_POLICING_CREATIVE_REJECTED",
          "AD_GROUP_LOW_BID",
          "ADVERTISER_STATUS_ENABLED",
          "ADVERTISER_POLICING_PENDING_REVIEW",
          "ADVERTISER_POLICING_SUSPENDED",
          "ADVERTISER_PAUSED",
          "ADVERTISER_ARCHIVED",
          "ADVERTISER_PAYMENT_FAILURE",
          "ADVERTISER_ACCOUNT_OUT_OF_BUDGET",
          "ADVERTISER_OUT_OF_PREPAY_BALANCE",
          "ADVERTISER_EXCEED_SPENDS_LIMIT",
          "CAMPAIGN_STATUS_ENABLED",
          "CAMPAIGN_PAUSED",
          "CAMPAIGN_ARCHIVED",
          "CAMPAIGN_INCOMPLETE",
          "CAMPAIGN_OUT_OF_BUDGET",
          "PORTFOLIO_STATUS_ENABLED",
          "PORTFOLIO_PAUSED",
          "PORTFOLIO_ARCHIVED",
          "PORTFOLIO_OUT_OF_BUDGET",
          "PORTFOLIO_PENDING_START_DATE",
          "PORTFOLIO_ENDED",
          "INELIGIBLE",
          "ELIGIBLE",
          "ENDED",
          "PENDING_REVIEW",
          "PENDING_START_DATE",
          "REJECTED",
          "UNKNOWN"
        ],
        "type": "string"
      },
      "AdGroupSuccessResponseItem": {
        "properties": {
          "adGroup": {
            "$ref": "#/components/schemas/AdGroup"
          },
          "adGroupId": {
            "description": "the adGroup ID.",
            "type": "string"
          },
          "index": {
            "description": "the index of the adGroup in the array from the request body.",
            "maximum": 10,
            "minimum": 0,
            "type": "number"
          }
        },
        "required": [
          "index"
        ],
        "type": "object"
      },
      "AdMutationError": {
        "properties": {
          "errorType": {
            "description": "The type of the error.",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/AdMutationErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ],
        "type": "object"
      },
      "AdMutationErrorSelector": {
        "properties": {
          "otherError": {
            "$ref": "#/components/schemas/OtherError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/RangeError"
          }
        },
        "type": "object"
      },
      "AdServingStatus": {
        "description": "The ad serving status determined by system.\n- AD_STATUS_LIVE - Ad's status is enabled.\n- AD_POLICING_PENDING_REVIEW - Ad is pending review because of policing reason.\n- AD_POLICING_SUSPENDED - Ad is suspended review because of policing reason.\n- AD_PAUSED - Ad's status is paused.\n- AD_ARCHIVED - Ad's status is archived.\n\n- AD_GROUP_STATUS_ENABLED - Ad group's (parent) status is enabled.\n- AD_GROUP_PAUSED - Ad group's (parent) status is paused.\n- AD_GROUP_ARCHIVED - Ad group's (parent) status is archived.\n- AD_GROUP_INCOMPLETE - Ad group (parent) does not contain any ads or targeting clauses.\n- AD_GROUP_POLICING_PENDING_REVIEW - Ad group is pending review because of policing reason\n- AD_GROUP_POLICING_CREATIVE_REJECTED - Ad group is rejected due to creative because of policing reason\n- AD_GROUP_LOW_BID - Ad group is less than the minimum allowed bid in its marketplace\n\n- ADVERTISER_STATUS_ENABLED - Advertiser's status is enabled\n- ADVERTISER_POLICING_PENDING_REVIEW - Avertiser is pending review because of policing reason\n- ADVERTISER_POLICING_SUSPENDED - Advertiser's status is suspended because of policing reason\n- ADVERTISER_PAUSED - Advertiser's status is paused\n- ADVERTISER_ARCHIVED - Advertiser's status is archived\n- ADVERTISER_PAYMENT_FAILURE - Advertiser's internal status is suspended\n- ADVERTISER_ACCOUNT_OUT_OF_BUDGET - Advertiser is out of budget for all Sponsored Ads campaigns\n- ADVERTISER_OUT_OF_PREPAY_BALANCE - Advertiser is out of prepay balance for all Sponsored Ads campaigns\n- ADVERTISER_EXCEED_SPENDS_LIMIT - Advertiser spends over the daily limit\n\n- CAMPAIGN_STATUS_ENABLED - Campaign's (parent) status is enabled.\n- CAMPAIGN_PAUSED - Campaign's (parent) status is paused.\n- CAMPAIGN_ARCHIVED - Campaign's (parent) status is archived.\n- CAMPAIGN_INCOMPLETE - Campaign (parent) does not contain any ads or targeting clauses.\n- CAMPAIGN_OUT_OF_BUDGET - Campaign (parent) is out of budget.\n\n- PORTFOLIO_STATUS_ENABLED - Portfolio's (parent) status is enabled\n- PORTFOLIO_PAUSED - Portfolio's (parent) status is paused\n- PORTFOLIO_ARCHIVED - Portfolio's (parent) status is archived\n- PORTFOLIO_OUT_OF_BUDGET - Portfolio (parent) is out of budget\n- PORTFOLIO_PENDING_START_DATE - Portfolio's (parent) start date is in the future\n- PORTFOLIO_ENDED - Portfolio's (parent) end date is in the past.\n\n- INELIGIBLE - Ad is ineligible.\n- ELIGIBLE  - Ad is eligible.\n- ENDED - Campaign's (parent) end date is in the past.\n- PENDING_REVIEW - Campaign (parent) is pending review.\n- PENDING_START_DATE - Campaign's (parent) start date is in the future.\n- REJECTED - Campaign (parent) is rejected by moderation process.\n- UNKNOWN - Serving status is unknown. Please contact us for support.",
        "enum": [
          "AD_STATUS_LIVE",
          "AD_POLICING_PENDING_REVIEW",
          "AD_POLICING_SUSPENDED",
          "AD_PAUSED",
          "AD_ARCHIVED",
          "AD_GROUP_STATUS_ENABLED",
          "AD_GROUP_PAUSED",
          "AD_GROUP_ARCHIVED",
          "AD_GROUP_INCOMPLETE",
          "AD_GROUP_POLICING_PENDING_REVIEW",
          "AD_GROUP_POLICING_CREATIVE_REJECTED",
          "AD_GROUP_LOW_BID",
          "ADVERTISER_STATUS_ENABLED",
          "ADVERTISER_POLICING_PENDING_REVIEW",
          "ADVERTISER_POLICING_SUSPENDED",
          "ADVERTISER_PAUSED",
          "ADVERTISER_ARCHIVED",
          "ADVERTISER_PAYMENT_FAILURE",
          "ADVERTISER_ACCOUNT_OUT_OF_BUDGET",
          "ADVERTISER_OUT_OF_PREPAY_BALANCE",
          "ADVERTISER_EXCEED_SPENDS_LIMIT",
          "CAMPAIGN_STATUS_ENABLED",
          "CAMPAIGN_PAUSED",
          "CAMPAIGN_ARCHIVED",
          "CAMPAIGN_INCOMPLETE",
          "CAMPAIGN_OUT_OF_BUDGET",
          "PORTFOLIO_STATUS_ENABLED",
          "PORTFOLIO_PAUSED",
          "PORTFOLIO_ARCHIVED",
          "PORTFOLIO_OUT_OF_BUDGET",
          "PORTFOLIO_PENDING_START_DATE",
          "PORTFOLIO_ENDED",
          "INELIGIBLE",
          "ELIGIBLE",
          "ENDED",
          "PENDING_REVIEW",
          "PENDING_START_DATE",
          "REJECTED",
          "UNKNOWN"
        ],
        "type": "string"
      },
      "AdSuccessResponseItem": {
        "properties": {
          "ad": {
            "$ref": "#/components/schemas/MultiAdGroupAd"
          },
          "adId": {
            "description": "the Ad ID.",
            "type": "string"
          },
          "index": {
            "description": "The index in the original list from the request.",
            "maximum": 10,
            "minimum": 0,
            "type": "number"
          }
        },
        "required": [
          "index"
        ],
        "type": "object"
      },
      "AsinComponent": {
        "description": "Asin component which needs to be pre moderated.",
        "properties": {
          "asin": {
            "description": "Asin id to be pre moderated.",
            "type": "string"
          },
          "componentType": {
            "description": "Type of the asin component.",
            "enum": [
              "LANDING_ASIN",
              "PRODUCT_ASIN"
            ],
            "type": "string"
          },
          "id": {
            "description": "Id of the component. The same will be returned as part of the response as well. This can be used to uniquely identify the component from the pre moderation response.",
            "type": "string"
          }
        },
        "required": [
          "asin",
          "componentType",
          "id"
        ],
        "type": "object"
      },
      "AsinComponentResponse": {
        "description": "Pre-moderation result for an Asin component",
        "properties": {
          "asin": {
            "description": "Pre-moderated Asin Id.",
            "type": "string"
          },
          "componentType": {
            "description": "Type of Asin component.",
            "enum": [
              "LANDING_ASIN",
              "PRODUCT_ASIN"
            ],
            "type": "string"
          },
          "id": {
            "description": "Id of the component. This is the same id sent as part of the request. This can be used to uniquely identify the component.",
            "type": "string"
          },
          "policyViolations": {
            "description": "A list of policy violations for the component that were detected during pre moderation. Note that this field is present in the response only when preModerationStatus is set to REJECTED.",
            "items": {
              "$ref": "#/components/schemas/AsinPolicyViolation"
            },
            "type": "array"
          },
          "preModerationStatus": {
            "description": "The pre-moderation status of the component.",
            "enum": [
              "REJECTED",
              "APPROVED",
              "FAILED",
              "RETRYABLE_FAILURE"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "AsinPolicyViolation": {
        "properties": {
          "name": {
            "description": "A policy violation code.",
            "type": "string"
          },
          "policyDescription": {
            "description": "A human-readable description of the policy.",
            "example": "example: Advertising alcohol is not allowed",
            "type": "string"
          },
          "policyLinkUrl": {
            "description": "Address of the policy documentation. Follow the link to learn more about the specified policy.",
            "example": "https://advertising.amazon.com/resources/ad-policy/en/creative-acceptance#alcohol",
            "type": "string"
          },
          "type": {
            "description": "Type of policy violation.",
            "enum": [
              "WARNING",
              "REJECTED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "AssetCrop": {
        "description": "Asset cropping attributes",
        "properties": {
          "height": {
            "description": "The number of pixels to crop down from the value specified as top",
            "type": "number"
          },
          "left": {
            "description": "The leftmost pixel from which to begin cropping",
            "type": "number"
          },
          "top": {
            "description": "The highest pixel from which to begin cropping",
            "type": "number"
          },
          "width": {
            "description": "The number of pixels to crop rightwards from the value specified as left",
            "type": "number"
          }
        },
        "type": "object"
      },
      "AssetSubType": {
        "description": "Asset subtype from Asset Library which you are looking to get recommendations for. Asset Library documentation can be found here: https://advertising.amazon.com/API/docs/en-us/creative-asset-library",
        "enum": [
          "CUSTOM_IMAGE",
          "LOGO",
          "PRODUCT_IMAGE",
          "AUTHOR_IMAGE"
        ],
        "type": "string"
      },
      "AssociateSponsoredBrandsOptimizationRulesRequestContent": {
        "properties": {
          "optimizationRuleAssociations": {
            "items": {
              "$ref": "#/components/schemas/OptimizationRuleToEntityMapping"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "optimizationRuleAssociations"
        ],
        "type": "object"
      },
      "AssociateSponsoredBrandsOptimizationRulesResponseContent": {
        "properties": {
          "optimizationRuleAssociations": {
            "$ref": "#/components/schemas/BulkAssociationsOptimizationRuleResponse"
          }
        },
        "required": [
          "optimizationRuleAssociations"
        ],
        "type": "object"
      },
      "AssociatedBudgetRuleResponse": {
        "properties": {
          "code": {
            "description": "An enumerated success or error code for machine use.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the error, if unsuccessful",
            "type": "string"
          },
          "ruleId": {
            "description": "The budget rule identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AssociatedCampaign": {
        "properties": {
          "campaignId": {
            "description": "The campaign identifier.",
            "type": "string"
          },
          "campaignName": {
            "description": "The campaign name.",
            "type": "string"
          },
          "ruleStatus": {
            "description": "The budget rule evaluation status for this campaign. Read-only.",
            "type": "string"
          }
        },
        "required": [
          "campaignId",
          "campaignName",
          "ruleStatus"
        ],
        "type": "object"
      },
      "AudienceSegment": {
        "properties": {
          "audienceId": {
            "type": "string"
          },
          "audienceSegmentType": {
            "$ref": "#/components/schemas/AudienceSegmentType"
          }
        },
        "type": "object"
      },
      "AudienceSegmentType": {
        "description": "The audience segment type is required to specify the type of audience being used to apply bid adjustments.\n|Value               | Description|\n|---------------------|------------|\n| `SPONSORED_ADS_AMC` | This type refers to the Audience Segments created in AMC for Sponsored Ads. See [AMC API](https://advertising.amazon.com/API/docs/en-us/amc-rba#tag/Rule-based-audience) for details on how to create AMC Audiences. Once the AMC Audiences are created, the Audience Ids can be retrieved using the Discovery API [ListTargetableEntities](https://advertising.amazon.com/API/docs/en-us/targetable-entities#operation/ListTargetableEntities) with parameters; `adProduct`=`SPONSORED_BRANDS`, `targetTypeFilter`=`AUDIENCE` and `pathsFilter` = `[[\"Audience Category\", \"Custom-built\", \"AMC\"]]`. Only the audiences retrieved using these filters are usable.|\n| `BEHAVIOR_DYNAMIC` | This type refers to the Audience Segments created by Amazon for Sponsored Ads. The Audience Ids can be retrieved using the Discovery API [ListTargetableEntities](https://advertising.amazon.com/API/docs/en-us/targetable-entities#operation/ListTargetableEntities) with parameters; `adProduct`=`SPONSORED_BRANDS`, `targetTypeFilter`=`AUDIENCE` and `pathsFilter` = `[[\"Audience Category\", \"Custom-built\", \"Product\"]]`. Only the audiences retrieved using these filters are usable.|\n",
        "enum": [
          "SPONSORED_ADS_AMC",
          "BEHAVIOR_DYNAMIC"
        ],
        "type": "string"
      },
      "BidAdjustmentByPlacement": {
        "properties": {
          "percentage": {
            "maximum": 900,
            "minimum": -99,
            "type": "number"
          },
          "placement": {
            "$ref": "#/components/schemas/Placement"
          }
        },
        "type": "object"
      },
      "BidAdjustmentByShopperSegment": {
        "properties": {
          "percentage": {
            "maximum": 900,
            "minimum": 0,
            "type": "number"
          },
          "shopperSegment": {
            "$ref": "#/components/schemas/ShopperSegment"
          }
        },
        "type": "object"
      },
      "Bidding": {
        "properties": {
          "bidAdjustmentsByPlacement": {
            "description": "Placement level bid adjustment. Note that this field can only be set when 'bidOptimization' is set to false.",
            "items": {
              "$ref": "#/components/schemas/BidAdjustmentByPlacement"
            },
            "maxItems": 3,
            "minItems": 0,
            "type": "array"
          },
          "bidOptimization": {
            "description": "Whether to use automatic placement level bid optimization. If set to true, Amazon will automatically set the right placement adjustment and the bidAdjustmentsByPlacement field is ignored. If set to false, the bidAdjustmentsByPlacement field will be used to adjust bid on different placements.\nIf this field is changed from false to true, the bidAdjustmentsByPlacement field will be reset to null.",
            "type": "boolean"
          },
          "shopperCohortBidAdjustments": {
            "description": "Shopper cohort based bid adjustments.",
            "items": {
              "$ref": "#/components/schemas/ShopperCohortBidAdjustment"
            },
            "maxItems": 1,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "BiddingError": {
        "description": "Errors related to bids.",
        "properties": {
          "cause": {
            "$ref": "#/components/schemas/ErrorCause"
          },
          "lowerLimit": {
            "type": "string"
          },
          "message": {
            "description": "Human readable error message.",
            "type": "string"
          },
          "reason": {
            "description": "Exact error reason.",
            "type": "string"
          },
          "upperLimit": {
            "type": "string"
          }
        },
        "required": [
          "cause",
          "message",
          "reason"
        ],
        "type": "object"
      },
      "BillingError": {
        "description": "Errors related to billing.",
        "properties": {
          "cause": {
            "$ref": "#/components/schemas/ErrorCause"
          },
          "message": {
            "description": "Human readable error message.",
            "type": "string"
          },
          "reason": {
            "description": "Exact error reason.",
            "type": "string"
          }
        },
        "required": [
          "cause",
          "message",
          "reason"
        ],
        "type": "object"
      },
      "BrandLogo": {
        "description": "Properties associated with Brand Logo.",
        "properties": {
          "brandLogoAssetId": {
            "description": "The identifier of image/video asset from the store's asset library",
            "type": "string"
          },
          "brandLogoCrop": {
            "$ref": "#/components/schemas/AssetCrop"
          },
          "brandLogoUrl": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "BrandLogoCrop": {
        "description": "The crop to apply to the selected Brand logo. A Brand logo must have minimum dimensions of 400x400. If a brandLogoAssetID is supplied but a crop is not, the crop will be defaulted to the whole image.",
        "properties": {
          "height": {
            "type": "number"
          },
          "left": {
            "type": "number"
          },
          "top": {
            "type": "number"
          },
          "width": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "BrandVideoCreative": {
        "properties": {
          "asins": {
            "description": "An array of ASINs associated with the creative.",
            "items": {
              "description": "ASIN",
              "type": "string"
            },
            "maxItems": 3,
            "minItems": 0,
            "type": "array"
          },
          "brandLogoAssetId": {
            "description": "The identifier of the [brand logo](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#brandlogo) image from the brand store's asset library.\nNote that for campaigns created in the Amazon Advertising console prior to release of the brand store's assets library, responses will not include a value for this field.",
            "type": "string"
          },
          "brandLogoCrop": {
            "$ref": "#/components/schemas/AssetCrop"
          },
          "brandName": {
            "description": "The displayed brand name in the ad headline.\nMaximum length is 30 characters.\nSee [the policy](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#headlines) for headline requirements.",
            "type": "string"
          },
          "consentToTranslate": {
            "description": "If set to true and the headline and/or video are not in the marketplace's default language, Amazon will attempt to translate them to the marketplace's default language.\nIf Amazon is unable to translate them, the ad will be rejected by moderation. We only support translating headlines and videos from English to German, French, Italian, Spanish, Japanese, and Dutch. See developer notes for more information.",
            "type": "boolean"
          },
          "headline": {
            "description": "The headline text. Maximum length of the string is 50 characters for all marketplaces other than Japan, which has a maximum length of 35 characters.\nSee [the policy](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#headlines) for headline requirements.",
            "type": "string"
          },
          "landingPage": {
            "$ref": "#/components/schemas/CreativeLandingPageV2"
          },
          "videoAssetIds": {
            "description": "The assetIds of the original videos submitted by the advertiser.\nIf 'consentToTranslate' is set to true and translation is SUCCESSFUL then 'videoAssetIds' will return translated video assetId whereas `originalVideoAssetIds` will return the original video assetId. In all other cases, `videoAssetIds` will return original video assetId.",
            "items": {
              "description": "The identifier of image/video asset from the store's asset library",
              "type": "string"
            },
            "maxItems": 1,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "asins",
          "brandLogoAssetId",
          "brandName",
          "headline",
          "videoAssetIds"
        ],
        "type": "object"
      },
      "BudgetChangeType": {
        "description": "The value by which to update the budget of the budget rule.",
        "enum": [
          "PERCENT"
        ],
        "type": "string"
      },
      "BudgetError": {
        "properties": {
          "cause": {
            "$ref": "#/components/schemas/ErrorCause"
          },
          "lowerLimit": {
            "type": "string"
          },
          "message": {
            "description": "Human readable error message.",
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "upperLimit": {
            "type": "string"
          }
        },
        "required": [
          "cause",
          "message",
          "reason"
        ],
        "type": "object"
      },
      "BudgetRecommendation": {
        "description": "Budget recomendation for campagins.",
        "properties": {
          "campaignId": {
            "description": "The identifier of a campaign.",
            "type": "string"
          },
          "index": {
            "description": "Correlate the recommendation to the campaign index in the request. Zero-based.",
            "type": "number"
          },
          "sevenDaysMissedOpportunities": {
            "$ref": "#/components/schemas/SevenDaysMissedOpportunities"
          },
          "suggestedBudget": {
            "description": "Recommended budget for the campaign.",
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "campaignId",
          "index",
          "sevenDaysMissedOpportunities",
          "suggestedBudget"
        ],
        "type": "object"
      },
      "BudgetRecommendationError": {
        "description": "Error that occurred when generating budget recommendations.",
        "properties": {
          "campaignId": {
            "description": "The identifier of a campaign.",
            "type": "string"
          },
          "code": {
            "description": "A human-readable description of the enumerated response code in the `code` field.",
            "type": "string"
          },
          "details": {
            "description": "An enumerated response code.",
            "type": "string"
          },
          "index": {
            "description": "Correlate the recommendation to the campaign index in the request. Zero-based.",
            "type": "number"
          }
        },
        "required": [
          "campaignId",
          "code",
          "details",
          "index"
        ],
        "type": "object"
      },
      "BudgetRuleError": {
        "description": "The Error Response Object.",
        "properties": {
          "code": {
            "description": "An enumerated error code for machine use.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BudgetRuleResponse": {
        "properties": {
          "associatedCampaignIds": {
            "items": {
              "description": "The campaign identifier for which rule based budget may get updated",
              "type": "string"
            },
            "type": "array"
          },
          "code": {
            "description": "An enumerated success or error code for machine use.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the error, if unsuccessful",
            "type": "string"
          },
          "ruleId": {
            "description": "The rule identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BudgetType": {
        "description": "For the lifetime budget type, `startDate` and `endDate` must be specified.",
        "enum": [
          "DAILY",
          "LIFETIME"
        ],
        "type": "string"
      },
      "BudgetUsageCampaign": {
        "properties": {
          "budget": {
            "description": "Budget amount of resource requested",
            "type": "number"
          },
          "budgetUsagePercent": {
            "description": "Budget usage percentage (spend / available budget) for the given budget policy.",
            "type": "number"
          },
          "campaignId": {
            "description": "ID of requested resource",
            "type": "string"
          },
          "index": {
            "description": "An index to maintain order of the campaignIds",
            "type": "number"
          },
          "usageUpdatedTimestamp": {
            "description": "Last evaluation time for budget usage",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BudgetUsageCampaignBatchError": {
        "properties": {
          "campaignId": {
            "description": "ID of requested resource",
            "type": "string"
          },
          "code": {
            "description": "An enumerated error code for machine use.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          },
          "index": {
            "description": "An index to maintain order of the campaignIds",
            "type": "number"
          }
        },
        "type": "object"
      },
      "BudgetUsageCampaignRequest": {
        "properties": {
          "campaignIds": {
            "description": "A list of campaign IDs",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "BudgetUsageCampaignResponse": {
        "properties": {
          "error": {
            "description": "List of budget usage percentages that failed to pull",
            "items": {
              "$ref": "#/components/schemas/BudgetUsageCampaignBatchError"
            },
            "type": "array"
          },
          "success": {
            "description": "List of budget usage percentages that were successfully pulled",
            "items": {
              "$ref": "#/components/schemas/BudgetUsageCampaign"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "BudgetUsageError": {
        "description": "The Error Response Object.",
        "properties": {
          "code": {
            "description": "An enumerated error code for machine use.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BudgetUsagePortfolio": {
        "properties": {
          "budget": {
            "description": "Budget amount of resource requested",
            "type": "number"
          },
          "budgetUsagePercent": {
            "description": "Budget usage percentage (spend / available budget) for the given budget policy.",
            "type": "number"
          },
          "index": {
            "description": "An index to maintain order of the portfolioIds",
            "type": "number"
          },
          "portfolioId": {
            "description": "ID of requested resource",
            "type": "string"
          },
          "usageUpdatedTimestamp": {
            "description": "Last evaluation time for budget usage",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BudgetUsagePortfolioBatchError": {
        "properties": {
          "code": {
            "description": "An enumerated error code for machine use.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          },
          "index": {
            "description": "An index to maintain order of the portfolioIds",
            "type": "number"
          },
          "portfolioId": {
            "description": "ID of requested resource",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BudgetUsagePortfolioRequest": {
        "properties": {
          "portfolioIds": {
            "description": "A list of portfolio IDs.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "BudgetUsagePortfolioResponse": {
        "properties": {
          "error": {
            "description": "List of budget usage percentages that failed to pull",
            "items": {
              "$ref": "#/components/schemas/BudgetUsagePortfolioBatchError"
            },
            "type": "array"
          },
          "success": {
            "description": "List of budget usage percentages that were successfully pulled",
            "items": {
              "$ref": "#/components/schemas/BudgetUsagePortfolio"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "BulkAdGroupOperationResponse": {
        "properties": {
          "error": {
            "items": {
              "$ref": "#/components/schemas/AdGroupFailureResponseItem"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          },
          "success": {
            "items": {
              "$ref": "#/components/schemas/AdGroupSuccessResponseItem"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "BulkAdOperationResponse": {
        "properties": {
          "error": {
            "items": {
              "$ref": "#/components/schemas/AdFailureResponseItem"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          },
          "success": {
            "items": {
              "$ref": "#/components/schemas/AdSuccessResponseItem"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "BulkAssociationsOptimizationRuleResponse": {
        "properties": {
          "error": {
            "items": {
              "$ref": "#/components/schemas/OptimizationRuleFailureResponseItem"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          },
          "success": {
            "items": {
              "$ref": "#/components/schemas/OptimizationRuleToEntityMappingSuccessResponseItem"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "BulkCampaignOperationResponse": {
        "properties": {
          "error": {
            "items": {
              "$ref": "#/components/schemas/CampaignMutationFailureResponseItem"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          },
          "success": {
            "items": {
              "$ref": "#/components/schemas/CampaignMutationSuccessResponseItem"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "BulkCreateOptimizationRuleOperationResponse": {
        "properties": {
          "error": {
            "items": {
              "$ref": "#/components/schemas/OptimizationRuleFailureResponseItem"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          },
          "success": {
            "items": {
              "$ref": "#/components/schemas/CreateOptimizationRuleSuccessResponseItem"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "BulkDisassociationsOptimizationRuleResponse": {
        "properties": {
          "error": {
            "items": {
              "$ref": "#/components/schemas/OptimizationRuleFailureResponseItem"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          },
          "success": {
            "items": {
              "$ref": "#/components/schemas/OptimizationRuleToEntityMappingSuccessResponseItem"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "BulkUpdateOptimizationRuleOperationResponse": {
        "properties": {
          "error": {
            "items": {
              "$ref": "#/components/schemas/OptimizationRuleFailureResponseItem"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          },
          "success": {
            "items": {
              "$ref": "#/components/schemas/UpdateOptimizationRuleSuccessResponseItem"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "Campaign": {
        "properties": {
          "bidding": {
            "$ref": "#/components/schemas/Bidding"
          },
          "brandEntityId": {
            "type": "string"
          },
          "budget": {
            "format": "double",
            "type": "number"
          },
          "budgetType": {
            "$ref": "#/components/schemas/BudgetType"
          },
          "campaignId": {
            "description": "The identifier of the campaign.",
            "type": "string"
          },
          "costType": {
            "description": "The costType can be set to determines how the campaign will bid and charge. To view the bid maximums and minimums by geography and costType, see https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace\n- CPC [Default] - Cost per click. The performance of this campaign is measured by the clicks triggered by the ad.\n- VCPM - Cost per 1000 viewable impressions. The performance of this campaign is measured by the viewable impressions triggered by the ad.",
            "type": "string"
          },
          "endDate": {
            "description": "The format of the date is YYYY-MM-DD.",
            "pattern": "^20[1-9][0-9]-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string"
          },
          "extendedData": {
            "$ref": "#/components/schemas/CampaignExtendedData"
          },
          "goal": {
            "description": "Goal will allow you to set goal type to help drive your campaign performance. If no goal is selected then it will default to PAGE_VISIT.\nThe goal type of the campaign.\n- BRAND_IMPRESSION_SHARE - This goal will allow you grown your brand impression share on top of search placements\n- PAGE_VISIT [DEFAULT] - This goal drives traffic to your landing and detail pages through all placements\n- ACQUIRE_NEW_CUSTOMERS - This property is a PREVIEW ONLY and cannot be used as part of a request or response. This goal drives new customer acquisition for your brands.\n- AD_VIEWS - This property is a PREVIEW ONLY and cannot be used as part of a request or response. This goal maximizes view for your ads.",
            "type": "string"
          },
          "isMultiAdGroupsEnabled": {
            "type": "boolean"
          },
          "name": {
            "description": "The name of the campaign.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "portfolioId": {
            "description": "The identifier of an existing portfolio to which the campaign is associated.",
            "type": "string"
          },
          "productLocation": {
            "$ref": "#/components/schemas/ProductLocation"
          },
          "ruleBasedBudget": {
            "$ref": "#/components/schemas/RuleBasedBudget"
          },
          "siteRestrictions": {
            "description": "Restrict the ad to a particular site. siteRestrictions is an optional field.  If this field is not set, ads from the campaign will appear on Amazon - including both Amazon retail and Amazon Business. \nPlease note that:\n1) AMAZON_BUSINESS option is only available for Amazon Business operated marketplaces (US, CA, MX, UK, DE, FR, IT, ES, IN, JP);\n2) siteRestrictions cannot be changed post campaign creation;\n3) siteRestrictions doesn't support shopperCohortBidding setting.",
            "items": {
              "$ref": "#/components/schemas/SiteRestriction"
            },
            "maxItems": 1,
            "minItems": 1,
            "type": "array"
          },
          "smartDefault": {
            "description": "The smartDefault specifies a list of the smart default options for the campaign.\n\n`smartDefault` is optional for create campaign requests. `smartDefault` are applicable to all applicable child entities of the campaign and are not editable once the campaign is created. When using [\"TARGETING\"], targets will be automatically added based on the goal selected.  When [\"MANUAL\"] is selected, you will still be required to manually add targets.\n\nIf you don't specify `smartDefault`, default value will be applied based on `goal` . If campaign's `goal` is selected, `smartDefault` will be set to [\"TARGETING\"].  Otherwise, a campaign's `smartDefault` will be set to [\"MANUAL\"].\n\nEach element in smartDefault can be set to determines which default strategy to be used\n- MANUAL - Manual settings, no smart default be applied to the campaign, if MANUAL is added in the list, no other items are allowed in the list (the list must contains only one item)\n- TARGETING - Smart Default Targeting creation, will automatically creating targetings when create ad group\n\nExample: [\"TARGETING\"]",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "startDate": {
            "description": "The format of the date is YYYY-MM-DD.",
            "pattern": "^20[1-9][0-9]-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/EntityState"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          }
        },
        "required": [
          "budget",
          "budgetType",
          "campaignId",
          "name",
          "state"
        ],
        "type": "object"
      },
      "CampaignExtendedData": {
        "description": "CampaignExtendedData can only be retrieved via the list API. It won't be available in the response during update/create.",
        "properties": {
          "creationDate": {
            "description": "Creation date in epoch time.",
            "type": "number"
          },
          "lastUpdateDate": {
            "description": "Date of last update in epoch time.",
            "type": "number"
          },
          "servingStatus": {
            "$ref": "#/components/schemas/CampaignServingStatus"
          },
          "servingStatusDetails": {
            "description": "The serving status reasons of the Campaign.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "CampaignMigrationFinalStatus": {
        "properties": {
          "legacyCampaignId": {
            "description": "Entity object identifier.",
            "type": "string"
          },
          "migrationStatus": {
            "description": "Enumerated status code for migration job status\n| Status                                             |  Description |\n|----------------------------------------------------------|--------------|\n| MIGRATION_COMPLETE  | Migration is complete and new V4 campaigns are ready to serve. The V3 campaigns are archived |\n| STAGING_COMPLETE    | Staging of V4 campaign IDs are complete |\n| MIGRATION_FAILED         | Migration of V3 campaign failed  |\n| MIGRATION_IN_PROGRESS   | Migration for V3 campaign is in-progress |",
            "type": "string"
          },
          "migrationStatusReason": {
            "description": "Status reason for the given migration status",
            "type": "string"
          },
          "newCampaignId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CampaignMutationError": {
        "properties": {
          "errorType": {
            "description": "The type of the error.",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/CampaignMutationErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ],
        "type": "object"
      },
      "CampaignMutationErrorSelector": {
        "properties": {
          "biddingError": {
            "$ref": "#/components/schemas/BiddingError"
          },
          "billingError": {
            "$ref": "#/components/schemas/BillingError"
          },
          "budgetError": {
            "$ref": "#/components/schemas/BudgetError"
          },
          "dateError": {
            "$ref": "#/components/schemas/DateError"
          },
          "otherError": {
            "$ref": "#/components/schemas/OtherError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/RangeError"
          }
        },
        "type": "object"
      },
      "CampaignMutationFailureResponseItem": {
        "properties": {
          "errors": {
            "description": "A list of validation errors.",
            "items": {
              "$ref": "#/components/schemas/CampaignMutationError"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "index": {
            "description": "the index of the campaign in the array from the request body.",
            "maximum": 10,
            "minimum": 0,
            "type": "number"
          }
        },
        "required": [
          "index"
        ],
        "type": "object"
      },
      "CampaignMutationSuccessResponseItem": {
        "properties": {
          "campaign": {
            "$ref": "#/components/schemas/Campaign"
          },
          "campaignId": {
            "description": "The campaign ID.",
            "type": "string"
          },
          "index": {
            "description": "The index of the campaign in the array from the request body.",
            "maximum": 10,
            "minimum": 0,
            "type": "number"
          }
        },
        "required": [
          "index"
        ],
        "type": "object"
      },
      "CampaignServingStatus": {
        "description": "`Notice: the servingStatus enums have not been finalized yet.`\nThe campaign serving status determined by system.\n- ADVERTISER_STATUS_ENABLED - Advertiser's status is enabled\n- ADVERTISER_POLICING_PENDING_REVIEW - Avertiser is pending review because of policing reason\n- ADVERTISER_POLICING_SUSPENDED - Advertiser's status is suspended because of policing reason\n- ADVERTISER_PAUSED - Advertiser's status is paused\n- ADVERTISER_ARCHIVED - Advertiser's status is archived\n- ADVERTISER_PAYMENT_FAILURE - Advertiser's internal status is suspended\n- ADVERTISER_ACCOUNT_OUT_OF_BUDGET - Advertiser is out of budget for all Sponsored Ads campaigns\n- ADVERTISER_OUT_OF_PREPAY_BALANCE - Advertiser is out of prepay balance for all Sponsored Ads campaigns\n- ADVERTISER_EXCEED_SPENDS_LIMIT - Advertiser spends over the daily limit\n\n- CAMPAIGN_STATUS_ENABLED - Campaign's status is enabled.\n- CAMPAIGN_PAUSED - Campaign's status is paused.\n- CAMPAIGN_ARCHIVED - Campaign's status is archived.\n- CAMPAIGN_INCOMPLETE - Campaign does not contain any ads or targeting clauses.\n- CAMPAIGN_OUT_OF_BUDGET - Campaign is out of budget.\n\n- PORTFOLIO_STATUS_ENABLED - Portfolio's status is enabled\n- PORTFOLIO_PAUSED - Portfolio's status is paused\n- PORTFOLIO_ARCHIVED - Portfolio's status is archived\n- PORTFOLIO_OUT_OF_BUDGET - Portfolio is out of budget\n- PORTFOLIO_PENDING_START_DATE - Portfolio's start date is in the future\n- PORTFOLIO_ENDED - Portfolio's end date is in the past.\n\n- INELIGIBLE - Ad Offer is ineligible\n- ELIGIBLE - Ad Offer is eligible\n- ENDED - Campaign's end date is in the past.\n- PENDING_REVIEW - Campaign is pending review.\n- PENDING_START_DATE - Campaign's start date is in the future.\n- REJECTED - Campaign is rejected by moderation process.\n- UNKNOWN - Serving status is unknown. Please contact us for support.",
        "enum": [
          "ADVERTISER_STATUS_ENABLED",
          "ADVERTISER_POLICING_PENDING_REVIEW",
          "ADVERTISER_POLICING_SUSPENDED",
          "ADVERTISER_PAUSED",
          "ADVERTISER_ARCHIVED",
          "ADVERTISER_PAYMENT_FAILURE",
          "ADVERTISER_ACCOUNT_OUT_OF_BUDGET",
          "ADVERTISER_OUT_OF_PREPAY_BALANCE",
          "ADVERTISER_EXCEED_SPENDS_LIMIT",
          "CAMPAIGN_STATUS_ENABLED",
          "CAMPAIGN_PAUSED",
          "CAMPAIGN_ARCHIVED",
          "CAMPAIGN_INCOMPLETE",
          "CAMPAIGN_OUT_OF_BUDGET",
          "PORTFOLIO_STATUS_ENABLED",
          "PORTFOLIO_PAUSED",
          "PORTFOLIO_ARCHIVED",
          "PORTFOLIO_OUT_OF_BUDGET",
          "PORTFOLIO_PENDING_START_DATE",
          "PORTFOLIO_ENDED",
          "INELIGIBLE",
          "ELIGIBLE",
          "ENDED",
          "PENDING_REVIEW",
          "PENDING_START_DATE",
          "REJECTED",
          "UNKNOWN"
        ],
        "type": "string"
      },
      "ComparisonOperator": {
        "description": "The comparison operator.",
        "enum": [
          "GREATER_THAN",
          "LESS_THAN",
          "LESS_THAN_OR_EQUAL_TO",
          "GREATER_THAN_OR_EQUAL_TO"
        ],
        "type": "string"
      },
      "ConflictStateErrorCode": {
        "enum": [
          "CONFLICT_STATE"
        ],
        "type": "string"
      },
      "ConflictStateExceptionResponseContent": {
        "properties": {
          "code": {
            "$ref": "#/components/schemas/ConflictStateErrorCode"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "type": "object"
      },
      "CostControlMetric": {
        "description": "Cost control metric to retrieve recommended value for.  Currently only COST_PER_CLICK is supported.",
        "enum": [
          "COST_PER_CLICK"
        ],
        "type": "string"
      },
      "CreateAdGroup": {
        "properties": {
          "campaignId": {
            "description": "The identifier of the campaign to which the keyword is associated.",
            "type": "string"
          },
          "name": {
            "description": "The name of the ad group.",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/CreateOrUpdateEntityState"
          }
        },
        "required": [
          "campaignId",
          "name",
          "state"
        ],
        "type": "object"
      },
      "CreateAssociatedBudgetRulesRequest": {
        "properties": {
          "budgetRuleIds": {
            "description": "A list of budget rule identifiers.",
            "items": {
              "type": "string"
            },
            "maxItems": 25,
            "type": "array"
          }
        },
        "type": "object"
      },
      "CreateAssociatedBudgetRulesResponse": {
        "properties": {
          "responses": {
            "items": {
              "$ref": "#/components/schemas/AssociatedBudgetRuleResponse"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CreateBrandVideoAd": {
        "properties": {
          "adGroupId": {
            "description": "The adGroup identifier.",
            "type": "string"
          },
          "creative": {
            "$ref": "#/components/schemas/CreateBrandVideoCreative"
          },
          "landingPage": {
            "$ref": "#/components/schemas/LandingPage"
          },
          "name": {
            "description": "The name of the ad.",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/CreateOrUpdateEntityState"
          }
        },
        "required": [
          "adGroupId",
          "creative",
          "landingPage",
          "name",
          "state"
        ],
        "type": "object"
      },
      "CreateBrandVideoCreative": {
        "properties": {
          "asins": {
            "items": {
              "type": "string"
            },
            "maxItems": 3,
            "minItems": 0,
            "type": "array"
          },
          "brandLogoAssetID": {
            "type": "string"
          },
          "brandLogoCrop": {
            "$ref": "#/components/schemas/BrandLogoCrop"
          },
          "brandName": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string"
          },
          "consentToTranslate": {
            "description": "If set to true and the headline and/or video are not in the marketplace's default language, Amazon will attempt to translate them to the marketplace's default language. If Amazon is unable to translate them, the ad will be rejected by moderation. We only support translating headlines and videos from English to German, French, Italian, Spanish, Japanese, and Dutch. See developer notes for more information.",
            "type": "boolean"
          },
          "headline": {
            "description": "The headline text. Maximum length of the string is 50 characters for all marketplaces other than Japan, which has a maximum length of 35 characters.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "videoAssetIds": {
            "items": {
              "type": "string"
            },
            "maxItems": 1,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "CreateBrandVideoCreativeRequestContent": {
        "properties": {
          "adId": {
            "description": "The unique ID of a Sponsored Brands ad.",
            "type": "string"
          },
          "creative": {
            "$ref": "#/components/schemas/BrandVideoCreative"
          }
        },
        "required": [
          "adId",
          "creative"
        ],
        "type": "object"
      },
      "CreateBrandVideoCreativeResponseContent": {
        "description": "Create creative response",
        "properties": {
          "adId": {
            "description": "The unique ID of a Sponsored Brands ad.",
            "type": "string"
          },
          "creativeVersion": {
            "description": "The version identifier that helps you keep track of multiple versions of a submitted (non-draft) Sponsored Brands creative.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateBudgetRulesResponse": {
        "properties": {
          "responses": {
            "items": {
              "$ref": "#/components/schemas/BudgetRuleResponse"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CreateCampaign": {
        "properties": {
          "bidding": {
            "$ref": "#/components/schemas/Bidding"
          },
          "brandEntityId": {
            "description": "Please note that brandEntityId is only required for sellers. You can get the brandEntityId by calling the [GET /brands](https://advertising.amazon.com/API/docs/en-us/sponsored-brands/3-0/openapi#tag/Brands/operation/getBrands) endpoint.",
            "type": "string"
          },
          "budget": {
            "description": "The budget of the campaign.",
            "format": "double",
            "type": "number"
          },
          "budgetType": {
            "$ref": "#/components/schemas/BudgetType"
          },
          "costType": {
            "description": "The costType can be set to determines how the campaign will bid and charge. To view the bid maximums and minimums by geography and costType, see https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace\n- CPC [Default] - Cost per click. The performance of this campaign is measured by the clicks triggered by the ad.\n- VCPM - Cost per 1000 viewable impressions. The performance of this campaign is measured by the viewable impressions triggered by the ad.",
            "type": "string"
          },
          "endDate": {
            "description": "endDate is optional. If endDate is specified, startDate must be specified as well.",
            "pattern": "^20[1-9][0-9]-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string"
          },
          "goal": {
            "description": "Goal will allow you to set goal type to help drive your campaign performance. If no goal is selected then it will default to PAGE_VISIT.\nThe goal type of the campaign.\n- BRAND_IMPRESSION_SHARE - This goal will allow you grown your brand impression share on top of search placement\n- PAGE_VISIT [DEFAULT] - This goal drives traffic to your landing and detail pages through all placements.",
            "type": "string"
          },
          "name": {
            "description": "The name of the campaign.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "portfolioId": {
            "description": "The identifier of an existing portfolio to which the campaign is associated.",
            "type": "string"
          },
          "productLocation": {
            "$ref": "#/components/schemas/ProductLocation"
          },
          "siteRestrictions": {
            "description": "Restrict the ad to a particular site. siteRestrictions is an optional field.  If this field is not set, ads from the campaign will appear on Amazon - including both Amazon retail and Amazon Business. \nPlease note that:\n1) AMAZON_BUSINESS option is only available for Amazon Business operated marketplaces (US, CA, MX, UK, DE, FR, IT, ES, IN, JP);\n2) siteRestrictions cannot be changed post campaign creation;\n3) siteRestrictions doesn't support shopperCohortBidding setting.",
            "items": {
              "$ref": "#/components/schemas/SiteRestriction"
            },
            "maxItems": 1,
            "minItems": 1,
            "type": "array"
          },
          "smartDefault": {
            "description": "The smartDefault specifies a list of the smart default options for the campaign.\n\n`smartDefault` is optional for create campaign requests. `smartDefault` are applicable to all applicable child entities of the campaign and are not editable once the campaign is created. When using [\"TARGETING\"], targets will be automatically added based on the goal selected.  When [\"MANUAL\"] is selected, you will still be required to manually add targets.\n\nIf you don't specify `smartDefault`, default value will be applied based on `goal` . If campaign's `goal` is selected, `smartDefault` will be set to [\"TARGETING\"].  Otherwise, a campaign's `smartDefault` will be set to [\"MANUAL\"].\n\nEach element in smartDefault can be set to determines which default strategy to be used\n- MANUAL - Manual settings, no smart default be applied to the campaign, if MANUAL is added in the list, no other items are allowed in the list (the list must contains only one item)\n- TARGETING - Smart Default Targeting creation, will automatically creating targetings when create ad group\n\nExample: [\"TARGETING\"]",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "startDate": {
            "description": "startDate is optional. If startDate is not specified, current date will be used.",
            "pattern": "^20[1-9][0-9]-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/CreateOrUpdateEntityState"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          }
        },
        "required": [
          "budget",
          "budgetType",
          "name",
          "state"
        ],
        "type": "object"
      },
      "CreateExtendedProductCollectionAd": {
        "properties": {
          "adGroupId": {
            "description": "The adGroup identifier.",
            "type": "string"
          },
          "creative": {
            "$ref": "#/components/schemas/CreateExtendedProductCollectionCreative"
          },
          "landingPage": {
            "$ref": "#/components/schemas/LandingPage"
          },
          "name": {
            "description": "The name of the ad.",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/CreateOrUpdateEntityState"
          }
        },
        "required": [
          "adGroupId",
          "creative",
          "landingPage",
          "name",
          "state"
        ],
        "type": "object"
      },
      "CreateExtendedProductCollectionCreative": {
        "properties": {
          "asins": {
            "items": {
              "type": "string"
            },
            "maxItems": 3,
            "minItems": 0,
            "type": "array"
          },
          "brandLogoAssetID": {
            "type": "string"
          },
          "brandLogoCrop": {
            "$ref": "#/components/schemas/BrandLogoCrop"
          },
          "brandName": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string"
          },
          "consentToTranslate": {
            "description": "If set to true and the headline and/or video are not in the marketplace's default language, Amazon will attempt to translate them to the marketplace's default language. If Amazon is unable to translate them, the ad will be rejected by moderation. We only support translating headlines and videos from English to German, French, Italian, Spanish, Japanese, and Dutch. See developer notes for more information.",
            "type": "boolean"
          },
          "creativePropertiesToOptimize": {
            "description": "If this property is enabled, Sponsored Brands will dynamically optimize by enhancing or generating creative properties based on shopper search intent.",
            "items": {
              "$ref": "#/components/schemas/CreativePropertyToOptimize"
            },
            "maxItems": 1,
            "minItems": 0,
            "type": "array"
          },
          "customImages": {
            "description": "Requires minimum one custom image. You can add an optional collection of custom images that can be displayed on the ad as slideshow. Learn more about slideshow here https://advertising.amazon.com/resources/whats-new/slideshow-ads-creative-for-sponsored-brands/",
            "items": {
              "$ref": "#/components/schemas/CustomImage"
            },
            "maxItems": 5,
            "minItems": 1,
            "type": "array",
            "uniqueItems": true
          },
          "headline": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateExtendedProductCollectionCreativeRequestContent": {
        "properties": {
          "adId": {
            "description": "The unique ID of a Sponsored Brands ad.",
            "type": "string"
          },
          "creative": {
            "$ref": "#/components/schemas/ExtendedProductCollectionCreative"
          }
        },
        "required": [
          "adId",
          "creative"
        ],
        "type": "object"
      },
      "CreateExtendedProductCollectionCreativeResponseContent": {
        "description": "Create creative response",
        "properties": {
          "adId": {
            "description": "The unique ID of a Sponsored Brands ad.",
            "type": "string"
          },
          "creativeVersion": {
            "description": "The version identifier that helps you keep track of multiple versions of a submitted (non-draft) Sponsored Brands creative.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateOptimizationRule": {
        "properties": {
          "conditions": {
            "items": {
              "$ref": "#/components/schemas/RuleCondition"
            },
            "maxItems": 1,
            "minItems": 1,
            "type": "array"
          },
          "entityId": {
            "description": "Entity object identifier.",
            "type": "string"
          },
          "entityType": {
            "description": "Enum: \"CAMPAIGN\"\n\nThe type of entity passed.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateOptimizationRuleSuccessResponseItem": {
        "properties": {
          "entityId": {
            "description": "Entity object identifier.",
            "type": "string"
          },
          "entityType": {
            "type": "string"
          },
          "index": {
            "description": "The index of the entityId in the array from the request body.",
            "maximum": 10,
            "minimum": 0,
            "type": "number"
          },
          "optimizationRule": {
            "$ref": "#/components/schemas/OptimizationRule"
          },
          "optimizationRuleId": {
            "description": "The identifier of the optimization rule.",
            "type": "string"
          }
        },
        "required": [
          "entityId",
          "entityType",
          "index",
          "optimizationRule",
          "optimizationRuleId"
        ],
        "type": "object"
      },
      "CreateOrUpdateEntityState": {
        "description": "Entity state for create or update operation.",
        "enum": [
          "ENABLED",
          "PAUSED"
        ],
        "type": "string"
      },
      "CreateProductCollectionAd": {
        "properties": {
          "adGroupId": {
            "description": "The adGroup identifier.",
            "type": "string"
          },
          "creative": {
            "$ref": "#/components/schemas/CreateProductCollectionCreative"
          },
          "landingPage": {
            "$ref": "#/components/schemas/LandingPage"
          },
          "name": {
            "description": "The name of the ad.",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/CreateOrUpdateEntityState"
          }
        },
        "required": [
          "adGroupId",
          "creative",
          "landingPage",
          "name",
          "state"
        ],
        "type": "object"
      },
      "CreateProductCollectionCreative": {
        "properties": {
          "asins": {
            "items": {
              "type": "string"
            },
            "maxItems": 3,
            "minItems": 0,
            "type": "array"
          },
          "brandLogoAssetID": {
            "type": "string"
          },
          "brandLogoCrop": {
            "$ref": "#/components/schemas/BrandLogoCrop"
          },
          "brandName": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string"
          },
          "customImageAssetId": {
            "type": "string"
          },
          "customImageCrop": {
            "$ref": "#/components/schemas/CustomImageCrop"
          },
          "headline": {
            "description": "The headline text. Maximum length of the string is 50 characters for all marketplaces other than Japan, which has a maximum length of 35 characters.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateProductCollectionCreativeRequestContent": {
        "properties": {
          "adId": {
            "description": "The unique ID of a Sponsored Brands ad.",
            "type": "string"
          },
          "creative": {
            "$ref": "#/components/schemas/ProductCollectionCreative"
          }
        },
        "required": [
          "adId",
          "creative"
        ],
        "type": "object"
      },
      "CreateProductCollectionCreativeResponseContent": {
        "description": "Create creative response",
        "properties": {
          "adId": {
            "description": "The unique ID of a Sponsored Brands ad.",
            "type": "string"
          },
          "creativeVersion": {
            "description": "The version identifier that helps you keep track of multiple versions of a submitted (non-draft) Sponsored Brands creative.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateSBBudgetRulesRequest": {
        "properties": {
          "budgetRulesDetails": {
            "description": "A list of budget rule details.",
            "items": {
              "$ref": "#/components/schemas/SBBudgetRuleDetails"
            },
            "maxItems": 25,
            "type": "array"
          }
        },
        "type": "object"
      },
      "CreateSDBudgetRulesRequest": {
        "properties": {
          "budgetRulesDetails": {
            "description": "A list of budget rule details.",
            "items": {
              "$ref": "#/components/schemas/SDBudgetRuleDetails"
            },
            "maxItems": 25,
            "type": "array"
          }
        },
        "type": "object"
      },
      "CreateSPBudgetRulesRequest": {
        "properties": {
          "budgetRulesDetails": {
            "description": "A list of budget rule details.",
            "items": {
              "$ref": "#/components/schemas/SPBudgetRuleDetails"
            },
            "maxItems": 25,
            "type": "array"
          }
        },
        "type": "object"
      },
      "CreateSponsoredBrandStoreSpotlightAdsBetaRequestContent": {
        "properties": {
          "ads": {
            "items": {
              "$ref": "#/components/schemas/CreateStoreSpotlightAd"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "ads"
        ],
        "type": "object"
      },
      "CreateSponsoredBrandStoreSpotlightAdsBetaResponseContent": {
        "properties": {
          "ads": {
            "$ref": "#/components/schemas/BulkAdOperationResponse"
          }
        },
        "type": "object"
      },
      "CreateSponsoredBrandStoreSpotlightAdsRequestContent": {
        "properties": {
          "ads": {
            "items": {
              "$ref": "#/components/schemas/CreateStoreSpotlightAd"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "ads"
        ],
        "type": "object"
      },
      "CreateSponsoredBrandStoreSpotlightAdsResponseContent": {
        "properties": {
          "ads": {
            "$ref": "#/components/schemas/BulkAdOperationResponse"
          }
        },
        "type": "object"
      },
      "CreateSponsoredBrandsAdGroupsBetaRequestContent": {
        "properties": {
          "adGroups": {
            "items": {
              "$ref": "#/components/schemas/CreateAdGroup"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "adGroups"
        ],
        "type": "object"
      },
      "CreateSponsoredBrandsAdGroupsBetaResponseContent": {
        "properties": {
          "adGroups": {
            "$ref": "#/components/schemas/BulkAdGroupOperationResponse"
          }
        },
        "type": "object"
      },
      "CreateSponsoredBrandsAdGroupsRequestContent": {
        "properties": {
          "adGroups": {
            "items": {
              "$ref": "#/components/schemas/CreateAdGroup"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "adGroups"
        ],
        "type": "object"
      },
      "CreateSponsoredBrandsAdGroupsResponseContent": {
        "properties": {
          "adGroups": {
            "$ref": "#/components/schemas/BulkAdGroupOperationResponse"
          }
        },
        "type": "object"
      },
      "CreateSponsoredBrandsBrandVideoAdsBetaRequestContent": {
        "properties": {
          "ads": {
            "items": {
              "$ref": "#/components/schemas/CreateBrandVideoAd"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "ads"
        ],
        "type": "object"
      },
      "CreateSponsoredBrandsBrandVideoAdsBetaResponseContent": {
        "properties": {
          "ads": {
            "$ref": "#/components/schemas/BulkAdOperationResponse"
          }
        },
        "type": "object"
      },
      "CreateSponsoredBrandsBrandVideoAdsRequestContent": {
        "properties": {
          "ads": {
            "items": {
              "$ref": "#/components/schemas/CreateBrandVideoAd"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "ads"
        ],
        "type": "object"
      },
      "CreateSponsoredBrandsBrandVideoAdsResponseContent": {
        "properties": {
          "ads": {
            "$ref": "#/components/schemas/BulkAdOperationResponse"
          }
        },
        "type": "object"
      },
      "CreateSponsoredBrandsCampaignsBetaRequestContent": {
        "properties": {
          "campaigns": {
            "items": {
              "$ref": "#/components/schemas/CreateCampaign"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "campaigns"
        ],
        "type": "object"
      },
      "CreateSponsoredBrandsCampaignsBetaResponseContent": {
        "properties": {
          "campaigns": {
            "$ref": "#/components/schemas/BulkCampaignOperationResponse"
          }
        },
        "type": "object"
      },
      "CreateSponsoredBrandsCampaignsRequestContent": {
        "properties": {
          "campaigns": {
            "items": {
              "$ref": "#/components/schemas/CreateCampaign"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "campaigns"
        ],
        "type": "object"
      },
      "CreateSponsoredBrandsCampaignsResponseContent": {
        "properties": {
          "campaigns": {
            "$ref": "#/components/schemas/BulkCampaignOperationResponse"
          }
        },
        "type": "object"
      },
      "CreateSponsoredBrandsExtendedProductCollectionAdsRequestContent": {
        "properties": {
          "ads": {
            "description": "An array of Product Collection ad objects to create. Maximum length of the array is 10 objects.",
            "items": {
              "$ref": "#/components/schemas/CreateExtendedProductCollectionAd"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "ads"
        ],
        "type": "object"
      },
      "CreateSponsoredBrandsExtendedProductCollectionAdsResponseContent": {
        "properties": {
          "ads": {
            "$ref": "#/components/schemas/BulkAdOperationResponse"
          }
        },
        "type": "object"
      },
      "CreateSponsoredBrandsOptimizationRulesRequestContent": {
        "properties": {
          "optimizationRules": {
            "items": {
              "$ref": "#/components/schemas/CreateOptimizationRule"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "optimizationRules"
        ],
        "type": "object"
      },
      "CreateSponsoredBrandsOptimizationRulesResponseContent": {
        "properties": {
          "optimizationRules": {
            "$ref": "#/components/schemas/BulkCreateOptimizationRuleOperationResponse"
          }
        },
        "required": [
          "optimizationRules"
        ],
        "type": "object"
      },
      "CreateSponsoredBrandsProductCollectionAdsBetaRequestContent": {
        "properties": {
          "ads": {
            "items": {
              "$ref": "#/components/schemas/CreateProductCollectionAd"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "ads"
        ],
        "type": "object"
      },
      "CreateSponsoredBrandsProductCollectionAdsBetaResponseContent": {
        "properties": {
          "ads": {
            "$ref": "#/components/schemas/BulkAdOperationResponse"
          }
        },
        "type": "object"
      },
      "CreateSponsoredBrandsProductCollectionAdsRequestContent": {
        "properties": {
          "ads": {
            "items": {
              "$ref": "#/components/schemas/CreateProductCollectionAd"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "ads"
        ],
        "type": "object"
      },
      "CreateSponsoredBrandsProductCollectionAdsResponseContent": {
        "properties": {
          "ads": {
            "$ref": "#/components/schemas/BulkAdOperationResponse"
          }
        },
        "type": "object"
      },
      "CreateSponsoredBrandsVideoAdsBetaRequestContent": {
        "properties": {
          "ads": {
            "items": {
              "$ref": "#/components/schemas/CreateVideoAd"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "ads"
        ],
        "type": "object"
      },
      "CreateSponsoredBrandsVideoAdsBetaResponseContent": {
        "properties": {
          "ads": {
            "$ref": "#/components/schemas/BulkAdOperationResponse"
          }
        },
        "type": "object"
      },
      "CreateSponsoredBrandsVideoAdsRequestContent": {
        "properties": {
          "ads": {
            "items": {
              "$ref": "#/components/schemas/CreateVideoAd"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "ads"
        ],
        "type": "object"
      },
      "CreateSponsoredBrandsVideoAdsResponseContent": {
        "properties": {
          "ads": {
            "$ref": "#/components/schemas/BulkAdOperationResponse"
          }
        },
        "type": "object"
      },
      "CreateStoreSpotlightAd": {
        "properties": {
          "adGroupId": {
            "description": "The adGroup identifier.",
            "type": "string"
          },
          "creative": {
            "$ref": "#/components/schemas/CreateStoreSpotlightCreative"
          },
          "landingPage": {
            "$ref": "#/components/schemas/LandingPage"
          },
          "name": {
            "description": "The name of the ad.",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/CreateOrUpdateEntityState"
          }
        },
        "required": [
          "adGroupId",
          "creative",
          "landingPage",
          "name",
          "state"
        ],
        "type": "object"
      },
      "CreateStoreSpotlightCreative": {
        "properties": {
          "brandLogoAssetID": {
            "type": "string"
          },
          "brandLogoCrop": {
            "$ref": "#/components/schemas/BrandLogoCrop"
          },
          "brandName": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string"
          },
          "consentToTranslate": {
            "description": "If set to true and the headline and/or video are not in the marketplace's default language, Amazon will attempt to translate them to the marketplace's default language. If Amazon is unable to translate them, the ad will be rejected by moderation. We only support translating headlines and videos from English to German, French, Italian, Spanish, Japanese, and Dutch. See developer notes for more information.",
            "type": "boolean"
          },
          "creativePropertiesToOptimize": {
            "description": "If this property is enabled, Sponsored Brands will dynamically optimize by enhancing or generating creative properties based on shopper search intent.",
            "items": {
              "$ref": "#/components/schemas/CreativePropertyToOptimize"
            },
            "maxItems": 1,
            "minItems": 0,
            "type": "array"
          },
          "headline": {
            "description": "The headline text. Maximum length of the string is 50 characters for all marketplaces other than Japan, which has a maximum length of 35 characters.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "subpages": {
            "items": {
              "$ref": "#/components/schemas/Subpage"
            },
            "maxItems": 3,
            "minItems": 3,
            "type": "array"
          }
        },
        "type": "object"
      },
      "CreateStoreSpotlightCreativeRequestContent": {
        "properties": {
          "adId": {
            "description": "The unique ID of a Sponsored Brands ad.",
            "type": "string"
          },
          "creative": {
            "$ref": "#/components/schemas/StoreSpotlightCreative"
          }
        },
        "required": [
          "adId",
          "creative"
        ],
        "type": "object"
      },
      "CreateStoreSpotlightCreativeResponseContent": {
        "description": "Create creative response",
        "properties": {
          "adId": {
            "description": "The unique ID of a Sponsored Brands ad.",
            "type": "string"
          },
          "creativeVersion": {
            "description": "The version identifier that helps you keep track of multiple versions of a submitted (non-draft) Sponsored Brands creative.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateVideoAd": {
        "properties": {
          "adGroupId": {
            "description": "The adGroup identifier.",
            "type": "string"
          },
          "creative": {
            "$ref": "#/components/schemas/CreateVideoCreative"
          },
          "name": {
            "description": "The name of the ad.",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/CreateOrUpdateEntityState"
          }
        },
        "required": [
          "adGroupId",
          "creative",
          "name",
          "state"
        ],
        "type": "object"
      },
      "CreateVideoCreative": {
        "properties": {
          "asins": {
            "items": {
              "type": "string"
            },
            "maxItems": 1,
            "minItems": 1,
            "type": "array"
          },
          "consentToTranslate": {
            "description": "If set to true and the headline and/or video are not in the marketplace's default language, Amazon will attempt to translate them to the marketplace's default language. If Amazon is unable to translate them, the ad will be rejected by moderation. We only support translating headlines and videos from English to German, French, Italian, Spanish, Japanese, and Dutch. See developer notes for more information.",
            "type": "boolean"
          },
          "videoAssetIds": {
            "description": "In SB API V4, `videoMediaIds` is replaced by `videoAssetIds`.\n`videoAssetIds` will only allow Asset Library identifiers for ad creation, but responses can include mediaIds for v1 campaigns and API V3 operations.\nAt a future state, existing mediaIds will be added to Asset library for use in SB campaigns.",
            "items": {
              "type": "string"
            },
            "maxItems": 1,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "CreateVideoCreativeRequestContent": {
        "properties": {
          "adId": {
            "description": "The unique ID of a Sponsored Brands ad.",
            "type": "string"
          },
          "creative": {
            "$ref": "#/components/schemas/VideoCreative"
          }
        },
        "required": [
          "adId",
          "creative"
        ],
        "type": "object"
      },
      "CreateVideoCreativeResponseContent": {
        "description": "Create creative response",
        "properties": {
          "adId": {
            "description": "The unique ID of a Sponsored Brands ad.",
            "type": "string"
          },
          "creativeVersion": {
            "description": "The version identifier that helps you keep track of multiple versions of a submitted (non-draft) Sponsored Brands creative.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Creative": {
        "properties": {
          "asins": {
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "brandLogoAssetID": {
            "type": "string"
          },
          "brandLogoCrop": {
            "$ref": "#/components/schemas/BrandLogoCrop"
          },
          "brandLogoUrl": {
            "type": "string"
          },
          "brandName": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string"
          },
          "consentToTranslate": {
            "description": "If set to true and the headline and/or video asset are not in the marketplace's default language, Amazon will attempt to translate them to the marketplace's default language. If Amazon is unable to translate them, the ad will be rejected by moderation. We only support translating headlines and videos from English to German, French, Italian, Spanish, Japanese, and Dutch. See developer notes for more information.",
            "type": "boolean"
          },
          "creativePropertiesToOptimize": {
            "description": "If this property is enabled, Sponsored Brands will dynamically optimize by enhancing or generating creative properties based on shopper search intent.",
            "items": {
              "$ref": "#/components/schemas/CreativePropertyToOptimize"
            },
            "maxItems": 1,
            "minItems": 0,
            "type": "array"
          },
          "creativeStatus": {
            "$ref": "#/components/schemas/CreativeStatus"
          },
          "creativeVersion": {
            "description": "The version identifier that helps you keep track of multiple versions of a submitted (non-draft) Sponsored Brands creative.",
            "type": "string"
          },
          "customImageAssetId": {
            "type": "string"
          },
          "customImageCrop": {
            "$ref": "#/components/schemas/CustomImageCrop"
          },
          "customImageUrl": {
            "type": "string"
          },
          "customImages": {
            "description": "Requires minimum one custom image. You can add an optional collection of custom images that can be displayed on the ad as slideshow. Learn more about slideshow here https://advertising.amazon.com/resources/whats-new/slideshow-ads-creative-for-sponsored-brands/",
            "items": {
              "$ref": "#/components/schemas/CustomImage"
            },
            "maxItems": 5,
            "minItems": 1,
            "type": "array",
            "uniqueItems": true
          },
          "headline": {
            "description": "The headline text. Maximum length of the string is 50 characters for all marketplaces other than Japan, which has a maximum length of 35 characters.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "originalHeadline": {
            "description": "The original headline submitted by the advertiser.",
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "originalVideoAssetIds": {
            "description": "The assetIds of the original videos submitted by the advertiser.\nIf 'consentToTranslate' is set to true and translation is SUCCESSFUL then `originalVideoAssetIds` will return the original video assetId whereas `videoAssetIds` will return translated video assetId. In all other cases, 'originalVideoAssetIds' and `videoAssetIds` both will return original video assetId.",
            "items": {
              "type": "string"
            },
            "maxItems": 1,
            "minItems": 1,
            "type": "array"
          },
          "subpages": {
            "items": {
              "$ref": "#/components/schemas/Subpage"
            },
            "maxItems": 3,
            "minItems": 3,
            "type": "array"
          },
          "type": {
            "$ref": "#/components/schemas/CreativeType"
          },
          "videoAssetIds": {
            "description": "In SB API V4, `videoMediaIds` is replaced by `videoAssetIds`.\n`videoAssetIds` will only allow Asset Library identifiers for ad creation, but responses can include mediaIds for v1 campaigns and API V3 operations.\nAt a future state, existing mediaIds will be added to Asset library for use in SB campaigns.",
            "items": {
              "type": "string"
            },
            "maxItems": 1,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "CreativeImageRecommendationEntry": {
        "properties": {
          "assetId": {
            "description": "The identifier of image/video asset from the store's asset library",
            "type": "string"
          },
          "contentType": {
            "$ref": "#/components/schemas/MediaType"
          },
          "height": {
            "description": "The height of the asset in pixels",
            "type": "number"
          },
          "imageUrl": {
            "description": "The URL of the asset",
            "type": "string"
          },
          "name": {
            "description": "The fileName of the asset",
            "type": "string"
          },
          "score": {
            "description": "Recommendations with higher values are more relevant",
            "format": "double",
            "maximum": 1,
            "minimum": 0,
            "type": "number"
          },
          "sizeInBytes": {
            "description": "The asset size in bytes",
            "type": "number"
          },
          "width": {
            "description": "The width of the asset in pixels",
            "type": "number"
          }
        },
        "type": "object"
      },
      "CreativeImageRecommendationRequestContent": {
        "properties": {
          "asins": {
            "description": "-----------------------------------------------\nList types\n-----------------------------------------------\nA list of ASINs",
            "items": {
              "description": "ASIN",
              "type": "string"
            },
            "maxItems": 3,
            "minItems": 1,
            "type": "array"
          },
          "assetPrograms": {
            "description": "Filter assets by program types. For example, if only [A_PLUS] assets are requested then only assets that were used as A+ content will be recommended. If no program type is provided, recommend assets from all programs",
            "items": {
              "$ref": "#/components/schemas/ProgramType"
            },
            "maxItems": 7,
            "minItems": 0,
            "type": "array"
          },
          "assetSubType": {
            "$ref": "#/components/schemas/AssetSubType"
          },
          "headline": {
            "description": "The headline text. Maximum length of the string is 50 characters for all marketplaces other than Japan, which has a maximum length of 35 characters.\nSee [the policy](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#headlines) for headline requirements.",
            "type": "string"
          },
          "locale": {
            "description": "(Optional) locale of creative headline and ASIN titles. If locale is not provided, default locale of marketplace is used.\nCurrently, only en_US and en_CA are supported.",
            "type": "string"
          },
          "maxNumRecommendations": {
            "description": "Maximum number of recommendations that API should return. Response will [0, recommendations] recommendations (recommendations are not guaranteed).",
            "maximum": 20,
            "minimum": 1,
            "type": "number"
          }
        },
        "required": [
          "asins"
        ],
        "type": "object"
      },
      "CreativeImageRecommendationResponseContent": {
        "properties": {
          "recommendations": {
            "description": "Recommendations are sorted on relevancy score, i.e. more relevant image has lesser array index value",
            "items": {
              "$ref": "#/components/schemas/CreativeImageRecommendationEntry"
            },
            "maxItems": 20,
            "minItems": 0,
            "type": "array"
          },
          "totalResults": {
            "description": "The total number of results returned by an operation.",
            "type": "number"
          }
        },
        "type": "object"
      },
      "CreativeLandingPage": {
        "description": "Landing page.",
        "properties": {
          "asins": {
            "description": "The list of asins on the landingPage If type is PRODUCT_LIST.",
            "items": {
              "description": "ASIN",
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "type": {
            "$ref": "#/components/schemas/CreativeLandingPageType"
          },
          "value": {
            "description": "The url of the landingPage.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreativeLandingPageType": {
        "description": "Landing page type",
        "enum": [
          "PRODUCT_LIST",
          "STORE",
          "DETAIL_PAGE",
          "CUSTOM_URL",
          "AD_LANDING_PREVIEW",
          "SEARCH",
          "BROWSE",
          "ADVERTISING_LANDING_PAGE",
          "UNKNOWN"
        ],
        "type": "string"
      },
      "CreativeLandingPageV2": {
        "description": "Landing page V2, where type is String with allowed values listed, and url or asins of that type.",
        "properties": {
          "asins": {
            "description": "The list of asins on the landingPage If type is PRODUCT_LIST. A minimum of 3 asins are required. For the 'PRODUCT_LIST' type, the asins property is mandatory, and the url should not be included.",
            "items": {
              "description": "ASIN",
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "type": {
            "description": "Supported types are PRODUCT_LIST, STORE, DETAIL_PAGE, CUSTOM_URL. More could be added in future.",
            "type": "string"
          },
          "url": {
            "description": "The url of the landingPage. When including the 'asins' property in the request, do not include this property, as they are mutually exclusive. For the PRODUCT_LIST type, the asins property is mandatory, and the url should not be included.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreativeProperties": {
        "description": "Creative properties",
        "properties": {
          "asins": {
            "description": "-----------------------------------------------\nList types\n-----------------------------------------------\nA list of ASINs",
            "items": {
              "description": "ASIN",
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "brandLogoAssetId": {
            "description": "The identifier of image/video asset from the store's asset library",
            "type": "string"
          },
          "brandLogoCrop": {
            "$ref": "#/components/schemas/AssetCrop"
          },
          "brandLogoUrl": {
            "type": "string"
          },
          "brandName": {
            "description": "The displayed brand name in the ad headline.\nMaximum length is 30 characters.\nSee [the policy](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#headlines) for headline requirements.",
            "type": "string"
          },
          "consentToTranslate": {
            "description": "If set to true and the headline and/or video are not in the marketplace's default language, Amazon will attempt to translate them to the marketplace's default language. If Amazon is unable to translate them, the ad will be rejected by moderation. We only support translating headlines and videos from English to German, French, Italian, Spanish, Japanese, and Dutch. See developer notes for more information.",
            "type": "boolean"
          },
          "creativePropertiesToOptimize": {
            "description": "If this property is enabled, Sponsored Brands will dynamically optimize by enhancing or generating creative properties based on shopper search intent.",
            "items": {
              "$ref": "#/components/schemas/CreativePropertyToOptimize"
            },
            "maxItems": 1,
            "minItems": 0,
            "type": "array"
          },
          "customImageAssetId": {
            "description": "The identifier of image/video asset from the store's asset library",
            "type": "string"
          },
          "customImageCrop": {
            "$ref": "#/components/schemas/AssetCrop"
          },
          "customImageUrl": {
            "type": "string"
          },
          "customImages": {
            "description": "An array of customImages associated with the creative.",
            "items": {
              "$ref": "#/components/schemas/CustomImage"
            },
            "maxItems": 5,
            "minItems": 0,
            "type": "array",
            "uniqueItems": true
          },
          "headline": {
            "description": "If 'consentToTranslate' is set to true and translation is SUCCESSFUL then `headline` will return the translated headline whereas `originalHeadline` will return the original headline. In all other cases, 'originalHeadline' and `headline` both will return the original headline.",
            "type": "string"
          },
          "landingPage": {
            "$ref": "#/components/schemas/CreativeLandingPage"
          },
          "originalHeadline": {
            "description": "The original headline submitted by the advertiser.",
            "type": "string"
          },
          "originalVideoAssetIds": {
            "description": "The assetIds of the original videos submitted by the advertiser.\nIf 'consentToTranslate' is set to true and translation is SUCCESSFUL then `originalVideoAssetIds` will return the original video assetId whereas `videoAssetIds` will return translated video assetId. In all other cases, 'originalVideoAssetIds' and `videoAssetIds` both will return original video assetId.",
            "items": {
              "description": "The identifier of image/video asset from the store's asset library",
              "type": "string"
            },
            "maxItems": 1,
            "minItems": 1,
            "type": "array"
          },
          "subpages": {
            "description": "An array of subpages",
            "items": {
              "$ref": "#/components/schemas/Subpage"
            },
            "type": "array"
          },
          "videoAssetIds": {
            "description": "The assetIds of the original videos submitted by the advertiser.\nIf 'consentToTranslate' is set to true and translation is SUCCESSFUL then 'videoAssetIds' will return translated video assetId whereas `originalVideoAssetIds` will return the original video assetId. In all other cases, `videoAssetIds` will return original video assetId.",
            "items": {
              "description": "The identifier of image/video asset from the store's asset library",
              "type": "string"
            },
            "maxItems": 1,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "CreativePropertyToOptimize": {
        "description": "| CreativePropertyToOptimize                            |  Description                                                                            |\n|------------------------------------|-----------------------------------------------------------------------------------------|\n| HEADLINE                            | Optimizes headlines by leveraging provided versions and customizing them based on factors such as audience, placement, and featured products.                                                                            |",
        "enum": [
          "HEADLINE"
        ],
        "type": "string"
      },
      "CreativeRecommendationByIdResponseContent": {
        "description": "Creative Recommendation by Id Response.",
        "properties": {
          "creativeProperties": {
            "$ref": "#/components/schemas/CreativeRecommendationProperties"
          },
          "creativeType": {
            "description": "Supported are PRODUCT_COLLECTION, STORE_SPOTLIGHT, VIDEO, BRAND_VIDEO. More could be added in future.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreativeRecommendationProperties": {
        "description": "Nested Creative Properties Structure for fetching Creative Recommendations.",
        "properties": {
          "asins": {
            "description": "-----------------------------------------------\nList types\n-----------------------------------------------\nA list of ASINs",
            "items": {
              "description": "ASIN",
              "type": "string"
            },
            "maxItems": 3,
            "minItems": 0,
            "type": "array"
          },
          "brandLogo": {
            "$ref": "#/components/schemas/BrandLogo"
          },
          "brandName": {
            "description": "The displayed brand name in the ad headline.\nMaximum length is 30 characters.\nSee [the policy](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#headlines) for headline requirements.",
            "type": "string"
          },
          "customImages": {
            "description": "An array of customImages associated with the creative.",
            "items": {
              "$ref": "#/components/schemas/CustomImage"
            },
            "maxItems": 5,
            "minItems": 0,
            "type": "array",
            "uniqueItems": true
          },
          "headline": {
            "description": "The headline text. Maximum length of the string is 50 characters for all marketplaces other than Japan, which has a maximum length of 35 characters.\nSee [the policy](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#headlines) for headline requirements.",
            "type": "string"
          },
          "landingPage": {
            "$ref": "#/components/schemas/CreativeLandingPageV2"
          },
          "recommendedCreativeId": {
            "description": "a Unique Id identifying the creative Recommendation",
            "type": "string"
          },
          "subpages": {
            "description": "An array of subpages",
            "items": {
              "$ref": "#/components/schemas/Subpage"
            },
            "maxItems": 5,
            "minItems": 0,
            "type": "array"
          },
          "videoAssetIds": {
            "description": "An array of videoAssetIds associated with the creative. Advertisers can get video assetIds from Asset Library /assets/search API.",
            "items": {
              "description": "The identifier of image/video asset from the store's asset library",
              "type": "string"
            },
            "maxItems": 1,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "CreativeRecommendationResultEntry": {
        "description": "Creative Recommendation Result.",
        "properties": {
          "creativeProperties": {
            "$ref": "#/components/schemas/CreativeRecommendationProperties"
          },
          "creativeType": {
            "description": "Supported are PRODUCT_COLLECTION, STORE_SPOTLIGHT, VIDEO, BRAND_VIDEO. More could be added in future.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreativeRecommendationsAccessDeniedError": {
        "properties": {
          "code": {
            "description": "Access denied error code.",
            "enum": [
              "ACCESS_DENIED"
            ],
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the error response.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreativeRecommendationsBadRequestError": {
        "properties": {
          "code": {
            "description": "Bad request error code.",
            "enum": [
              "BAD_REQUEST"
            ],
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the error response.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreativeRecommendationsEligibilityRequestContent": {
        "properties": {
          "source": {
            "$ref": "#/components/schemas/Source"
          }
        },
        "required": [
          "source"
        ],
        "type": "object"
      },
      "CreativeRecommendationsEligibilityResponseContent": {
        "properties": {
          "creativeTypes": {
            "description": "Supported are PRODUCT_COLLECTION, STORE_SPOTLIGHT, VIDEO, BRAND_VIDEO. More could be added in future.",
            "items": {
              "type": "string"
            },
            "maxItems": 4,
            "minItems": 0,
            "type": "array",
            "uniqueItems": true
          },
          "isEligible": {
            "description": "Returns false if there is no creative recommendation possible with the given landing page.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "CreativeRecommendationsInternalServerError": {
        "properties": {
          "code": {
            "description": "Internal error code.",
            "enum": [
              "INTERNAL_ERROR"
            ],
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the error response.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreativeRecommendationsNotFoundError": {
        "properties": {
          "code": {
            "description": "Not found error code.",
            "enum": [
              "NOT_FOUND"
            ],
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the error response.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreativeRecommendationsRequest": {
        "description": "Request structure of creative recommendations API.",
        "properties": {
          "adFormat": {
            "description": "Ad format of the creative.",
            "enum": [
              "SPONSORED_BRANDS_VIDEO"
            ],
            "type": "string"
          },
          "asins": {
            "description": "An array of ASINs associated with the creative. Note, do not pass an empty array, this results in an error.",
            "items": {
              "type": "string"
            },
            "maxItems": 3,
            "minItems": 1,
            "type": "array"
          },
          "requiredRecommendations": {
            "description": "Required recommendations details.",
            "items": {
              "$ref": "#/components/schemas/RequiredRecommendations"
            },
            "maxItems": 2,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "asins",
          "requiredRecommendations",
          "adFormat"
        ],
        "type": "object"
      },
      "CreativeRecommendationsRequestContent": {
        "properties": {
          "creativeType": {
            "description": "Supported are PRODUCT_COLLECTION, STORE_SPOTLIGHT, VIDEO, BRAND_VIDEO. More could be added in future.",
            "type": "string"
          },
          "maxResults": {
            "description": "Set a limit on the number of results returned by an operation.",
            "maximum": 5,
            "minimum": 1,
            "type": "number"
          },
          "nextToken": {
            "description": "Operations that return paginated results include a pagination token in this field.\nTo retrieve the next page of results, call the same operation and specify this token in the request.\nIf the `NextToken` field is empty, there are no further results.",
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/Source"
          }
        },
        "required": [
          "creativeType",
          "source"
        ],
        "type": "object"
      },
      "CreativeRecommendationsResponse": {
        "properties": {
          "primaryHeadlines": {
            "$ref": "#/components/schemas/PrimaryHeadlineRecommendationGroups"
          },
          "secondaryHeadlines": {
            "$ref": "#/components/schemas/SecondaryHeadlineRecommendationGroups"
          }
        },
        "type": "object"
      },
      "CreativeRecommendationsResponseContent": {
        "properties": {
          "creatives": {
            "description": "A list of creatives",
            "items": {
              "$ref": "#/components/schemas/CreativeRecommendationResultEntry"
            },
            "maxItems": 5,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "description": "Operations that return paginated results include a pagination token in this field.\nTo retrieve the next page of results, call the same operation and specify this token in the request.\nIf the `NextToken` field is empty, there are no further results.",
            "type": "string"
          },
          "totalResults": {
            "description": "The total number of results returned by an operation.",
            "type": "number"
          }
        },
        "type": "object"
      },
      "CreativeRecommendationsThrottlingError": {
        "properties": {
          "code": {
            "description": "Throttled error code.",
            "enum": [
              "THROTTLED"
            ],
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the error response.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreativeStatus": {
        "description": "The lifecycle status of a creative",
        "enum": [
          "SUBMITTED_FOR_MODERATION",
          "PENDING_TRANSLATION",
          "PENDING_MODERATION_REVIEW",
          "APPROVED_BY_MODERATION",
          "REJECTED_BY_MODERATION",
          "PUBLISHED"
        ],
        "type": "string"
      },
      "CreativeType": {
        "description": "The creative type of SB ad.",
        "enum": [
          "PRODUCT_COLLECTION",
          "STORE_SPOTLIGHT",
          "VIDEO",
          "BRAND_VIDEO"
        ],
        "type": "string"
      },
      "CustomImage": {
        "properties": {
          "assetId": {
            "type": "string"
          },
          "crop": {
            "$ref": "#/components/schemas/CustomImageCrop"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CustomImageCrop": {
        "description": "The crop to apply to the selected Custom image. A Custom image must have a 1200x628 aspect ratio, with a .01 delta for floating point precision. If a customImageAssetId is supplied but a crop is not, the crop will be defaulted to the whole image.",
        "properties": {
          "height": {
            "type": "number"
          },
          "left": {
            "type": "number"
          },
          "top": {
            "type": "number"
          },
          "width": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "DateComponent": {
        "description": "Date component which needs to be pre moderated. Either startDate or endDate must be populated, or both can be populated.",
        "properties": {
          "componentType": {
            "description": "Type of the date component.",
            "enum": [
              "CAMPAIGN_DATE"
            ],
            "type": "string"
          },
          "endDate": {
            "description": "End date of the component in yyyy-MM-dd HH:mm:ss format",
            "type": "string"
          },
          "id": {
            "description": "Id of the component. The same will be returned as part of the response as well. This can be used to uniquely identify the component from the pre moderation response.",
            "type": "string"
          },
          "startDate": {
            "description": "Start date of the component in yyyy-MM-dd HH:mm:ss format",
            "type": "string"
          }
        },
        "required": [
          "componentType",
          "id"
        ],
        "type": "object"
      },
      "DateComponentResponse": {
        "description": "Pre-moderation result for a date component",
        "properties": {
          "componentType": {
            "description": "Type of the date component.",
            "enum": [
              "CAMPAIGN_DATES"
            ],
            "type": "string"
          },
          "endDate": {
            "description": "End date of the component.",
            "type": "string"
          },
          "id": {
            "description": "Id of the component. This is the same id sent as part of the request. This can be used to uniquely identify the component.",
            "type": "string"
          },
          "policyViolations": {
            "description": "A list of policy violations for the component that were detected during pre moderation. Note that this field is present in the response only when preModerationStatus is set to REJECTED.",
            "items": {
              "$ref": "#/components/schemas/DatePolicyViolation"
            },
            "type": "array"
          },
          "preModerationStatus": {
            "description": "The pre-moderation status of the component.",
            "enum": [
              "REJECTED",
              "APPROVED",
              "FAILED",
              "RETRYABLE_FAILURE"
            ],
            "type": "string"
          },
          "startDate": {
            "description": "Start date of the component.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DateError": {
        "description": "Errors related to dates.",
        "properties": {
          "cause": {
            "$ref": "#/components/schemas/ErrorCause"
          },
          "message": {
            "description": "Human readable error message.",
            "type": "string"
          },
          "reason": {
            "description": "Exact error reason..",
            "type": "string"
          }
        },
        "required": [
          "cause",
          "message",
          "reason"
        ],
        "type": "object"
      },
      "DatePolicyViolation": {
        "properties": {
          "name": {
            "description": "A policy violation code.",
            "type": "string"
          },
          "policyDescription": {
            "description": "A human-readable description of the policy.",
            "example": "example: Advertising alcohol is not allowed",
            "type": "string"
          },
          "policyLinkUrl": {
            "description": "Address of the policy documentation. Follow the link to learn more about the specified policy.",
            "example": "https://advertising.amazon.com/resources/ad-policy/en/creative-acceptance#alcohol",
            "type": "string"
          },
          "type": {
            "description": "Type of policy violation.",
            "enum": [
              "WARNING",
              "REJECTED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "DateRangeTypeRuleDuration": {
        "description": "Object representing date range type rule duration.",
        "properties": {
          "endDate": {
            "description": "The end date of the budget rule in YYYYMMDD format. The end date is inclusive. Required to be equal or greater than `startDate`.",
            "type": "string"
          },
          "startDate": {
            "description": "The start date of the budget rule in YYYYMMDD format. The start date is inclusive. Required to be greater than or equal to current date.",
            "type": "string"
          }
        },
        "required": [
          "startDate"
        ],
        "type": "object"
      },
      "DayOfWeek": {
        "description": "The day of the week.",
        "enum": [
          "MONDAY",
          "TUESDAY",
          "WEDNESDAY",
          "THURSDAY",
          "FRIDAY",
          "SATURDAY",
          "SUNDAY"
        ],
        "type": "string"
      },
      "DeleteSponsoredBrandsAdGroupsBetaRequestContent": {
        "properties": {
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/ObjectIdFilter"
          }
        },
        "type": "object"
      },
      "DeleteSponsoredBrandsAdGroupsBetaResponseContent": {
        "properties": {
          "adGroups": {
            "$ref": "#/components/schemas/BulkAdGroupOperationResponse"
          }
        },
        "type": "object"
      },
      "DeleteSponsoredBrandsAdGroupsRequestContent": {
        "properties": {
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/ObjectIdFilter"
          }
        },
        "type": "object"
      },
      "DeleteSponsoredBrandsAdGroupsResponseContent": {
        "properties": {
          "adGroups": {
            "$ref": "#/components/schemas/BulkAdGroupOperationResponse"
          }
        },
        "type": "object"
      },
      "DeleteSponsoredBrandsAdsBetaRequestContent": {
        "properties": {
          "adIdFilter": {
            "$ref": "#/components/schemas/ObjectIdFilter"
          }
        },
        "type": "object"
      },
      "DeleteSponsoredBrandsAdsBetaResponseContent": {
        "properties": {
          "ads": {
            "$ref": "#/components/schemas/BulkAdOperationResponse"
          }
        },
        "type": "object"
      },
      "DeleteSponsoredBrandsAdsRequestContent": {
        "properties": {
          "adIdFilter": {
            "$ref": "#/components/schemas/ObjectIdFilter"
          }
        },
        "type": "object"
      },
      "DeleteSponsoredBrandsAdsResponseContent": {
        "properties": {
          "ads": {
            "$ref": "#/components/schemas/BulkAdOperationResponse"
          }
        },
        "type": "object"
      },
      "DeleteSponsoredBrandsCampaignsBetaRequestContent": {
        "properties": {
          "campaignIdFilter": {
            "$ref": "#/components/schemas/ObjectIdFilter"
          }
        },
        "type": "object"
      },
      "DeleteSponsoredBrandsCampaignsBetaResponseContent": {
        "properties": {
          "campaigns": {
            "$ref": "#/components/schemas/BulkCampaignOperationResponse"
          }
        },
        "type": "object"
      },
      "DeleteSponsoredBrandsCampaignsRequestContent": {
        "properties": {
          "campaignIdFilter": {
            "$ref": "#/components/schemas/ObjectIdFilter"
          }
        },
        "type": "object"
      },
      "DeleteSponsoredBrandsCampaignsResponseContent": {
        "properties": {
          "campaigns": {
            "$ref": "#/components/schemas/BulkCampaignOperationResponse"
          }
        },
        "type": "object"
      },
      "DisassociateAssociatedBudgetRuleResponse": {
        "type": "object"
      },
      "DisassociateSponsoredBrandsOptimizationRulesRequestContent": {
        "properties": {
          "optimizationRuleDisassociations": {
            "items": {
              "$ref": "#/components/schemas/OptimizationRuleToEntityMapping"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "optimizationRuleDisassociations"
        ],
        "type": "object"
      },
      "DisassociateSponsoredBrandsOptimizationRulesResponseContent": {
        "properties": {
          "optimizationRuleDisassociations": {
            "$ref": "#/components/schemas/BulkDisassociationsOptimizationRuleResponse"
          }
        },
        "required": [
          "optimizationRuleDisassociations"
        ],
        "type": "object"
      },
      "EntityFilter": {
        "description": "Filter optimization rules by entityId and entityType",
        "properties": {
          "entityId": {
            "description": "Entity object identifier.",
            "type": "string"
          },
          "entityType": {
            "description": "Enum: \"CAMPAIGN\"\n\nThe type of entity passed.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EntityState": {
        "description": "The current resource state.",
        "enum": [
          "ENABLED",
          "PAUSED",
          "ARCHIVED"
        ],
        "type": "string"
      },
      "EntityStateFilter": {
        "description": "Filter entities by state.",
        "properties": {
          "include": {
            "items": {
              "$ref": "#/components/schemas/EntityState"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ErrorCause": {
        "description": "Structure describing error cause - location in the payload and data causing error.",
        "properties": {
          "location": {
            "description": "Error location, JSON Path expression specifying element of API payload causing error.",
            "type": "string"
          },
          "trigger": {
            "description": "Optional value causing error.",
            "type": "string"
          }
        },
        "required": [
          "location"
        ],
        "type": "object"
      },
      "ErrorDetails": {
        "properties": {
          "errorCode": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          },
          "index": {
            "description": "The index of the image task in the array from the request body",
            "type": "number"
          }
        },
        "type": "object"
      },
      "EventTypeRuleDuration": {
        "description": "Object representing event type rule duration.",
        "properties": {
          "endDate": {
            "description": "The event end date in YYYYMMDD format. Read-only.",
            "type": "string"
          },
          "eventId": {
            "description": "The event identifier. This value is available from the budget rules recommendation API.",
            "type": "string"
          },
          "eventName": {
            "description": "The event name. Read-only.",
            "type": "string"
          },
          "startDate": {
            "description": "The event start date in YYYYMMDD format. Read-only. Note that this field is present only for announced events.",
            "type": "string"
          }
        },
        "required": [
          "eventId"
        ],
        "type": "object"
      },
      "ExtendedProductCollectionCreative": {
        "properties": {
          "asins": {
            "description": "An array of ASINs associated with the creative.",
            "items": {
              "description": "ASIN",
              "type": "string"
            },
            "maxItems": 3,
            "minItems": 0,
            "type": "array",
            "uniqueItems": true
          },
          "brandLogoAssetId": {
            "description": "The identifier of the [brand logo](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#brandlogo) image from the brand store's asset library.\nNote that for campaigns created in the Amazon Advertising console prior to release of the brand store's assets library, responses will not include a value for this field.",
            "type": "string"
          },
          "brandLogoCrop": {
            "$ref": "#/components/schemas/AssetCrop"
          },
          "brandName": {
            "description": "The displayed brand name in the ad headline.\nMaximum length is 30 characters.\nSee [the policy](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#headlines) for headline requirements.",
            "type": "string"
          },
          "consentToTranslate": {
            "description": "If set to true and the headline and/or video are not in the marketplace's default language, Amazon will attempt to translate them to the marketplace's default language.\nIf Amazon is unable to translate them, the ad will be rejected by moderation. We only support translating headlines and videos from English to German, French, Italian, Spanish, Japanese, and Dutch. See developer notes for more information.",
            "type": "boolean"
          },
          "creativePropertiesToOptimize": {
            "description": "If this property is enabled, Sponsored Brands will dynamically optimize by enhancing or generating creative properties based on shopper search intent.",
            "items": {
              "$ref": "#/components/schemas/CreativePropertyToOptimize"
            },
            "maxItems": 1,
            "minItems": 0,
            "type": "array"
          },
          "customImages": {
            "description": "An array of customImages associated with the creative.",
            "items": {
              "$ref": "#/components/schemas/CustomImage"
            },
            "maxItems": 5,
            "minItems": 1,
            "type": "array",
            "uniqueItems": true
          },
          "headline": {
            "description": "The headline text. Maximum length of the string is 50 characters for all marketplaces other than Japan, which has a maximum length of 35 characters.\nSee [the policy](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#headlines) for headline requirements.",
            "type": "string"
          },
          "landingPage": {
            "$ref": "#/components/schemas/CreativeLandingPageV2"
          }
        },
        "required": [
          "asins",
          "brandLogoAssetId",
          "brandName",
          "headline"
        ],
        "type": "object"
      },
      "GetBudgetRecommendationsRequestContent": {
        "properties": {
          "campaignIds": {
            "description": "List of CampaignIds",
            "items": {
              "description": "The identifier of a campaign.",
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "campaignIds"
        ],
        "type": "object"
      },
      "GetBudgetRecommendationsResponseContent": {
        "properties": {
          "error": {
            "description": "List of errors that occurred when generating budget recommendations.",
            "items": {
              "$ref": "#/components/schemas/BudgetRecommendationError"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "success": {
            "description": "List of successful budget recommendations for campaigns.",
            "items": {
              "$ref": "#/components/schemas/BudgetRecommendation"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "error",
          "success"
        ],
        "type": "object"
      },
      "GetLandingPageMetadataRequestContent": {
        "properties": {
          "adProduct": {
            "description": "An ad product is a top level offering from amazon ads as defined in our marketing, with a given feature set, and business rules and logic applied consistently across the product. Currently the only supported ad product is SPONSORED_BRANDS.\n| Program Type       |\n|--------------------|\n| SPONSORED_BRANDS   |",
            "type": "string"
          },
          "landingPageUrl": {
            "description": "The URL of the landing page.",
            "type": "string"
          }
        },
        "required": [
          "adProduct",
          "landingPageUrl"
        ],
        "type": "object"
      },
      "GetLandingPageMetadataResponseContent": {
        "properties": {
          "canonicalUrl": {
            "description": "A canonical URL is the URL that represents the best version of landing page URL from a group of duplicate landing page URLs.\nFor example, if you have two landing page URLs for the same page (such as amazon.it/HSA/pages/default?pageId=B59A592C-8A12-4684-A37E-2416FD594D87\nand amazon.it/stores/page/B59A592C-8A12-4684-A37E-2416FD594D87), we chooses one as canonical. In this case, canonical url\nis amazon.it/stores/page/B59A592C-8A12-4684-A37E-2416FD594D87",
            "type": "string"
          },
          "isSupported": {
            "description": "This field determines whether the landing page is supported for the ad product.",
            "type": "boolean"
          },
          "pageType": {
            "description": "The type of landing page, such as store page, product list (simple landing page), custom url.\n| Page Type    |\n|--------------|\n| PRODUCT_LIST |\n| STORE        |\n| CUSTOM_URL   |\n| DETAIL_PAGE  |",
            "type": "string"
          },
          "unSupportedReason": {
            "description": "A human-readable description of the unSupportedReasonCode field.",
            "type": "string"
          },
          "unSupportedReasonCode": {
            "description": "Enumerated code for why landing page is unsupported.\n| Reason Code                 |\n| SB_DETAIL_PAGE_UNSUPPORTED  |\n| SB_GATEWAY_PAGE_UNSUPPORTED |\n| SB_SEARCH_PAGE_UNSUPPORTED  |\n| SB_BROWSE_PAGE_UNSUPPORTED  |\n| SB_OTHER_PAGE_UNSUPPORTED   |",
            "type": "string"
          }
        },
        "required": [
          "canonicalUrl",
          "pageType"
        ],
        "type": "object"
      },
      "GetSBBudgetRuleResponse": {
        "properties": {
          "budgetRule": {
            "$ref": "#/components/schemas/SBBudgetRule"
          }
        },
        "type": "object"
      },
      "GetSBBudgetRulesForAdvertiserResponse": {
        "properties": {
          "budgetRulesForAdvertiserResponse": {
            "description": "A list of rules created by the advertiser.",
            "items": {
              "$ref": "#/components/schemas/SBBudgetRule"
            },
            "maxItems": 30,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "description": "To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetSDBudgetRuleResponse": {
        "properties": {
          "budgetRule": {
            "$ref": "#/components/schemas/SDBudgetRule"
          }
        },
        "type": "object"
      },
      "GetSDBudgetRulesForAdvertiserResponse": {
        "properties": {
          "budgetRulesForAdvertiserResponse": {
            "description": "A list of rules created by the advertiser.",
            "items": {
              "$ref": "#/components/schemas/SDBudgetRule"
            },
            "maxItems": 30,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "description": "To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetSPBudgetRuleResponse": {
        "properties": {
          "budgetRule": {
            "$ref": "#/components/schemas/SPBudgetRule"
          }
        },
        "type": "object"
      },
      "GetSPBudgetRulesForAdvertiserResponse": {
        "properties": {
          "budgetRulesForAdvertiserResponse": {
            "description": "A list of rules created by the advertiser.",
            "items": {
              "$ref": "#/components/schemas/SPBudgetRule"
            },
            "maxItems": 30,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "description": "To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GoalTypeFilter": {
        "description": "Filter entities by goal type.",
        "properties": {
          "include": {
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "HeadlineSuggestionRequest": {
        "description": "Request structure of headline suggestion API.",
        "properties": {
          "adFormat": {
            "enum": [
              "SPONSORED_BRANDS",
              "SPONSORED_BRANDS_SPOTLIGHT"
            ],
            "type": "string"
          },
          "asins": {
            "description": "An array of ASINs associated with the creative. Note do not pass an empty array, this results in an error.\n",
            "items": {
              "type": "string"
            },
            "maxItems": 3,
            "minItems": 1,
            "type": "array"
          },
          "maxNumSuggestions": {
            "description": "Maximum number of suggestions that API should return. Response will [0, maxNumSuggestions] suggestions (suggestions are not guaranteed).",
            "maximum": 10,
            "minimum": 1,
            "type": "number"
          },
          "storePages": {
            "description": "An array of Store Pages associated with SB Spotlight Creative.",
            "items": {
              "$ref": "#/components/schemas/StorePage"
            },
            "maxItems": 3,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "HeadlineSuggestionResponse": {
        "description": "Response structure of headline suggestion API.",
        "properties": {
          "requestId": {
            "description": "An identifier for request made which is generated by server.",
            "type": "string"
          },
          "suggestions": {
            "description": "Suggestions are sorted, i.e., more suitable headline has lesser array index value",
            "items": {
              "$ref": "#/components/schemas/SuggestedHeadline"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Id": {
        "description": "The unique identifier of the ad which can be obtained after the ad is created using create APIs.",
        "type": "string"
      },
      "IdType": {
        "description": "The unique identifiers type based on the adProgram of the ad.",
        "enum": [
          "AD_ID"
        ],
        "type": "string"
      },
      "ImageComponent": {
        "description": "Image component which needs to be pre moderated. A publicly accessible imageUrl must be sent.",
        "properties": {
          "componentType": {
            "description": "Type of the image component.",
            "enum": [
              "BRAND_LOGO",
              "CUSTOM_IMAGE",
              "OTHER_IMAGE"
            ],
            "type": "string"
          },
          "id": {
            "description": "Id of the component. The same will be returned as part of the response as well. This can be used to uniquely identify the component from the pre moderation response.",
            "type": "string"
          },
          "landingPage": {
            "$ref": "#/components/schemas/LandingPage"
          },
          "url": {
            "description": "Url of the image to be pre moderated. The url must be publicly accessible.",
            "type": "string"
          }
        },
        "required": [
          "componentType",
          "id",
          "url"
        ],
        "type": "object"
      },
      "ImageComponentResponse": {
        "description": "Pre moderation result for a image component",
        "properties": {
          "componentType": {
            "description": "Type of the image component.",
            "enum": [
              "BRAND_LOGO",
              "CUSTOM_IMAGE",
              "OTHER_IMAGE"
            ],
            "type": "string"
          },
          "id": {
            "description": "Id of the component. This is the same id sent as part of the request. This can be used to uniquely identify the component.",
            "type": "string"
          },
          "landingPage": {
            "$ref": "#/components/schemas/LandingPage"
          },
          "policyViolations": {
            "description": "A list of policy violations for the component that were detected during pre moderation. Note that this field is present in the response only when preModerationStatus is set to REJECTED.",
            "items": {
              "$ref": "#/components/schemas/ImagePolicyViolation"
            },
            "type": "array"
          },
          "preModerationStatus": {
            "description": "The pre moderation status of the component.",
            "enum": [
              "REJECTED",
              "APPROVED",
              "FAILED",
              "RETRYABLE_FAILURE"
            ],
            "type": "string"
          },
          "url": {
            "description": "Publicly accessible url of the image that got pre moderated.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ImageCrop": {
        "properties": {
          "height": {
            "description": "Policy violated region's height in pixel.",
            "format": "int64",
            "type": "integer"
          },
          "topLeftX": {
            "description": "Policy violated region's top left X-axis pixel value.",
            "format": "int64",
            "type": "integer"
          },
          "topLeftY": {
            "description": "Policy violated region's top left Y-axis pixel value.",
            "format": "int64",
            "type": "integer"
          },
          "width": {
            "description": "Policy violated region's width in pixel.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ImageEvidence": {
        "description": "Structure of a image evidence",
        "properties": {
          "height": {
            "description": "The height of the content that violates the specfied policy within the image.",
            "type": "integer"
          },
          "topLeftX": {
            "description": "The top left X-coordinate of the content that violates the specfied policy within the image.",
            "type": "integer"
          },
          "topLeftY": {
            "description": "The top left Y-coordinate of the content that violates the specfied policy within the image.",
            "type": "integer"
          },
          "width": {
            "description": "The width of the content that violates the specfied policy within the image.",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ImagePolicyViolation": {
        "description": "Structure of policy violation for a image component",
        "properties": {
          "imageEvidences": {
            "description": "List of evidences for the policy violations detected on the image component.",
            "items": {
              "$ref": "#/components/schemas/ImageEvidence"
            },
            "type": "array"
          },
          "name": {
            "description": "A policy violation code.",
            "type": "string"
          },
          "policyDescription": {
            "description": "A human-readable description of the policy.",
            "type": "string"
          },
          "policyLinkUrl": {
            "description": "Address of the policy documentation. Follow the link to learn more about the specified policy.",
            "example": "https://advertising.amazon.com/resources/ad-policy/en/creative-acceptance#alcohol",
            "type": "string"
          },
          "textEvidences": {
            "description": "Policy violation on an image can be detected on the ocr detected text on the image as well. This list of text evidences will have the policy violations detected on the text on top of the image.",
            "items": {
              "$ref": "#/components/schemas/TextEvidence"
            },
            "type": "array"
          },
          "type": {
            "description": "Type of policy violation.",
            "enum": [
              "WARNING",
              "REJECTED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "ImageResult": {
        "properties": {
          "imageAltText": {
            "description": "Alt text for this image",
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ImageSpec": {
        "description": "Structure for Image specification",
        "properties": {
          "fileFormat": {
            "description": "Valid values are PNG and JPEG, default is PNG. New values will be added later.\n|   File Format  |   Value       |\n|---------------|---------------|\n|   PNG          |   PNG         |\n|   JPEG         |   JPEG        |",
            "type": "string"
          },
          "resolution": {
            "description": "Image resolution, default is 1200x628. New values will be added later.\n|   Resolution  |   Value       |\n|---------------|---------------|\n|   1200x628  |   1200x628  |",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ImageTask": {
        "properties": {
          "imageResults": {
            "items": {
              "$ref": "#/components/schemas/ImageResult"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          },
          "imageUrlExpiration": {
            "description": "The timestamp after which the imageUrl will be invalid. The number represents Unix epoch seconds with optional millisecond precision.",
            "format": "double",
            "type": "number"
          },
          "message": {
            "description": "Image task status details.",
            "type": "string"
          },
          "status": {
            "description": "Image task status. Valid values are PENDING, COMPLETED and FAILED",
            "type": "string"
          },
          "taskId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ImageTaskMetadata": {
        "properties": {
          "asin": {
            "description": "Required. The product that is shown in AI image.",
            "type": "string"
          },
          "imageSpec": {
            "$ref": "#/components/schemas/ImageSpec"
          },
          "maxResults": {
            "description": "Optional. An upper bound for number of image results for this set of metadata. Default value is 4.",
            "type": "number"
          },
          "productImageAssetId": {
            "description": "Optional. Source image provided by advertiser and they are registered in Asset Library",
            "type": "string"
          },
          "prompt": {
            "description": "Optional. Open text prompt",
            "format": "password",
            "maxLength": 300,
            "type": "string"
          },
          "themeId": {
            "description": "Optional.",
            "type": "string"
          }
        },
        "required": [
          "asin"
        ],
        "type": "object"
      },
      "InternalErrorErrorCode": {
        "enum": [
          "INTERNAL_ERROR"
        ],
        "type": "string"
      },
      "InternalServerErrorCode": {
        "enum": [
          "INTERNAL_ERROR"
        ],
        "type": "string"
      },
      "InternalServerErrorResponseContent": {
        "properties": {
          "code": {
            "$ref": "#/components/schemas/InternalServerErrorCode"
          },
          "message": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message",
          "requestId"
        ],
        "type": "object"
      },
      "InternalServerExceptionResponseContent": {
        "properties": {
          "code": {
            "$ref": "#/components/schemas/InternalErrorErrorCode"
          },
          "message": {
            "description": "Human readable error message.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "type": "object"
      },
      "InvalidArgumentError": {
        "properties": {
          "errorType": {
            "description": "The type of the error",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/InvalidArgumentErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ],
        "type": "object"
      },
      "InvalidArgumentErrorCode": {
        "enum": [
          "INVALID_ARGUMENT"
        ],
        "type": "string"
      },
      "InvalidArgumentErrorResponseContent": {
        "properties": {
          "code": {
            "$ref": "#/components/schemas/InvalidArgumentErrorCode"
          },
          "message": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message",
          "requestId"
        ],
        "type": "object"
      },
      "InvalidArgumentErrorSelector": {
        "properties": {
          "otherError": {
            "$ref": "#/components/schemas/OtherError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/RangeError"
          }
        },
        "type": "object"
      },
      "InvalidArgumentExceptionResponseContent": {
        "properties": {
          "code": {
            "$ref": "#/components/schemas/InvalidArgumentErrorCode"
          },
          "errors": {
            "items": {
              "$ref": "#/components/schemas/InvalidArgumentError"
            },
            "type": "array"
          },
          "message": {
            "description": "Human readable error message.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "type": "object"
      },
      "LandingPage": {
        "properties": {
          "asins": {
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 3,
            "type": "array"
          },
          "pageType": {
            "$ref": "#/components/schemas/LandingPageType"
          },
          "url": {
            "description": "URL of an existing simple landing page or Store page. Vendors may also specify the URL of a custom landing page.\nIf a custom URL is specified, the landing page must include the ASINs of at least three products that are\nadvertised as part of the campaign. Do not include this property in the request if the asins property is also\nincluded, these properties are mutually exclusive.\nNote that brandVideo ads only support Store page as landing page and does not allow asins property.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LandingPageInternalErrorCode": {
        "enum": [
          "INTERNAL_ERROR"
        ],
        "type": "string"
      },
      "LandingPageInternalServerExceptionResponseContent": {
        "properties": {
          "code": {
            "$ref": "#/components/schemas/LandingPageInternalErrorCode"
          },
          "details": {
            "description": "A human-readable description of the code field.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "details"
        ],
        "type": "object"
      },
      "LandingPageInvalidArgumentErrorCode": {
        "enum": [
          "INVALID_ARGUMENT"
        ],
        "type": "string"
      },
      "LandingPageInvalidArgumentExceptionResponseContent": {
        "properties": {
          "code": {
            "$ref": "#/components/schemas/LandingPageInvalidArgumentErrorCode"
          },
          "details": {
            "description": "A human-readable description of the code field.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "details"
        ],
        "type": "object"
      },
      "LandingPageThrottledErrorCode": {
        "enum": [
          "THROTTLED"
        ],
        "type": "string"
      },
      "LandingPageThrottlingExceptionResponseContent": {
        "properties": {
          "code": {
            "$ref": "#/components/schemas/LandingPageThrottledErrorCode"
          },
          "details": {
            "description": "A human-readable description of the code field.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "details"
        ],
        "type": "object"
      },
      "LandingPageType": {
        "description": "The type of landing page, such as store page, product list (simple landing page), custom url.",
        "enum": [
          "PRODUCT_LIST",
          "STORE",
          "CUSTOM_URL",
          "DETAIL_PAGE"
        ],
        "type": "string"
      },
      "ListCreativesRequestContent": {
        "properties": {
          "adId": {
            "description": "The unique ID of a Sponsored Brands ad.",
            "type": "string"
          },
          "creativeStatusFilter": {
            "description": "Filters creatives by optional creative status.\nBy default, you can list all creative versions regardless of creative status.",
            "items": {
              "$ref": "#/components/schemas/CreativeStatus"
            },
            "type": "array",
            "uniqueItems": true
          },
          "creativeTypeFilter": {
            "description": "Filters creatives by optional creative type.\nBy default, you can list all creative versions regardless of creative type.",
            "items": {
              "$ref": "#/components/schemas/CreativeType"
            },
            "type": "array",
            "uniqueItems": true
          },
          "creativeVersionFilter": {
            "description": "Filters creatives by optional creative version.\nThis means you can either list all creative versions without specific creative version filter, all just retrieve a single creative version by providing a specific version identifier.",
            "items": {
              "description": "The version identifier that helps you keep track of multiple versions of a submitted (non-draft) Sponsored Brands creative.",
              "type": "string"
            },
            "maxItems": 100,
            "type": "array",
            "uniqueItems": true
          },
          "maxResults": {
            "description": "Set a limit on the number of results returned by an operation.",
            "maximum": 100,
            "minimum": 1,
            "type": "number"
          },
          "nextToken": {
            "description": "Operations that return paginated results include a pagination token in this field.\nTo retrieve the next page of results, call the same operation and specify this token in the request.\nIf the `NextToken` field is empty, there are no further results.",
            "type": "string"
          }
        },
        "required": [
          "adId"
        ],
        "type": "object"
      },
      "ListCreativesResponseContent": {
        "properties": {
          "creatives": {
            "description": "A list of creatives",
            "items": {
              "$ref": "#/components/schemas/ListCreativesResultEntry"
            },
            "type": "array"
          },
          "nextToken": {
            "description": "Operations that return paginated results include a pagination token in this field.\nTo retrieve the next page of results, call the same operation and specify this token in the request.\nIf the `NextToken` field is empty, there are no further results.",
            "type": "string"
          },
          "totalResults": {
            "description": "The total number of results returned by an operation.",
            "type": "number"
          }
        },
        "type": "object"
      },
      "ListCreativesResultEntry": {
        "description": "-----------------------------------------------\nStructure types\n-----------------------------------------------\nCreative",
        "properties": {
          "adId": {
            "description": "The unique ID of a Sponsored Brands ad.",
            "type": "string"
          },
          "creationTime": {
            "format": "double",
            "type": "number"
          },
          "creativeProperties": {
            "$ref": "#/components/schemas/CreativeProperties"
          },
          "creativeStatus": {
            "$ref": "#/components/schemas/CreativeStatus"
          },
          "creativeType": {
            "$ref": "#/components/schemas/CreativeType"
          },
          "creativeVersion": {
            "description": "The version identifier that helps you keep track of multiple versions of a submitted (non-draft) Sponsored Brands creative.",
            "type": "string"
          },
          "lastUpdateTime": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "ListImageTasksRequestContent": {
        "properties": {
          "batchId": {
            "type": "string"
          },
          "maxResults": {
            "maximum": 10,
            "minimum": 1,
            "type": "number"
          },
          "nextToken": {
            "description": "Operations that return paginated results include a pagination token in this field.\nTo retrieve the next page of results, call the same operation and specify this token in the request.\nIf the `NextToken` field is empty, there are no further results.",
            "type": "string"
          },
          "statusFilter": {
            "$ref": "#/components/schemas/StatusFilter"
          },
          "taskIdFilter": {
            "$ref": "#/components/schemas/TaskIdFilter"
          }
        },
        "required": [
          "batchId"
        ],
        "type": "object"
      },
      "ListImageTasksResponseContent": {
        "properties": {
          "batchId": {
            "type": "string"
          },
          "imageTaskList": {
            "items": {
              "$ref": "#/components/schemas/ImageTask"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "description": "Operations that return paginated results include a pagination token in this field.\nTo retrieve the next page of results, call the same operation and specify this token in the request.\nIf the `NextToken` field is empty, there are no further results.",
            "type": "string"
          },
          "totalCount": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "ListSponsoredBrandsAdGroupsBetaRequestContent": {
        "properties": {
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/ObjectIdFilter"
          },
          "campaignIdFilter": {
            "$ref": "#/components/schemas/ObjectIdFilter"
          },
          "includeExtendedDataFields": {
            "description": "Setting to true will slow down performance because the API needs to retrieve extra information for each campaign.",
            "type": "boolean"
          },
          "maxResults": {
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API.",
            "maximum": 100,
            "minimum": 1,
            "type": "number"
          },
          "nameFilter": {
            "$ref": "#/components/schemas/NameFilter"
          },
          "nextToken": {
            "description": "Token value allowing to navigate to the next response page.",
            "type": "string"
          },
          "stateFilter": {
            "$ref": "#/components/schemas/EntityStateFilter"
          }
        },
        "type": "object"
      },
      "ListSponsoredBrandsAdGroupsBetaResponseContent": {
        "properties": {
          "adGroups": {
            "items": {
              "$ref": "#/components/schemas/AdGroup"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "description": "Token value allowing to navigate to the next response page.",
            "type": "string"
          },
          "totalResults": {
            "description": "The total number of entities.",
            "type": "number"
          }
        },
        "type": "object"
      },
      "ListSponsoredBrandsAdGroupsRequestContent": {
        "properties": {
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/ObjectIdFilter"
          },
          "campaignIdFilter": {
            "$ref": "#/components/schemas/ObjectIdFilter"
          },
          "includeExtendedDataFields": {
            "description": "Setting to true will slow down performance because the API needs to retrieve extra information for each campaign.",
            "type": "boolean"
          },
          "maxResults": {
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API.",
            "maximum": 100,
            "minimum": 1,
            "type": "number"
          },
          "nameFilter": {
            "$ref": "#/components/schemas/NameFilter"
          },
          "nextToken": {
            "description": "Token value allowing to navigate to the next response page.",
            "type": "string"
          },
          "stateFilter": {
            "$ref": "#/components/schemas/EntityStateFilter"
          }
        },
        "type": "object"
      },
      "ListSponsoredBrandsAdGroupsResponseContent": {
        "properties": {
          "adGroups": {
            "items": {
              "$ref": "#/components/schemas/AdGroup"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "description": "Token value allowing to navigate to the next response page.",
            "type": "string"
          },
          "totalResults": {
            "description": "The total number of entities.",
            "type": "number"
          }
        },
        "type": "object"
      },
      "ListSponsoredBrandsAdsBetaRequestContent": {
        "properties": {
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/ObjectIdFilter"
          },
          "adIdFilter": {
            "$ref": "#/components/schemas/ObjectIdFilter"
          },
          "campaignIdFilter": {
            "$ref": "#/components/schemas/ObjectIdFilter"
          },
          "maxResults": {
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API.",
            "maximum": 100,
            "minimum": 1,
            "type": "number"
          },
          "nameFilter": {
            "$ref": "#/components/schemas/NameFilter"
          },
          "nextToken": {
            "description": "Token value allowing to navigate to the next response page.",
            "type": "string"
          },
          "stateFilter": {
            "$ref": "#/components/schemas/EntityStateFilter"
          }
        },
        "type": "object"
      },
      "ListSponsoredBrandsAdsBetaResponseContent": {
        "properties": {
          "ads": {
            "items": {
              "$ref": "#/components/schemas/Ad"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "description": "Token value allowing to navigate to the next response page.",
            "type": "string"
          },
          "totalResults": {
            "description": "The total number of entities.",
            "type": "number"
          }
        },
        "type": "object"
      },
      "ListSponsoredBrandsAdsRequestContent": {
        "properties": {
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/ObjectIdFilter"
          },
          "adIdFilter": {
            "$ref": "#/components/schemas/ObjectIdFilter"
          },
          "campaignIdFilter": {
            "$ref": "#/components/schemas/ObjectIdFilter"
          },
          "maxResults": {
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API.",
            "maximum": 100,
            "minimum": 1,
            "type": "number"
          },
          "nameFilter": {
            "$ref": "#/components/schemas/NameFilter"
          },
          "nextToken": {
            "description": "Token value allowing to navigate to the next response page.",
            "type": "string"
          },
          "stateFilter": {
            "$ref": "#/components/schemas/EntityStateFilter"
          }
        },
        "type": "object"
      },
      "ListSponsoredBrandsAdsResponseContent": {
        "properties": {
          "ads": {
            "items": {
              "$ref": "#/components/schemas/Ad"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "description": "Token value allowing to navigate to the next response page.",
            "type": "string"
          },
          "totalResults": {
            "description": "The total number of entities.",
            "type": "number"
          }
        },
        "type": "object"
      },
      "ListSponsoredBrandsCampaignsBetaRequestContent": {
        "properties": {
          "campaignIdFilter": {
            "$ref": "#/components/schemas/ObjectIdFilter"
          },
          "goalTypeFilter": {
            "$ref": "#/components/schemas/GoalTypeFilter"
          },
          "includeExtendedDataFields": {
            "description": "Setting to true will slow down performance because the API needs to retrieve extra information for each campaign.",
            "type": "boolean"
          },
          "maxResults": {
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API.",
            "maximum": 100,
            "minimum": 1,
            "type": "number"
          },
          "nameFilter": {
            "$ref": "#/components/schemas/NameFilter"
          },
          "nextToken": {
            "description": "Token value allowing to navigate to the next response page.",
            "type": "string"
          },
          "portfolioIdFilter": {
            "$ref": "#/components/schemas/ObjectIdFilter"
          },
          "stateFilter": {
            "$ref": "#/components/schemas/EntityStateFilter"
          }
        },
        "type": "object"
      },
      "ListSponsoredBrandsCampaignsBetaResponseContent": {
        "properties": {
          "campaigns": {
            "items": {
              "$ref": "#/components/schemas/Campaign"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "description": "Token value allowing to navigate to the next response page.",
            "type": "string"
          },
          "totalCount": {
            "description": "The total number of entities.",
            "type": "number"
          }
        },
        "type": "object"
      },
      "ListSponsoredBrandsCampaignsRequestContent": {
        "properties": {
          "campaignIdFilter": {
            "$ref": "#/components/schemas/ObjectIdFilter"
          },
          "goalTypeFilter": {
            "$ref": "#/components/schemas/GoalTypeFilter"
          },
          "includeExtendedDataFields": {
            "description": "Setting to true will slow down performance because the API needs to retrieve extra information for each campaign.",
            "type": "boolean"
          },
          "maxResults": {
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API.",
            "maximum": 100,
            "minimum": 1,
            "type": "number"
          },
          "nameFilter": {
            "$ref": "#/components/schemas/NameFilter"
          },
          "nextToken": {
            "description": "Token value allowing to navigate to the next response page.",
            "type": "string"
          },
          "portfolioIdFilter": {
            "$ref": "#/components/schemas/ObjectIdFilter"
          },
          "stateFilter": {
            "$ref": "#/components/schemas/EntityStateFilter"
          }
        },
        "type": "object"
      },
      "ListSponsoredBrandsCampaignsResponseContent": {
        "properties": {
          "campaigns": {
            "items": {
              "$ref": "#/components/schemas/Campaign"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "description": "Token value allowing to navigate to the next response page.",
            "type": "string"
          },
          "totalCount": {
            "description": "The total number of entities.",
            "type": "number"
          }
        },
        "type": "object"
      },
      "ListSponsoredBrandsOptimizationRulesRequestContent": {
        "properties": {
          "entityFilter": {
            "$ref": "#/components/schemas/EntityFilter"
          },
          "maxResults": {
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API.",
            "maximum": 100,
            "minimum": 1,
            "type": "number"
          },
          "nextToken": {
            "description": "Token value allowing to navigate to the next response page.",
            "type": "string"
          },
          "optimizationRuleIdFilter": {
            "$ref": "#/components/schemas/OptimizationRuleIdFilter"
          }
        },
        "type": "object"
      },
      "ListSponsoredBrandsOptimizationRulesResponseContent": {
        "properties": {
          "nextToken": {
            "description": "Token value allowing to navigate to the next response page.",
            "type": "string"
          },
          "optimizationRules": {
            "items": {
              "$ref": "#/components/schemas/OptimizationRule"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "totalCount": {
            "description": "The total number of entities.",
            "type": "number"
          }
        },
        "required": [
          "optimizationRules"
        ],
        "type": "object"
      },
      "ListThemesRequestContent": {
        "properties": {
          "maxResults": {
            "description": "Optional. The max limit for the number of themes it can return.",
            "maximum": 100,
            "minimum": 1,
            "type": "number"
          },
          "nextToken": {
            "description": "Optional. The pagination token to retrieve the next page of results.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListThemesResponseContent": {
        "properties": {
          "nextToken": {
            "description": "If nextToken is not null, it means there are more results.",
            "type": "string"
          },
          "themes": {
            "description": "List of themes",
            "items": {
              "$ref": "#/components/schemas/Theme"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "totalCount": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "MediaType": {
        "description": "Media type for assets from Asset Library",
        "enum": [
          "image/jpeg",
          "image/png",
          "image/gif"
        ],
        "type": "string"
      },
      "MigrationJobResultsRequestContent": {
        "properties": {
          "jobId": {
            "type": "string"
          },
          "nextToken": {
            "description": "Token value allowing to navigate to the next response page.",
            "type": "string"
          }
        },
        "required": [
          "jobId"
        ],
        "type": "object"
      },
      "MigrationJobResultsResponseContent": {
        "properties": {
          "campaigns": {
            "items": {
              "$ref": "#/components/schemas/CampaignMigrationFinalStatus"
            },
            "type": "array"
          },
          "jobId": {
            "type": "string"
          },
          "migrationJobStatus": {
            "description": "Enumerated status code for migration job status\n| Status                                             |  Description |\n|----------------------------------------------------------|--------------|\n| COMPLETE  | Migration job is complete |\n| FAILED    | Migration failed and no V3 campaigns were migrated |\n| IN_PROGRESS    | Migration job is running |",
            "type": "string"
          },
          "nextToken": {
            "description": "Token value allowing to navigate to the next response page.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MigrationJobStatusRequestContent": {
        "properties": {
          "jobId": {
            "type": "string"
          }
        },
        "required": [
          "jobId"
        ],
        "type": "object"
      },
      "MigrationJobStatusResponseContent": {
        "properties": {
          "jobId": {
            "type": "string"
          },
          "migrationJobStatus": {
            "description": "Enumerated status code for migration job status\n| Status                                             |  Description |\n|----------------------------------------------------------|--------------|\n| COMPLETE  | Migration job is complete |\n| FAILED    | Migration failed and no V3 campaigns were migrated |\n| IN_PROGRESS    | Migration job is running |",
            "type": "string"
          },
          "migrationJobStatusReason": {
            "description": "Status reason for the migration job status",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MigrationResultsRequestContent": {
        "properties": {
          "nextToken": {
            "description": "Token value allowing to navigate to the next response page.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MigrationResultsResponseContent": {
        "properties": {
          "campaigns": {
            "items": {
              "$ref": "#/components/schemas/CampaignMigrationFinalStatus"
            },
            "type": "array"
          },
          "nextToken": {
            "description": "Token value allowing to navigate to the next response page.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ModerationError": {
        "description": "The Error Response Object.",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ModerationResult": {
        "properties": {
          "etaForModeration": {
            "description": "Expected date and time by which moderation will be complete. The format is ISO 8601 in UTC time zone. Note that this field is present in the response only when moderationStatus is set to IN_PROGRESS.",
            "type": "string"
          },
          "id": {
            "$ref": "#/components/schemas/Id"
          },
          "idType": {
            "$ref": "#/components/schemas/IdType"
          },
          "moderationStatus": {
            "$ref": "#/components/schemas/ModerationStatus"
          },
          "policyViolations": {
            "description": "A list of policy violations for a campaign that has failed moderation. Note that this field is present in the response only when moderationStatus is set to REJECTED.",
            "items": {
              "$ref": "#/components/schemas/PolicyViolation"
            },
            "maxItems": 200,
            "minItems": 0,
            "type": "array"
          },
          "versionId": {
            "$ref": "#/components/schemas/VersionId"
          }
        },
        "type": "object"
      },
      "ModerationResultsAccessDeniedError": {
        "properties": {
          "code": {
            "description": "Access denied error code.",
            "enum": [
              "ACCESS_DENIED"
            ],
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the error response.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ModerationResultsAdProgramType": {
        "description": "The program type of the ad.",
        "enum": [
          "SB_PRODUCT_COLLECTION",
          "SB_STORE_SPOTLIGHT",
          "SB_VIDEO",
          "SPONSORED_PRODUCTS"
        ],
        "type": "string"
      },
      "ModerationResultsBadRequestError": {
        "properties": {
          "code": {
            "description": "Bad request error code.",
            "enum": [
              "BAD_REQUEST"
            ],
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the error response.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ModerationResultsInternalServerError": {
        "properties": {
          "code": {
            "description": "Internal error code.",
            "enum": [
              "INTERNAL_ERROR"
            ],
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the error response.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ModerationResultsNotFoundError": {
        "properties": {
          "code": {
            "description": "Not found error code.",
            "enum": [
              "NOT_FOUND"
            ],
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the error response.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ModerationResultsRequest": {
        "properties": {
          "adProgramType": {
            "$ref": "#/components/schemas/ModerationResultsAdProgramType"
          },
          "id": {
            "$ref": "#/components/schemas/Id"
          },
          "idType": {
            "$ref": "#/components/schemas/IdType"
          },
          "maxResults": {
            "description": "Sets a limit on the number of results returned by an operation.",
            "format": "int32",
            "maximum": 10,
            "minimum": 1,
            "type": "integer"
          },
          "moderationStatusFilter": {
            "description": "Filter by specific moderation status.",
            "items": {
              "$ref": "#/components/schemas/ModerationStatus"
            },
            "maxItems": 20,
            "minItems": 0,
            "type": "array",
            "uniqueItems": true
          },
          "nextToken": {
            "$ref": "#/components/schemas/NextToken"
          },
          "versionIdFilter": {
            "description": "Filter by specific version id of the ad. The API will return the ad's all versions moderation status if this field is empty.",
            "items": {
              "$ref": "#/components/schemas/VersionId"
            },
            "maxItems": 200,
            "minItems": 0,
            "type": "array",
            "uniqueItems": true
          }
        },
        "required": [
          "id",
          "idType",
          "adProgramType",
          "maxResults"
        ],
        "type": "object"
      },
      "ModerationResultsResponse": {
        "properties": {
          "moderationResults": {
            "items": {
              "$ref": "#/components/schemas/ModerationResult"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          },
          "nextToken": {
            "$ref": "#/components/schemas/NextToken"
          }
        },
        "type": "object"
      },
      "ModerationResultsThrottlingError": {
        "properties": {
          "code": {
            "description": "Throttled error code.",
            "enum": [
              "THROTTLED"
            ],
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the error response.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ModerationStatus": {
        "description": "The moderation status of the ad.",
        "enum": [
          "APPROVED",
          "IN_PROGRESS",
          "REJECTED",
          "FAILED"
        ],
        "type": "string"
      },
      "MultiAdGroupAd": {
        "properties": {
          "adGroupId": {
            "description": "The adGroup identifier.",
            "type": "string"
          },
          "adId": {
            "description": "The ad identifier.",
            "type": "string"
          },
          "campaignId": {
            "description": "The campaign identifier.",
            "type": "string"
          },
          "creative": {
            "$ref": "#/components/schemas/Creative"
          },
          "extendedData": {
            "$ref": "#/components/schemas/AdExtendedData"
          },
          "landingPage": {
            "$ref": "#/components/schemas/LandingPage"
          },
          "name": {
            "description": "The name of the ad.",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/EntityState"
          }
        },
        "required": [
          "adGroupId",
          "adId",
          "campaignId",
          "name",
          "state"
        ],
        "type": "object"
      },
      "NameFilter": {
        "description": "Filter entities by name.",
        "properties": {
          "include": {
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "queryTermMatchType": {
            "$ref": "#/components/schemas/QueryTermMatchType"
          }
        },
        "type": "object"
      },
      "NextToken": {
        "description": "Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the `NextToken` field is empty, there are no further results.",
        "type": "string"
      },
      "NotFoundErrorCode": {
        "enum": [
          "NOT_FOUND"
        ],
        "type": "string"
      },
      "NotFoundErrorResponseContent": {
        "properties": {
          "code": {
            "$ref": "#/components/schemas/NotFoundErrorCode"
          },
          "message": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message",
          "requestId"
        ],
        "type": "object"
      },
      "NotFoundExceptionResponseContent": {
        "properties": {
          "code": {
            "$ref": "#/components/schemas/NotFoundErrorCode"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "type": "object"
      },
      "ObjectIdFilter": {
        "description": "Filter entities by the list of objectIds.",
        "properties": {
          "include": {
            "items": {
              "description": "Entity object identifier.",
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "OptimizationRule": {
        "properties": {
          "conditions": {
            "items": {
              "$ref": "#/components/schemas/RuleCondition"
            },
            "maxItems": 1,
            "minItems": 1,
            "type": "array"
          },
          "optimizationRuleId": {
            "description": "The identifier of the optimization rule.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OptimizationRuleFailureResponseItem": {
        "properties": {
          "errors": {
            "description": "A list of validation errors",
            "items": {
              "$ref": "#/components/schemas/OptimizationRulesError"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "index": {
            "description": "the index of the optimization rule id/entity Id in the array from the request body.",
            "maximum": 10,
            "minimum": 0,
            "type": "number"
          }
        },
        "required": [
          "index"
        ],
        "type": "object"
      },
      "OptimizationRuleIdFilter": {
        "description": "Filter optimization rules by the list of optimization rule ids.",
        "properties": {
          "include": {
            "items": {
              "description": "Entity object identifier.",
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "OptimizationRuleToEntityMapping": {
        "properties": {
          "entityId": {
            "description": "Entity object identifier.",
            "type": "string"
          },
          "entityType": {
            "description": "Enum: \"CAMPAIGN\"\n\nThe type of entity passed.",
            "type": "string"
          },
          "optimizationRuleId": {
            "description": "The identifier of the optimization rule.",
            "type": "string"
          }
        },
        "required": [
          "entityId",
          "entityType",
          "optimizationRuleId"
        ],
        "type": "object"
      },
      "OptimizationRuleToEntityMappingSuccessResponseItem": {
        "properties": {
          "entityId": {
            "description": "Entity object identifier.",
            "type": "string"
          },
          "entityType": {
            "type": "string"
          },
          "index": {
            "description": "The index of the entityId/optimizationId in the array from the request body.",
            "maximum": 10,
            "minimum": 0,
            "type": "number"
          },
          "optimizationRuleId": {
            "description": "The identifier of the optimization rule.",
            "type": "string"
          }
        },
        "required": [
          "entityId",
          "entityType",
          "index",
          "optimizationRuleId"
        ],
        "type": "object"
      },
      "OptimizationRulesError": {
        "properties": {
          "code": {
            "description": "The type of the error.",
            "type": "string"
          },
          "message": {
            "description": "Human readable error message.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "type": "object"
      },
      "OtherError": {
        "description": "Errors not related to any of the other error types.",
        "properties": {
          "cause": {
            "$ref": "#/components/schemas/ErrorCause"
          },
          "message": {
            "description": "Human readable error message.",
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        },
        "required": [
          "cause",
          "message",
          "reason"
        ],
        "type": "object"
      },
      "PerformanceMeasureCondition": {
        "properties": {
          "comparisonOperator": {
            "$ref": "#/components/schemas/ComparisonOperator"
          },
          "metricName": {
            "$ref": "#/components/schemas/PerformanceMetric"
          },
          "threshold": {
            "description": "The performance threshold value.",
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "comparisonOperator",
          "metricName",
          "threshold"
        ],
        "type": "object"
      },
      "PerformanceMeasureConditionForSB": {
        "properties": {
          "comparisonOperator": {
            "$ref": "#/components/schemas/ComparisonOperator"
          },
          "metricName": {
            "$ref": "#/components/schemas/PerformanceMetricForSB"
          },
          "threshold": {
            "description": "The performance threshold value.",
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "comparisonOperator",
          "metricName",
          "threshold"
        ],
        "type": "object"
      },
      "PerformanceMetric": {
        "description": "The advertising performance metric.",
        "enum": [
          "ACOS",
          "CTR",
          "CVR",
          "ROAS"
        ],
        "type": "string"
      },
      "PerformanceMetricForSB": {
        "description": "The advertising performance metric.",
        "enum": [
          "IS",
          "NTB",
          "ROAS"
        ],
        "type": "string"
      },
      "Placement": {
        "description": "List of bid adjustments for placements.\n- HOME - The home page of the Amazon store.\n- DETAIL_PAGE - Product detail pages within the Amazon store.\n- OTHER - Other placement groups. Such as search pages in the Amazon Store.\n- TOP_OF_SEARCH - Top of search ads generally appear above the top search results.",
        "enum": [
          "HOME",
          "DETAIL_PAGE",
          "OTHER",
          "TOP_OF_SEARCH"
        ],
        "type": "string"
      },
      "PolicyViolation": {
        "properties": {
          "policyDescription": {
            "description": "A human-readable description of the policy.",
            "type": "string"
          },
          "policyLinkUrl": {
            "description": "Address of the policy documentation. Follow the link to learn more about the specified policy.",
            "type": "string"
          },
          "violatingAsinContents": {
            "items": {
              "$ref": "#/components/schemas/ViolatingAsinContent"
            },
            "maxItems": 200,
            "minItems": 0,
            "type": "array"
          },
          "violatingImageContents": {
            "items": {
              "$ref": "#/components/schemas/ViolatingImageContent"
            },
            "maxItems": 200,
            "minItems": 0,
            "type": "array"
          },
          "violatingTextContents": {
            "items": {
              "$ref": "#/components/schemas/ViolatingTextContent"
            },
            "maxItems": 200,
            "minItems": 0,
            "type": "array"
          },
          "violatingVideoContents": {
            "items": {
              "$ref": "#/components/schemas/ViolatingVideoContent"
            },
            "maxItems": 200,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "PreModerationRequest": {
        "description": "Components details that needs to be sent for pre moderation.",
        "properties": {
          "adProgram": {
            "description": "Type of Ad program to which this pre moderation components belong to.",
            "enum": [
              "SPONSORED_BRANDS",
              "SPONSORED_BRANDS_SPOTLIGHT",
              "SPONSORED_BRANDS_VIDEO",
              "STORES",
              "SPONSORED_DISPLAY",
              "DSP",
              "DSP_REC",
              "DSP_IMAGE",
              "DSP_THIRD_PARTY"
            ],
            "type": "string"
          },
          "asinComponents": {
            "description": "Asin components which needs to be pre moderated.",
            "items": {
              "$ref": "#/components/schemas/AsinComponent"
            },
            "maxItems": 10,
            "type": "array"
          },
          "dateComponents": {
            "description": "Date components which needs to be pre moderated.",
            "items": {
              "$ref": "#/components/schemas/DateComponent"
            },
            "maxItems": 10,
            "type": "array"
          },
          "imageComponents": {
            "description": "Image components which needs to be pre moderated.",
            "items": {
              "$ref": "#/components/schemas/ImageComponent"
            },
            "maxItems": 10,
            "type": "array"
          },
          "locale": {
            "description": "Specifying locale will translate the premoderation message into that locale's associated language. \n \n | Locale | Language (ISO 639) | Country (ISO 3166) | \n |-----|-----|-------| \n | ar-AE | Arabic (ar) | United Arab Emirates (AE) | \n | zh-CN | Chinese (zh) | China (CN) | \n | nl-NL | Dutch (nl) | Netherlands (NL) | \n | en-AU | English (en) | Australia (AU) | \n | en-CA | English (en) | Canada (CA) | \n | en-IN | English (en) | India (IN) | \n | en-GB | English (en) | United Kingdom (GB) | \n | en-US | English (en) | United States (US) | \n | fr-CA | French (fr) | Canada (CA) | \n | fr-FR | French (fr) | France (FR) | \n | de-DE | German (de) | Germany (DE) | \n | it-IT | Italian (it) | Italy (IT) | \n | ja-JP | Japanese (ja) | Japan (JP) | \n | ko-KR | Korean (ko) | South Korea (KR) | \n | pt-BR | Portuguese (pt) | Brazil (BR) | \n | es-ES | Spanish (es) | Spain (ES) | \n | es-US | Spanish (es) | United States (US) | \n | es-MX | Spanish (es) | Mexico (MX) | \n | tr-TR | Turkish (tr) | Turkey (TR) | \n ",
            "enum": [
              "ar-AE",
              "zh-CN",
              "nl-NL",
              "en-AU",
              "en-CA",
              "en-IN",
              "en-GB",
              "en-US",
              "fr-CA",
              "fr-FR",
              "de-DE",
              "it-IT",
              "ja-JP",
              "ko-KR",
              "pt-BR",
              "es-ES",
              "es-US",
              "es-MX",
              "tr-TR"
            ],
            "type": "string"
          },
          "recordId": {
            "description": "Id of the brand/advertiser.",
            "type": "string"
          },
          "textComponents": {
            "description": "Text components which needs to be pre moderated.",
            "items": {
              "$ref": "#/components/schemas/TextComponent"
            },
            "maxItems": 10,
            "type": "array"
          },
          "videoComponents": {
            "description": "Video components which needs to be pre moderated.",
            "items": {
              "$ref": "#/components/schemas/VideoComponent"
            },
            "maxItems": 1,
            "type": "array"
          }
        },
        "required": [
          "adProgram",
          "locale"
        ],
        "type": "object"
      },
      "PreModerationResponse": {
        "description": "Information regarding the policy violations if present for the components, sent for pre moderation.",
        "properties": {
          "adProgram": {
            "description": "Type of Ad program to which the pre moderation components belong to.",
            "enum": [
              "SPONSORED_BRANDS",
              "SPONSORED_BRANDS_SPOTLIGHT",
              "SPONSORED_BRANDS_VIDEO",
              "STORES",
              "SPONSORED_DISPLAY",
              "DSP",
              "DSP_REC",
              "DSP_IMAGE",
              "DSP_THIRD_PARTY"
            ],
            "type": "string"
          },
          "asinComponents": {
            "description": "Pre moderation result of the asin components. It will have information regarding the policy violations present if any.",
            "items": {
              "$ref": "#/components/schemas/AsinComponentResponse"
            },
            "type": "array"
          },
          "dateComponents": {
            "description": "Pre moderation result of the date components. It will have information regarding the policy violations present if any.",
            "items": {
              "$ref": "#/components/schemas/DateComponentResponse"
            },
            "type": "array"
          },
          "imageComponents": {
            "description": "Pre moderation result of the image components. It will have information regarding the policy violations present if any.",
            "items": {
              "$ref": "#/components/schemas/ImageComponentResponse"
            },
            "type": "array"
          },
          "locale": {
            "description": "Locale value that was passed in request.",
            "enum": [
              "ar-AE",
              "zh-CN",
              "nl-NL",
              "en-AU",
              "en-CA",
              "en-IN",
              "en-GB",
              "en-US",
              "fr-CA",
              "fr-FR",
              "de-DE",
              "it-IT",
              "ja-JP",
              "ko-KR",
              "pt-BR",
              "es-ES",
              "es-US",
              "es-MX",
              "tr-TR"
            ],
            "type": "string"
          },
          "preModerationId": {
            "description": "Unique Id for the moderation Request.",
            "type": "string"
          },
          "recordId": {
            "description": "Id of the brand/advertiser.",
            "type": "string"
          },
          "textComponents": {
            "description": "Pre moderation result of the text components. It will have information regarding the policy violations present if any.",
            "items": {
              "$ref": "#/components/schemas/TextComponentResponse"
            },
            "type": "array"
          },
          "videoComponents": {
            "description": "Pre moderation result of the video components. It will have information regarding the policy violations present if any.",
            "items": {
              "$ref": "#/components/schemas/VideoComponentResponse"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "PrimaryHeadlineRecommendationGroups": {
        "description": "Ordered list of Primary Headline recommendation groups.",
        "items": {
          "$ref": "#/components/schemas/TextRecommendations"
        },
        "maxItems": 5,
        "minItems": 0,
        "type": "array"
      },
      "ProductCollectionCreative": {
        "properties": {
          "asins": {
            "description": "An array of ASINs associated with the creative.",
            "items": {
              "description": "ASIN",
              "type": "string"
            },
            "maxItems": 3,
            "minItems": 0,
            "type": "array",
            "uniqueItems": true
          },
          "brandLogoAssetId": {
            "description": "The identifier of the [brand logo](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#brandlogo) image from the brand store's asset library.\nNote that for campaigns created in the Amazon Advertising console prior to release of the brand store's assets library, responses will not include a value for this field.",
            "type": "string"
          },
          "brandLogoCrop": {
            "$ref": "#/components/schemas/AssetCrop"
          },
          "brandName": {
            "description": "The displayed brand name in the ad headline.\nMaximum length is 30 characters.\nSee [the policy](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#headlines) for headline requirements.",
            "type": "string"
          },
          "customImageAssetId": {
            "description": "The identifier of the Custom image from the Store assets library.\nSee [the policy](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#customimage) for more information on what constitutes a valid Custom image.",
            "type": "string"
          },
          "customImageCrop": {
            "$ref": "#/components/schemas/AssetCrop"
          },
          "headline": {
            "description": "The headline text. Maximum length of the string is 50 characters for all marketplaces other than Japan, which has a maximum length of 35 characters.\nSee [the policy](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#headlines) for headline requirements.",
            "type": "string"
          }
        },
        "required": [
          "asins",
          "brandLogoAssetId",
          "brandName",
          "headline"
        ],
        "type": "object"
      },
      "ProductLocation": {
        "description": "The product location of the campaign.\n- SOLD_ON_AMAZON - For products sold on Amazon websites.\n- NOT_SOLD_ON_AMAZON - For products not sold on Amazon websites.\n- SOLD_ON_DTC - Deprecated (For products sold on DTC websites).",
        "enum": [
          "SOLD_ON_AMAZON",
          "NOT_SOLD_ON_AMAZON",
          "SOLD_ON_DTC"
        ],
        "type": "string"
      },
      "ProgramType": {
        "description": "Asset program type",
        "enum": [
          "A_PLUS",
          "SB",
          "POSTS",
          "STORES",
          "BBB_STORES",
          "AMAZON_DSP",
          "AMAZON_CREATIVE_SERVICES"
        ],
        "type": "string"
      },
      "QueryTermMatchType": {
        "description": "Defines how would the string resource field (e.g. campaign name, ad group name) be matched with the query term in filter.",
        "enum": [
          "BROAD_MATCH",
          "EXACT_MATCH"
        ],
        "type": "string"
      },
      "RangeError": {
        "description": "Errors related to range constraints violations.",
        "properties": {
          "allowed": {
            "description": "Allowed values.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "cause": {
            "$ref": "#/components/schemas/ErrorCause"
          },
          "lowerLimit": {
            "description": "Optional lower limit.",
            "type": "string"
          },
          "message": {
            "description": "Human readable error message.",
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "upperLimit": {
            "description": "Optional upper limit.",
            "type": "string"
          }
        },
        "required": [
          "cause",
          "message",
          "reason"
        ],
        "type": "object"
      },
      "RecommendedHeadline": {
        "description": "Recommended Headline in response object. Recommended headline will be locale specific, i.e. for an asin input in ES, Recommended headline will be in ES.",
        "properties": {
          "headline": {
            "description": "String that contains Recommended headline.",
            "example": "This is a Recommended headline.",
            "maxLength": 50,
            "type": "string"
          },
          "headlineId": {
            "description": "Unique Id of Recommended headline.",
            "example": "e991e32c-0136-427a-843b-ff04162f2f91",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Recurrence": {
        "properties": {
          "daysOfWeek": {
            "description": "Object representing days of the week for weekly type rule. It is not required for daily recurrence type",
            "items": {
              "$ref": "#/components/schemas/DayOfWeek"
            },
            "type": "array"
          },
          "intraDaySchedule": {
            "description": "List of objects representing start and end time of desired intra-day budget rule window",
            "items": {
              "$ref": "#/components/schemas/timeOfDay"
            },
            "maxItems": 1,
            "type": "array"
          },
          "type": {
            "$ref": "#/components/schemas/RecurrenceType"
          }
        },
        "type": "object"
      },
      "RecurrenceType": {
        "description": "depicts the type of recurrence",
        "enum": [
          "DAILY",
          "WEEKLY"
        ],
        "type": "string"
      },
      "RequiredRecommendations": {
        "properties": {
          "maxRecommendationGroups": {
            "description": "Maximum number of recommendations groups that API should return for given type. (recommendations are not guaranteed).",
            "format": "int32",
            "maximum": 5,
            "minimum": 1,
            "type": "integer"
          },
          "type": {
            "description": "Type of recommendations.",
            "enum": [
              "PRIMARY_HEADLINE",
              "SECONDARY_HEADLINE"
            ],
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "RuleBasedBudget": {
        "properties": {
          "applicableRuleId": {
            "type": "string"
          },
          "applicableRuleName": {
            "type": "string"
          },
          "isProcessing": {
            "type": "boolean"
          },
          "value": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "RuleCondition": {
        "properties": {
          "attributeName": {
            "description": "Enum: \"COST_PER_CLICK\"\n\nThe name of the attribute.\n\n Supported rule metrics and corresponding supported comparisonOperators:\n| AttributeName                      |  ComparisonOperator       |  Description                                                                            |\n|------------------------------------|---------------------------|-----------------------------------------------------------------------------------------|\n| COST_PER_CLICK                     | LESS_THAN_OR_EQUAL_TO     | Maximize page visits while cost per click less than or equal to threshold.              |",
            "type": "string"
          },
          "criteria": {
            "$ref": "#/components/schemas/ValueTypeRuleCriteria"
          }
        },
        "required": [
          "attributeName",
          "criteria"
        ],
        "type": "object"
      },
      "RuleDuration": {
        "properties": {
          "dateRangeTypeRuleDuration": {
            "$ref": "#/components/schemas/DateRangeTypeRuleDuration"
          },
          "eventTypeRuleDuration": {
            "$ref": "#/components/schemas/EventTypeRuleDuration"
          }
        },
        "type": "object"
      },
      "SBBudgetRule": {
        "properties": {
          "createdDate": {
            "description": "Epoch time of budget rule creation. Read-only.",
            "format": "int64",
            "type": "number"
          },
          "lastUpdatedDate": {
            "description": "Epoch time of budget rule update. Read-only.",
            "format": "int64",
            "type": "number"
          },
          "ruleDetails": {
            "$ref": "#/components/schemas/SBBudgetRuleDetails"
          },
          "ruleId": {
            "description": "The budget rule identifier.",
            "type": "string"
          },
          "ruleState": {
            "$ref": "#/components/schemas/state"
          },
          "ruleStatus": {
            "description": "The budget rule status. Read-only.",
            "type": "string"
          }
        },
        "required": [
          "ruleId"
        ],
        "type": "object"
      },
      "SBBudgetRuleDetails": {
        "properties": {
          "budgetIncreaseBy": {
            "$ref": "#/components/schemas/budgetIncreaseBy"
          },
          "duration": {
            "$ref": "#/components/schemas/RuleDuration"
          },
          "name": {
            "description": "The budget rule name. Required to be unique within a campaign.",
            "maxLength": 355,
            "type": "string"
          },
          "performanceMeasureCondition": {
            "$ref": "#/components/schemas/PerformanceMeasureConditionForSB"
          },
          "recurrence": {
            "$ref": "#/components/schemas/Recurrence"
          },
          "ruleType": {
            "$ref": "#/components/schemas/SBRuleType"
          }
        },
        "type": "object"
      },
      "SBCampaignBudgetRule": {
        "properties": {
          "createdDate": {
            "description": "Epoch time of budget rule creation. Read-only.",
            "format": "int64",
            "type": "number"
          },
          "lastUpdatedDate": {
            "description": "Epoch time of budget rule update. Read-only.",
            "format": "int64",
            "type": "number"
          },
          "ruleDetails": {
            "$ref": "#/components/schemas/SBBudgetRuleDetails"
          },
          "ruleId": {
            "description": "The budget rule identifier.",
            "type": "string"
          },
          "ruleState": {
            "$ref": "#/components/schemas/state"
          },
          "ruleStatus": {
            "description": "The budget rule evaluation status. Read-only.",
            "type": "string"
          }
        },
        "required": [
          "ruleId"
        ],
        "type": "object"
      },
      "SBCampaignPerformanceForecastsRequestContent": {
        "properties": {
          "campaigns": {
            "items": {
              "$ref": "#/components/schemas/SBForecastingRequestCampaignObject"
            },
            "maxItems": 1,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "campaigns"
        ],
        "type": "object"
      },
      "SBCampaignPerformanceForecastsResponseContent": {
        "description": "Response object for /sb/forecasts containing a list of performance forecast for the campaign.",
        "properties": {
          "campaigns": {
            "$ref": "#/components/schemas/SBForecastingResponseCampaignObject"
          }
        },
        "type": "object"
      },
      "SBForecastingAccessDeniedExceptionResponseContent": {
        "description": "Returns information about an AccessDeniedException.",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "details"
        ],
        "type": "object"
      },
      "SBForecastingAdGroup": {
        "description": "The ad group settings.",
        "properties": {
          "creativeAsins": {
            "items": {
              "description": "Optional. An array of creative ASINs that are displayed in the SB creative.",
              "maxItems": 1000,
              "minItems": 0,
              "type": "string"
            },
            "type": "array"
          },
          "keywords": {
            "items": {
              "$ref": "#/components/schemas/SBForecastingKeyword"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "landingPages": {
            "items": {
              "$ref": "#/components/schemas/SBForecastingLandingPageObject"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "negativeKeywords": {
            "items": {
              "$ref": "#/components/schemas/SBForecastingNegativeKeyword"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "negativeTargets": {
            "items": {
              "$ref": "#/components/schemas/SBForecastingNegativeProductTarget"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "targets": {
            "items": {
              "$ref": "#/components/schemas/SBForecastingProductTarget"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "themes": {
            "items": {
              "$ref": "#/components/schemas/SBForecastingTheme"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "SBForecastingBadRequestExceptionResponseContent": {
        "description": "Returns information about a BadRequestException.",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "details"
        ],
        "type": "object"
      },
      "SBForecastingErrorObject": {
        "properties": {
          "code": {
            "description": "The forecast error code.",
            "type": "string"
          },
          "description": {
            "description": "The forecast error description.",
            "type": "string"
          },
          "index": {
            "description": "Correlates the campaign to the campaign list index specified in the request. Zero-based.",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "SBForecastingInternalServerExceptionResponseContent": {
        "description": "Returns information about a InternalServerException.",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "details"
        ],
        "type": "object"
      },
      "SBForecastingKeyword": {
        "description": "Keyword associated with the campaign.",
        "properties": {
          "bid": {
            "description": "The associated bid. Note that this value must be less than the budget associated with the Advertiser account.",
            "format": "float",
            "type": "number"
          },
          "keywordText": {
            "description": "The keyword text. Maximum of 10 words.",
            "type": "string"
          },
          "matchType": {
            "description": "The match type. Valid value: EXACT, PHRASE, BROAD. For more information, see [match types](https://advertising.amazon.com/help#GHTRFDZRJPW6764R) in the Amazon Advertising support center.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SBForecastingLandingPageObject": {
        "properties": {
          "landingPageUrl": {
            "description": "Landing page information.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SBForecastingMetric": {
        "description": "The forecast metric.",
        "properties": {
          "metric": {
            "description": "The forecast metric name. Currently supported metrics are IMPRESSION and CLICK.",
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/SBForecastingMetricValue"
          }
        },
        "type": "object"
      },
      "SBForecastingMetricValue": {
        "description": "The forecast min and max value.",
        "properties": {
          "max": {
            "description": "The forecast max value.",
            "format": "float",
            "maximum": 10000.0,
            "minimum": 0.0,
            "type": "number"
          },
          "min": {
            "description": "The forecast min value.",
            "format": "float",
            "maximum": 10000.0,
            "minimum": 0.0,
            "type": "number"
          }
        },
        "type": "object"
      },
      "SBForecastingNegativeKeyword": {
        "description": "Negative keyword associated with the campaign.",
        "properties": {
          "keywordText": {
            "description": "The keyword text. Maximum of 10 words.",
            "type": "string"
          },
          "matchType": {
            "description": "The negative match type. Valid value: NEGATIVE_EXACT, NEGATIVE_PHRASE. For more information, see [negative keyword match types](https://advertising.amazon.com/help#GHTRFDZRJPW6764R) in the Amazon Advertising support center.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SBForecastingNegativeProductExpression": {
        "description": "Negative expression settings for the target.",
        "properties": {
          "type": {
            "description": "The negative expression type associated with the target. Valid value: ASIN_BRAND_SAME_AS, ASIN_SAME_AS.",
            "type": "string"
          },
          "value": {
            "description": "The expression value associated with targets.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SBForecastingNegativeProductTarget": {
        "description": "The negative target associated with the ad group.",
        "properties": {
          "expressions": {
            "items": {
              "$ref": "#/components/schemas/SBForecastingNegativeProductExpression"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "SBForecastingProductExpression": {
        "description": "Expression settings for the target.",
        "properties": {
          "type": {
            "description": "The expression type associated with the target. Valid value: ASIN_CATEGORY_SAME_AS, ASIN_BRAND_SAME_AS, ASIN_PRICE_LESS_THAN, ASIN_PRICE_BETWEEN, ASIN_PRICE_GREATER_THAN, ASIN_REVIEW_RATING_LESS_THAN, ASIN_REVIEW_RATING_BETWEEN, ASIN_REVIEW_RATING_GREATER_THAN, ASIN_SAME_AS.",
            "type": "string"
          },
          "value": {
            "description": "The expression value associated with targets.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SBForecastingProductTarget": {
        "description": "The target associated with the ad group.",
        "properties": {
          "bid": {
            "description": "The associated bid. Note that this value must be less than the budget associated with the Advertiser account.",
            "format": "float",
            "type": "number"
          },
          "expressions": {
            "items": {
              "$ref": "#/components/schemas/SBForecastingProductExpression"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "SBForecastingRequestCampaignObject": {
        "description": "The campaign settings.",
        "properties": {
          "adGroups": {
            "items": {
              "$ref": "#/components/schemas/SBForecastingAdGroup"
            },
            "maxItems": 1,
            "minItems": 1,
            "type": "array"
          },
          "budget": {
            "description": "The amount of the budget.",
            "format": "double",
            "type": "number"
          },
          "budgetType": {
            "description": "Budget can be set to DAILY or LIFETIME. \n\n|BudgetType|Description|\n|-----------|-----------|\n|DAILY| The amount that you're willing to spend on this campaign each day. If the campaign spends less than your daily budget, the unspent amount can be used to increase your daily budget on the other days of the calendar month.|\n|LIFETIME| The total amount that you are willing to spend on this campaign.| \n\n",
            "type": "string"
          },
          "endDate": {
            "description": "The YYYY-MM-DD end date for the campaign. Must be greater than the value for `startDate`. If not specified, the campaign has no end date and runs continuously.",
            "format": "date-time",
            "type": "string"
          },
          "forecastType": {
            "description": "The forecast type. can be set to WEEKLY or MONTHLY. \n\n**If have not set the forecastType during campaign creation then use WEEKLY as goal value.**\n",
            "type": "string"
          },
          "goal": {
            "description": "Goal will allow you to set goal type to help drive your campaign performance. \n\n**If have not set the goal during campaign creation then use PAGE_VISIT as goal type.** \n\n\nThe goal type of the campaign. Initial launch only supports PAGE_VISIT. \n\nBRAND_IMPRESSION_SHARE - This goal is a PREVIEW ONLY and cannot be set currently. It will allow you grown your brand impression share on top of search placement. \n\nPAGE_VISIT - This goal drives traffic to your landing and detail pages through all placements. \n\nACQUIRE_NEW_CUSTOMERS - This property is a PREVIEW ONLY and cannot be used as part of a request or response. This goal drives new customer acquisition for your brands. \n\nAD_VIEWS - This property is a PREVIEW ONLY and cannot be used as part of a request or response. This goal maximizes view for your ads. \n\n",
            "type": "string"
          },
          "startDate": {
            "description": "The YYYY-MM-DD start date for the campaign. If this field is not set to a value, the current date is used.",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "adGroups",
          "budget",
          "budgetType",
          "forecastType"
        ],
        "type": "object"
      },
      "SBForecastingResponseCampaignObject": {
        "properties": {
          "errors": {
            "items": {
              "$ref": "#/components/schemas/SBForecastingErrorObject"
            },
            "maxItems": 1,
            "minItems": 0,
            "type": "array"
          },
          "successes": {
            "items": {
              "$ref": "#/components/schemas/SBForecastingSuccessObject"
            },
            "maxItems": 1,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "SBForecastingSuccessCampaign": {
        "properties": {
          "forecastTimestamp": {
            "description": "The forecast timestamp.",
            "type": "string"
          },
          "forecasts": {
            "items": {
              "$ref": "#/components/schemas/SBForecastingMetric"
            },
            "maxItems": 2,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "SBForecastingSuccessObject": {
        "properties": {
          "campaign": {
            "$ref": "#/components/schemas/SBForecastingSuccessCampaign"
          },
          "index": {
            "description": "Correlates the campaign to the campaign list index specified in the request. Zero-based.",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "SBForecastingTheme": {
        "description": "The theme.",
        "properties": {
          "bid": {
            "description": "The associated bid. Note that this value must be less than the budget associated with the Advertiser account.",
            "format": "float",
            "type": "number"
          },
          "themeType": {
            "description": "The theme target type. Valid value: KEYWORDS_RELATED_TO_YOUR_BRAND, KEYWORDS_RELATED_TO_YOUR_LANDING_PAGES. \n\nKEYWORDS_RELATED_TO_YOUR_BRAND - keywords related to brands. \n\nKEYWORDS_RELATED_TO_YOUR_LANDING_PAGES - keywords related to your landing pages.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SBForecastingThrottlingExceptionResponseContent": {
        "description": "Returns information about a ThrottlingException.",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "details"
        ],
        "type": "object"
      },
      "SBForecastingUnauthorizedExceptionResponseContent": {
        "description": "Returns information about an UnauthorizedException.",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "details"
        ],
        "type": "object"
      },
      "SBForecastingUnprocessableEntityExceptionResponseContent": {
        "description": "Returns information about an UnprocessableEntityException.",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "details"
        ],
        "type": "object"
      },
      "SBGetAssociatedCampaignsResponse": {
        "properties": {
          "associatedCampaigns": {
            "description": "A list of campaigns that are associated to this budget rule.",
            "items": {
              "$ref": "#/components/schemas/AssociatedCampaign"
            },
            "maxItems": 30,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "description": "To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SBInsightsAdFormat": {
        "description": "Type of Ad format.",
        "enum": [
          "PRODUCT_COLLECTION",
          "STORE_SPOTLIGHT",
          "VIDEO",
          "BRAND_VIDEO"
        ],
        "type": "string"
      },
      "SBInsightsAdGroup": {
        "description": "The ad group settings.",
        "properties": {
          "adFormat": {
            "$ref": "#/components/schemas/SBInsightsAdFormat"
          },
          "keywords": {
            "items": {
              "$ref": "#/components/schemas/SBInsightsKeyword"
            },
            "maxItems": 800,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "adFormat"
        ],
        "type": "object"
      },
      "SBInsightsBadRequestExceptionResponseContent": {
        "description": "Returns information about a BadRequestException.",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "details"
        ],
        "type": "object"
      },
      "SBInsightsCampaignInsightsRequestContent": {
        "properties": {
          "adGroups": {
            "items": {
              "$ref": "#/components/schemas/SBInsightsAdGroup"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "adGroups"
        ],
        "type": "object"
      },
      "SBInsightsCampaignInsightsResponseContent": {
        "description": "Response object for /sb/campaigns/insights containing a list of insights for the campaign.",
        "properties": {
          "insights": {
            "items": {
              "$ref": "#/components/schemas/SBInsightsObject"
            },
            "maxItems": 1000,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "description": "Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the `NextToken` field is empty, there are no further results.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SBInsightsInternalServerExceptionResponseContent": {
        "description": "Returns information about an InternalServerException.",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "details"
        ],
        "type": "object"
      },
      "SBInsightsKeyword": {
        "description": "Keyword associated with the campaign.",
        "properties": {
          "bid": {
            "description": "The associated bid. Note that this value must be less than the budget associated with the Advertiser account. For more information, see [supported features](https://advertising.amazon.com/API/docs/v2/guides/supported_features).",
            "format": "double",
            "type": "number"
          },
          "keywordText": {
            "description": "The keyword text. Maximum of 10 words.",
            "type": "string"
          },
          "matchType": {
            "$ref": "#/components/schemas/SBInsightsMatchType"
          }
        },
        "required": [
          "bid",
          "keywordText",
          "matchType"
        ],
        "type": "object"
      },
      "SBInsightsKeywordAlertType": {
        "description": "Keyword alert insights associated with the selected keyword targets and bids.\nLOW_KEYWORD_TRAFFIC is provided if the keyword has very low traffic and is available in all marketplaces.\nLOW_BID is provided if the selected bid is low compared to the historical bids for this keyword\nand is only available in the following marketplaces: US, CA, MX, BR, UK, DE, FR, ES, IT, IN, AE, NL, SE, JP, AU, SG.",
        "enum": [
          "LOW_KEYWORD_TRAFFIC",
          "LOW_BID"
        ],
        "type": "string"
      },
      "SBInsightsKeywordInsight": {
        "description": "Insights for keywords selected for targeting.",
        "properties": {
          "adGroupIndex": {
            "description": "Correlates the ad group to the ad group array index specified in the request. Zero-based.",
            "type": "integer"
          },
          "alerts": {
            "items": {
              "$ref": "#/components/schemas/SBInsightsKeywordAlertType"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          },
          "bid": {
            "description": "The associated bid. Note that this value must be less than the budget associated with the Advertiser account. For more information, see [supported features](https://advertising.amazon.com/API/docs/v2/guides/supported_features).",
            "format": "double",
            "type": "number"
          },
          "keywordIndex": {
            "description": "Correlates the keyword to the keyword array index specified in the request. Zero-based.",
            "type": "integer"
          },
          "keywordText": {
            "description": "The keyword text. Maximum of 10 words.",
            "type": "string"
          },
          "matchType": {
            "$ref": "#/components/schemas/SBInsightsMatchType"
          },
          "searchTermImpressionRank": {
            "description": "The account-level ad-attributed impression rank for the search-term / keyword.\nProvides the [1:N] place the advertiser ranks among all advertisers for the keyword by ad impressions in a marketplace in the last 7 days.\nIt tells an advertiser how many advertisers had higher share of ad impressions.\nThis information is only available for keywords the advertiser targeted with ad impressions.\nOnly available in the following marketplaces: US, CA, MX, UK, DE, FR, ES, IT, IN, JP.",
            "type": "integer"
          },
          "searchTermImpressionShare": {
            "description": "The account-level ad-attributed impression share for the search-term / keyword.\nProvides percentage share of all ad impressions the advertiser has for the keyword in the last 7 days.\nThis metric helps advertisers identify potential opportunities based on their share of relevant keywords.\nThis information is only available for keywords the advertiser targeted with ad impressions.\nOnly available in the following marketplaces: US, CA, MX, UK, DE, FR, ES, IT, IN, JP.",
            "format": "double",
            "maximum": 100,
            "minimum": 0,
            "type": "number"
          }
        },
        "type": "object"
      },
      "SBInsightsMatchType": {
        "description": "The match type. For more information, see [match types](https://advertising.amazon.com/help#GHTRFDZRJPW6764R) in the Amazon Advertising support center.",
        "enum": [
          "EXACT",
          "PHRASE",
          "BROAD"
        ],
        "type": "string"
      },
      "SBInsightsObject": {
        "oneOf": [
          {
            "properties": {
              "keywordInsight": {
                "$ref": "#/components/schemas/SBInsightsKeywordInsight"
              }
            },
            "required": [
              "keywordInsight"
            ],
            "title": "keywordInsight",
            "type": "object"
          }
        ]
      },
      "SBInsightsThrottlingExceptionResponseContent": {
        "description": "Returns information about a ThrottlingException.",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "details"
        ],
        "type": "object"
      },
      "SBInsightsUnauthorizedExceptionResponseContent": {
        "description": "Returns information about an UnauthorizedException.",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "details"
        ],
        "type": "object"
      },
      "SBInsightsUnprocessableEntityExceptionResponseContent": {
        "description": "Returns information about an UnprocessableEntityException.",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "details"
        ],
        "type": "object"
      },
      "SBKeywordRecommendationLandingPage": {
        "properties": {
          "url": {
            "description": "The URL of the Stores page, or, Vendors may also specify the URL of a custom landing page.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SBKeywordRecommendationThemeKeyword": {
        "properties": {
          "recommendationId": {
            "description": "Unique ID for each recommendation.",
            "type": "string"
          },
          "value": {
            "description": "Recommended keyword value.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SBKeywordRecommendationThemeRequest": {
        "example": {
          "landingPage": [
            {
              "url": "www.amazon.com/sample-landing-page-1"
            },
            {
              "url": "www.amazon.com/sample-landing-page-2"
            }
          ],
          "maxNumSuggestions": "100",
          "themes": [
            {
              "themeType": "KEYWORDS_RELATED_TO_YOUR_BRAND"
            },
            {
              "themeType": "KEYWORDS_RELATED_TO_YOUR_LANDING_PAGES"
            }
          ]
        },
        "properties": {
          "landingPages": {
            "items": {
              "$ref": "#/components/schemas/SBKeywordRecommendationLandingPage"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "maxNumSuggestions": {
            "description": "Maximum number of suggestions to return for each theme. Max value is 1000. If not provided, default to 100.",
            "format": "int32",
            "maximum": 1000,
            "minimum": 1,
            "type": "integer"
          },
          "themes": {
            "items": {
              "$ref": "#/components/schemas/SBKeywordRecommendationThemes"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "SBKeywordRecommendationThemeSuggestion": {
        "properties": {
          "keywords": {
            "items": {
              "$ref": "#/components/schemas/SBKeywordRecommendationThemeKeyword"
            },
            "maxItems": 1000,
            "minItems": 0,
            "type": "array"
          },
          "type": {
            "$ref": "#/components/schemas/SBKeywordRecommendationThemeType"
          }
        },
        "type": "object"
      },
      "SBKeywordRecommendationThemeType": {
        "description": "Theme type for targeting. Used to get keyword recommendations for theme.",
        "enum": [
          "KEYWORDS_RELATED_TO_YOUR_BRAND",
          "KEYWORDS_RELATED_TO_YOUR_LANDING_PAGES"
        ],
        "type": "string"
      },
      "SBKeywordRecommendationThemes": {
        "properties": {
          "themeType": {
            "$ref": "#/components/schemas/SBKeywordRecommendationThemeType"
          }
        },
        "type": "object"
      },
      "SBListAssociatedBudgetRulesResponse": {
        "properties": {
          "associatedRules": {
            "description": "A list of associated budget rules.",
            "items": {
              "$ref": "#/components/schemas/SBCampaignBudgetRule"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SBOptimizationRecommendationRequestContent": {
        "properties": {
          "costControlMetric": {
            "$ref": "#/components/schemas/CostControlMetric"
          },
          "landingPages": {
            "items": {
              "$ref": "#/components/schemas/LandingPage"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "costControlMetric",
          "landingPages"
        ],
        "type": "object"
      },
      "SBOptimizationRecommendationResponseContent": {
        "properties": {
          "costControlMetric": {
            "$ref": "#/components/schemas/CostControlMetric"
          },
          "minimumValue": {
            "description": "Minimum accepted value for cost control metric.",
            "format": "double",
            "type": "number"
          },
          "recommendedValue": {
            "description": "Recommended value for cost control metric.",
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "costControlMetric",
          "minimumValue",
          "recommendedValue"
        ],
        "type": "object"
      },
      "SBRuleDuration": {
        "properties": {
          "dateRangeTypeRuleDuration": {
            "$ref": "#/components/schemas/DateRangeTypeRuleDuration"
          }
        },
        "required": [
          "dateRangeTypeRuleDuration"
        ],
        "type": "object"
      },
      "SBRuleType": {
        "description": "The type of budget rule. SCHEDULE: A budget rule based on a start and end date. PERFORMANCE: A budget rule based on advertising performance criteria.",
        "enum": [
          "SCHEDULE",
          "PERFORMANCE"
        ],
        "type": "string"
      },
      "SBTargetingAccessDeniedExceptionResponseContent": {
        "description": "Returns information about an AccessDeniedException.",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "details"
        ],
        "type": "object"
      },
      "SBTargetingAgeRange": {
        "properties": {
          "ageRangeRefinementId": {
            "description": "Id of Age Range. Use /sb/targets/categories/{categoryRefinementId}/refinements to retrieve Age Range Refinement IDs.",
            "type": "string"
          },
          "name": {
            "description": "Name of Age Range.",
            "type": "string"
          },
          "translatedName": {
            "description": "Translated name of Age Range based off locale sent in request.",
            "type": "string"
          }
        },
        "required": [
          "ageRangeRefinementId"
        ],
        "type": "object"
      },
      "SBTargetingBadRequestExceptionResponseContent": {
        "description": "Returns information about a BadRequestException.",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "details"
        ],
        "type": "object"
      },
      "SBTargetingBrand": {
        "properties": {
          "brandRefinementId": {
            "description": "Id of brand. Use /sb/targets/categories/{categoryRefinementId}/refinements to retrieve Brand Refinement IDs.",
            "type": "string"
          },
          "name": {
            "description": "Name of brand.",
            "type": "string"
          }
        },
        "required": [
          "brandRefinementId"
        ],
        "type": "object"
      },
      "SBTargetingCategory": {
        "description": "Category details.",
        "properties": {
          "asinCountRange": {
            "$ref": "#/components/schemas/SBTargetingIntegerRange"
          },
          "categoryRefinementId": {
            "description": "The category refinement id. Please use /sb/targets/categories or /sb/recommendations/targets/category to retrieve category IDs.",
            "type": "string"
          },
          "estimatedReach": {
            "$ref": "#/components/schemas/SBTargetingEstimatedReachRange"
          },
          "isTargetable": {
            "description": "If the category is targetable or not.",
            "type": "boolean"
          },
          "name": {
            "description": "Name of category.",
            "type": "string"
          },
          "parentCategoryRefinementId": {
            "description": "The category refinement id of the parent category. Missing parentCategoryRefinementId signifies this is a root category.",
            "type": "string"
          },
          "translatedName": {
            "description": "Translated name of the category.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SBTargetingEstimatedReachRange": {
        "properties": {
          "max": {
            "type": "integer"
          },
          "min": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "SBTargetingGenre": {
        "properties": {
          "genreRefinementId": {
            "description": "Id of Genre. Use /sb/targets/categories/{categoryRefinementId}/refinements to retrieve Genre Refinement IDs.",
            "type": "string"
          },
          "name": {
            "description": "Name of Genre.",
            "type": "string"
          },
          "translatedName": {
            "description": "Translated name of Genre based off locale sent in request.",
            "type": "string"
          }
        },
        "required": [
          "genreRefinementId"
        ],
        "type": "object"
      },
      "SBTargetingGetNegativeBrandsResponseContent": {
        "description": "Response object for /sb/negativeTargets/brands/recommendations containing list of brands for negative targeting.",
        "properties": {
          "brands": {
            "description": "List of Brands.",
            "items": {
              "$ref": "#/components/schemas/SBTargetingBrand"
            },
            "maxItems": 100,
            "type": "array"
          },
          "nextToken": {
            "description": "Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the `NextToken` field is empty, there are no further results.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SBTargetingGetRefinementsForCategoryResponseContent": {
        "description": "Response object for /sb/targets/categories/{categoryRefinementId}/refinements containing information on Brand Nodes, Age Range Nodes, and Genre Nodes.\n    Response is paginated with pagination occurring for all three arrays at once.\n    Example: If there are 800 brands, 5 age ranges, and 600 genres, the first response will return 500 brands, 5 age ranges, and 500 genres. The next paginated response will return 300 brands, 0 age ranges, and 100 genres.",
        "properties": {
          "ageRanges": {
            "description": "List of Age Ranges. Use /sb/targets/categories/{categoryRefinementId}/refinements to retrieve Age Ranges. Age Ranges are only available for categories related to children's toys and games.",
            "items": {
              "$ref": "#/components/schemas/SBTargetingAgeRange"
            },
            "maxItems": 500,
            "type": "array"
          },
          "brands": {
            "description": "List of Brands.",
            "items": {
              "$ref": "#/components/schemas/SBTargetingBrand"
            },
            "maxItems": 500,
            "type": "array"
          },
          "genres": {
            "description": "List of Genres. Use /sb/targets/categories/{categoryRefinementId}/refinements to retrieve Genre Node IDs. Genres are only available for categories related to books.",
            "items": {
              "$ref": "#/components/schemas/SBTargetingGenre"
            },
            "maxItems": 500,
            "type": "array"
          },
          "nextToken": {
            "description": "Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the `NextToken` field is empty, there are no further results.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SBTargetingGetTargetableASINCountsRequestContent": {
        "properties": {
          "ageRanges": {
            "description": "List of Age Range Refinement Ids.",
            "items": {
              "description": "Id of Age Range. Use /sb/targets/categories/{categoryRefinementId}/refinements to retrieve Age Range Refinement IDs.",
              "type": "string"
            },
            "maxItems": 100,
            "type": "array"
          },
          "brands": {
            "description": "List of Brand Refinement Ids.",
            "items": {
              "description": "Id of brand. Use /sb/targets/categories/{categoryRefinementId}/refinements to retrieve Brand Refinement IDs.",
              "type": "string"
            },
            "maxItems": 100,
            "type": "array"
          },
          "category": {
            "description": "The category refinement id. Please use /sb/targets/categories or /sb/recommendations/targets/category to retrieve category IDs.",
            "type": "string"
          },
          "genres": {
            "description": "List of Genre Refinement Ids.",
            "items": {
              "description": "Id of Genre. Use /sb/targets/categories/{categoryRefinementId}/refinements to retrieve Genre Refinement IDs.",
              "type": "string"
            },
            "maxItems": 100,
            "type": "array"
          },
          "isPrimeShipping": {
            "description": "Indicates if products have prime shipping. Leave empty to include both prime shipping and non-prime shipping products.",
            "type": "boolean"
          },
          "priceRange": {
            "$ref": "#/components/schemas/SBTargetingPriceRange"
          },
          "ratingRange": {
            "$ref": "#/components/schemas/SBTargetingRatingRange"
          }
        },
        "required": [
          "category"
        ],
        "type": "object"
      },
      "SBTargetingGetTargetableASINCountsResponseContent": {
        "description": "Response object for /sb/targets/products/count to get number of targetable asins for refinements provided by the user",
        "properties": {
          "asinCounts": {
            "$ref": "#/components/schemas/SBTargetingIntegerRange"
          }
        },
        "type": "object"
      },
      "SBTargetingGetTargetableCategoriesResponseContent": {
        "description": "Response object for /sb/targets/categories containing all targetable categories for the advertiser's marketplace.",
        "properties": {
          "categoryTree": {
            "description": "List of categories.",
            "items": {
              "$ref": "#/components/schemas/SBTargetingCategory"
            },
            "maxItems": 5000,
            "type": "array"
          },
          "nextToken": {
            "description": "Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the `NextToken` field is empty, there are no further results.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SBTargetingIntegerRange": {
        "properties": {
          "max": {
            "type": "integer"
          },
          "min": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "SBTargetingInternalServerExceptionResponseContent": {
        "description": "Returns information about an InternalServerException.",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "details"
        ],
        "type": "object"
      },
      "SBTargetingLocale": {
        "description": "The locale to which the caller wishes to translate the targetable categories or refinements to. For example, if the caller wishes to receive the targetable categories in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the returned tagetable categories will be in the default language of the marketplace.",
        "enum": [
          "ar_AE",
          "de_DE",
          "en_AE",
          "en_AU",
          "en_CA",
          "en_GB",
          "en_IN",
          "en_SG",
          "en_US",
          "es_ES",
          "es_MX",
          "fr_CA",
          "fr_FR",
          "hi_IN",
          "it_IT",
          "ja_JP",
          "ko_KR",
          "nl_NL",
          "pl_PL",
          "pt_BR",
          "sv_SE",
          "ta_IN",
          "th_TH",
          "tr_TR",
          "vi_VN",
          "zh_CN"
        ],
        "type": "string"
      },
      "SBTargetingPriceRange": {
        "description": "A range of prices. We use this to retrieve the number of targetable ASINs that falls within this price range.",
        "properties": {
          "max": {
            "format": "double",
            "type": "number"
          },
          "min": {
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "SBTargetingRatingRange": {
        "description": "Rating range is restricted to integers between 0 and 5, inclusive. Min must be less than or equal to max. We use this to retrieve the number of targetable ASINs that falls within this rating range.",
        "properties": {
          "max": {
            "maximum": 5,
            "minimum": 0,
            "type": "integer"
          },
          "min": {
            "maximum": 5,
            "minimum": 0,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "SBTargetingSupplySource": {
        "description": "[UPDATE: As of 05/28/2024, `STREAMING_VIDEO` is deprecated]. \n The supply source where the target will be used. Use `AMAZON` for placements on Amazon website. Use `STREAMING_VIDEO` for off-site video placements such as IMDb TV.",
        "enum": [
          "AMAZON",
          "STREAMING_VIDEO"
        ],
        "type": "string"
      },
      "SBTargetingThrottlingExceptionResponseContent": {
        "description": "Returns information about a ThrottlingException.",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "details"
        ],
        "type": "object"
      },
      "SBTargetingUnauthorizedExceptionResponseContent": {
        "description": "Returns information about an UnauthorizedException.",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "details"
        ],
        "type": "object"
      },
      "SBTargetingUnprocessableEntityExceptionResponseContent": {
        "description": "Returns information about an UnprocessableEntityException.",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "details"
        ],
        "type": "object"
      },
      "SDBudgetRule": {
        "properties": {
          "createdDate": {
            "description": "Epoch time of budget rule creation. Read-only.",
            "format": "int64",
            "type": "number"
          },
          "lastUpdatedDate": {
            "description": "Epoch time of budget rule update. Read-only.",
            "format": "int64",
            "type": "number"
          },
          "ruleDetails": {
            "$ref": "#/components/schemas/SDBudgetRuleDetails"
          },
          "ruleId": {
            "description": "The budget rule identifier.",
            "type": "string"
          },
          "ruleState": {
            "$ref": "#/components/schemas/state"
          },
          "ruleStatus": {
            "description": "The budget rule status. Read-only.",
            "type": "string"
          }
        },
        "required": [
          "ruleId"
        ],
        "type": "object"
      },
      "SDBudgetRuleDetails": {
        "description": "Object representing details of a budget rule for SD campaign",
        "properties": {
          "budgetIncreaseBy": {
            "$ref": "#/components/schemas/budgetIncreaseBy"
          },
          "duration": {
            "$ref": "#/components/schemas/RuleDuration"
          },
          "name": {
            "description": "The budget rule name. Required to be unique within a campaign.",
            "maxLength": 355,
            "type": "string"
          },
          "performanceMeasureCondition": {
            "$ref": "#/components/schemas/PerformanceMeasureCondition"
          },
          "recurrence": {
            "$ref": "#/components/schemas/Recurrence"
          },
          "ruleType": {
            "$ref": "#/components/schemas/SDRuleType"
          }
        },
        "type": "object"
      },
      "SDGetAssociatedCampaignsResponse": {
        "properties": {
          "associatedCampaigns": {
            "description": "A list of campaigns that are associated to this budget rule.",
            "items": {
              "$ref": "#/components/schemas/AssociatedCampaign"
            },
            "maxItems": 30,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "description": "To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SDHeadlineRecommendationAccessDeniedException": {
        "properties": {
          "code": {
            "description": "AccessDeniedErrorCode.",
            "enum": [
              "ACCESS_DENIED"
            ],
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the error response.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SDHeadlineRecommendationIdentifierNotfoundException": {
        "properties": {
          "code": {
            "description": "IdentiferNotFoundErrorCode.",
            "enum": [
              "IDENTIFIER_NOT_FOUND"
            ],
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the error response.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SDHeadlineRecommendationInternalServerException": {
        "properties": {
          "code": {
            "description": "InternalErrorCode.",
            "enum": [
              "INTERNAL_ERROR"
            ],
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the error response.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SDHeadlineRecommendationMarsThrottlingException": {
        "properties": {
          "code": {
            "description": "ThrottledErrorCode.",
            "enum": [
              "THROTTLED"
            ],
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the error response.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SDHeadlineRecommendationRequest": {
        "description": "Request structure of SD headline recommendation API.",
        "properties": {
          "adFormat": {
            "enum": [
              "SPONSORED_DISPLAY"
            ],
            "type": "string"
          },
          "asins": {
            "description": "An array of ASINs associated with the creative.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "maxNumRecommendations": {
            "description": "Maximum number of recommendations that API should return. Response will [0, maxNumRecommendations] recommendations (recommendations are not guaranteed as there can be instances where the ML model can not generate policy compliant headlines for the given set of asins).",
            "maximum": 10,
            "minimum": 1,
            "type": "number"
          }
        },
        "type": "object"
      },
      "SDHeadlineRecommendationResponse": {
        "description": "Response structure of SD headline recommendation API.",
        "properties": {
          "recommendations": {
            "description": "Recommendations are sorted, i.e., more suitable headline has lesser array index value.",
            "items": {
              "$ref": "#/components/schemas/RecommendedHeadline"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          },
          "requestId": {
            "description": "An identifier for request made which is generated by server.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SDHeadlineRecommendationSchemaValidationException": {
        "properties": {
          "code": {
            "description": "InvalidArgumentErrorCode.",
            "enum": [
              "INVALID_ARGUMENT"
            ],
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the error response.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SDListAssociatedBudgetRulesResponse": {
        "properties": {
          "associatedRules": {
            "description": "A list of associated budget rules.",
            "items": {
              "$ref": "#/components/schemas/SDBudgetRule"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SDRuleType": {
        "description": "The type of budget rule. SCHEDULE: A budget rule based on a start and end date. PERFORMANCE: A budget rule based on advertising performance criteria.",
        "enum": [
          "SCHEDULE",
          "PERFORMANCE"
        ],
        "type": "string"
      },
      "SPBudgetRule": {
        "properties": {
          "createdDate": {
            "description": "Epoch time of budget rule creation. Read-only.",
            "format": "int64",
            "type": "number"
          },
          "lastUpdatedDate": {
            "description": "Epoch time of budget rule update. Read-only.",
            "format": "int64",
            "type": "number"
          },
          "ruleDetails": {
            "$ref": "#/components/schemas/SPBudgetRuleDetails"
          },
          "ruleId": {
            "description": "The budget rule identifier.",
            "type": "string"
          },
          "ruleState": {
            "$ref": "#/components/schemas/state"
          },
          "ruleStatus": {
            "description": "The budget rule status. Read-only.",
            "type": "string"
          }
        },
        "required": [
          "ruleId"
        ],
        "type": "object"
      },
      "SPBudgetRuleDetails": {
        "description": "Object representing details of a budget rule for SP campaign",
        "properties": {
          "budgetIncreaseBy": {
            "$ref": "#/components/schemas/budgetIncreaseBy"
          },
          "duration": {
            "$ref": "#/components/schemas/RuleDuration"
          },
          "name": {
            "description": "The budget rule name. Required to be unique within a campaign.",
            "maxLength": 355,
            "type": "string"
          },
          "performanceMeasureCondition": {
            "$ref": "#/components/schemas/PerformanceMeasureCondition"
          },
          "recurrence": {
            "$ref": "#/components/schemas/Recurrence"
          },
          "ruleType": {
            "$ref": "#/components/schemas/SPRuleType"
          }
        },
        "type": "object"
      },
      "SPCampaignBudgetRule": {
        "properties": {
          "createdDate": {
            "description": "Epoch time of budget rule creation. Read-only.",
            "format": "int64",
            "type": "number"
          },
          "lastUpdatedDate": {
            "description": "Epoch time of budget rule update. Read-only.",
            "format": "int64",
            "type": "number"
          },
          "ruleDetails": {
            "$ref": "#/components/schemas/SPBudgetRuleDetails"
          },
          "ruleId": {
            "description": "The budget rule identifier.",
            "type": "string"
          },
          "ruleState": {
            "$ref": "#/components/schemas/state"
          },
          "ruleStatus": {
            "description": "The budget rule evaluation status. Read-only.",
            "type": "string"
          }
        },
        "required": [
          "ruleId"
        ],
        "type": "object"
      },
      "SPGetAssociatedCampaignsResponse": {
        "properties": {
          "associatedCampaigns": {
            "description": "A list of campaigns that are associated to this budget rule.",
            "items": {
              "$ref": "#/components/schemas/AssociatedCampaign"
            },
            "maxItems": 30,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "description": "To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SPListAssociatedBudgetRulesResponse": {
        "properties": {
          "associatedRules": {
            "description": "A list of associated budget rules.",
            "items": {
              "$ref": "#/components/schemas/SPCampaignBudgetRule"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SPRuleType": {
        "description": "The type of budget rule. SCHEDULE: A budget rule based on a start and end date. PERFORMANCE: A budget rule based on advertising performance criteria.",
        "enum": [
          "SCHEDULE",
          "PERFORMANCE"
        ],
        "type": "string"
      },
      "SecondaryHeadlineRecommendationGroups": {
        "description": "Ordered list of Secondary Headline recommendation groups.",
        "items": {
          "$ref": "#/components/schemas/TextRecommendations"
        },
        "maxItems": 5,
        "minItems": 0,
        "type": "array"
      },
      "SevenDaysMissedOpportunities": {
        "description": "Missed Opportunities in the trailing seven days.",
        "properties": {
          "endDate": {
            "description": "End date of the Missed Opportunities date range (YYYY-MM-DD) in local time.",
            "pattern": "^20[1-9][0-9]-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string"
          },
          "estimatedMissedClicksLower": {
            "description": "Lower bound of the estimated Missed Clicks.",
            "type": "number"
          },
          "estimatedMissedClicksUpper": {
            "description": "Upper bound of the estimated Missed Clicks.",
            "type": "number"
          },
          "estimatedMissedImpressionsLower": {
            "description": "Lower bound of the estimated Missed Impressions.",
            "type": "number"
          },
          "estimatedMissedImpressionsUpper": {
            "description": "Upper bound of the estimated Missed Impressions.",
            "type": "number"
          },
          "estimatedMissedSalesLower": {
            "description": "Lower bound of the estimated Missed Sales. This will be in local currency.",
            "format": "double",
            "type": "number"
          },
          "estimatedMissedSalesUpper": {
            "description": "Upper bound of the estimated Missed Sales. This will be in local currency.",
            "format": "double",
            "type": "number"
          },
          "percentTimeInBudget": {
            "description": "Percentage of time the campaign is active with a budget.",
            "format": "double",
            "type": "number"
          },
          "startDate": {
            "description": "Start date of the Missed Opportunities date range (YYYY-MM-DD) in local time.",
            "pattern": "^20[1-9][0-9]-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ShopperCohortBidAdjustment": {
        "properties": {
          "audienceSegments": {
            "description": "Required when \"AUDIENCE_SEGMENT\" is used for shopperCohortType.",
            "items": {
              "$ref": "#/components/schemas/AudienceSegment"
            },
            "maxItems": 1,
            "minItems": 1,
            "type": "array"
          },
          "percentage": {
            "maximum": 900,
            "minimum": 0,
            "type": "number"
          },
          "shopperCohortType": {
            "$ref": "#/components/schemas/ShopperCohortType"
          }
        },
        "type": "object"
      },
      "ShopperCohortType": {
        "description": "The shopper cohort type. The shopperCohortType is required to specify the type of shopper cohort used to apply bid adjustments. Currently only \"AUDIENCE_SEGMENT\" is supported.",
        "enum": [
          "AUDIENCE_SEGMENT"
        ],
        "type": "string"
      },
      "ShopperSegment": {
        "description": "List of bid adjustments for shopper segments.\n- NEW_TO_BRAND_PURCHASE - The shopper segment where shopper has not purchased product from the brand.",
        "enum": [
          "NEW_TO_BRAND_PURCHASE"
        ],
        "type": "string"
      },
      "SiteRestriction": {
        "enum": [
          "AMAZON_BUSINESS"
        ],
        "type": "string"
      },
      "Source": {
        "description": "Source of Creative Recommendation\nValid Sources are LANDING_PAGE_URL of store with landing page url value,\nand POST_ID of post organic content obtained from POSTS Advertising API, more could be added in future",
        "properties": {
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "StartMigrationJobRequestContent": {
        "properties": {
          "brandEntityId": {
            "description": "Please note that brandEntityId is only required for sellers. You can get the brandEntityId by calling the <a href = https://advertising.amazon.com/API/docs/en-us/sponsored-brands/3-0/openapi#tag/Brands/operation/getBrands>GET /brands</a> endpoint.",
            "type": "string"
          },
          "campaignIds": {
            "description": "Provide list of campaign ids that needs to be migrated",
            "items": {
              "type": "string"
            },
            "maxItems": 1000,
            "minItems": 0,
            "type": "array"
          },
          "enableThemeTargeting": {
            "description": "By default, theme targeting is set true if no value is provide. To disable theme targeting, set this flag to false.",
            "type": "boolean"
          },
          "isStagedMigration": {
            "description": "Set this flag to true if you want generate new campaign ID based on V3 campaign ID. These campaigns will not be visible through V4 campaign list call. If set to true not all campaign entities such as ad group, targeting, ad, or creatives are created. Use this flag for staging purpose only.\nBy default it will always be false",
            "type": "boolean"
          },
          "newCampaignState": {
            "description": "This is optional parameter. By default, the new migrated campaigns will have the original status of V3 campaigns. If this parameter is set, then all newly migrated campaigns will have this state.\n Supported campaign states\n| State                                              |  Description |\n|----------------------------------------------------------|--------------|\n| ENABLED                               | Campaign entity has ENABLED state |",
            "type": "string"
          }
        },
        "required": [
          "campaignIds",
          "enableThemeTargeting"
        ],
        "type": "object"
      },
      "StartMigrationJobResponseContent": {
        "properties": {
          "jobId": {
            "description": "This jobId can be used to track migration status through /sb/v4/legacyCampaigns/migrationJob/status\nand results of each campaign through /sb/v4/legacyCampaigns/migrationJob/results API",
            "type": "string"
          }
        },
        "type": "object"
      },
      "StatusFilter": {
        "properties": {
          "include": {
            "items": {
              "type": "string"
            },
            "maxItems": 3,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "StorePage": {
        "properties": {
          "displayName": {
            "description": "Display Name of the store page shown on a store spotlight campaign.",
            "type": "string"
          },
          "primaryAsin": {
            "description": "Selected asin from the store page which is displayed on the store spotlight campaign.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "StoreSpotlightCreative": {
        "properties": {
          "brandLogoAssetId": {
            "description": "The identifier of the [brand logo](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#brandlogo) image from the brand store's asset library.\nNote that for campaigns created in the Amazon Advertising console prior to release of the brand store's assets library, responses will not include a value for this field.",
            "type": "string"
          },
          "brandLogoCrop": {
            "$ref": "#/components/schemas/AssetCrop"
          },
          "brandName": {
            "description": "The displayed brand name in the ad headline.\nMaximum length is 30 characters.\nSee [the policy](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#headlines) for headline requirements.",
            "type": "string"
          },
          "consentToTranslate": {
            "description": "If set to true and the headline and/or video are not in the marketplace's default language, Amazon will attempt to translate them to the marketplace's default language.\nIf Amazon is unable to translate them, the ad will be rejected by moderation. We only support translating headlines and videos from English to German, French, Italian, Spanish, Japanese, and Dutch. See developer notes for more information.",
            "type": "boolean"
          },
          "creativePropertiesToOptimize": {
            "description": "If this property is enabled, Sponsored Brands will dynamically optimize by enhancing or generating creative properties based on shopper search intent.",
            "items": {
              "$ref": "#/components/schemas/CreativePropertyToOptimize"
            },
            "maxItems": 1,
            "minItems": 0,
            "type": "array"
          },
          "headline": {
            "description": "The headline text. Maximum length of the string is 50 characters for all marketplaces other than Japan, which has a maximum length of 35 characters.\nSee [the policy](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#headlines) for headline requirements.",
            "type": "string"
          },
          "landingPage": {
            "$ref": "#/components/schemas/CreativeLandingPageV2"
          },
          "subpages": {
            "description": "An array of subpages",
            "items": {
              "$ref": "#/components/schemas/Subpage"
            },
            "type": "array"
          }
        },
        "required": [
          "brandLogoAssetId",
          "brandName",
          "headline",
          "subpages"
        ],
        "type": "object"
      },
      "SubmitImageTasksRequestContent": {
        "properties": {
          "imageTaskMetadataList": {
            "description": "Advertiser provided information to generate AI images. Max size of the list is 4, each element will be executed as an individual image task",
            "items": {
              "$ref": "#/components/schemas/ImageTaskMetadata"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "SubmitImageTasksResponseContent": {
        "properties": {
          "batchId": {
            "description": "As per API First guidance, batch API should return a separate list for success and errors in the response.\nThe success/submitted and error fields will indicate the status of submission, they don't mean the status of image generation task.\nStatus code will be 207 for partial successful requests and all successful requests.\nA batchId that is used to track status multiple tasks if they are submitted in one batch request\nIf none of the request is submitted successfully, batchId will be null",
            "type": "string"
          },
          "error": {
            "items": {
              "$ref": "#/components/schemas/ErrorDetails"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          },
          "submitted": {
            "items": {
              "$ref": "#/components/schemas/Submitted"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "Submitted": {
        "properties": {
          "index": {
            "description": "The index of the image task in the array from the request body",
            "type": "number"
          },
          "taskId": {
            "description": "The identifier of image generation task",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Subpage": {
        "properties": {
          "asin": {
            "type": "string"
          },
          "pageTitle": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "SuggestedHeadline": {
        "description": "Suggested Headline in response object.",
        "properties": {
          "headline": {
            "description": "String that contains suggested headline.",
            "example": "This is a suggested headline.",
            "type": "string"
          },
          "headlineId": {
            "description": "Unique Id of suggested headline.",
            "example": "e991e32c-0136-427a-843b-ff04162f2f91",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Tags": {
        "additionalProperties": {
          "type": "string"
        },
        "description": "A list of advertiser-specified custom identifiers for the campaign. Each customer identifier is a key-value pair. You can specify a maximum of 50 identifiers.",
        "maxProperties": 50,
        "minProperties": 0,
        "type": "object"
      },
      "TaskIdFilter": {
        "properties": {
          "include": {
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "TextComponent": {
        "description": "Text component which needs to be pre moderated",
        "properties": {
          "componentType": {
            "description": "Type of text component.",
            "enum": [
              "HEADLINE",
              "BRAND_NAME",
              "OTHER_TEXT"
            ],
            "type": "string"
          },
          "id": {
            "description": "Id of the component. The same will be returned as part of the response as well. This can be used to uniquely identify the component from the pre moderation response.",
            "type": "string"
          },
          "text": {
            "description": "Text which needs to be moderated.",
            "type": "string"
          }
        },
        "required": [
          "componentType",
          "id",
          "text"
        ],
        "type": "object"
      },
      "TextComponentResponse": {
        "description": "Pre moderation result for a text component",
        "properties": {
          "componentType": {
            "description": "Type of the text component.",
            "enum": [
              "HEADLINE",
              "BRAND_NAME",
              "OTHER_TEXT"
            ],
            "type": "string"
          },
          "corrections": {
            "description": "A list of corrected text without any policy violation. You could consider replacing the component with one of the corrected texts",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "id": {
            "description": "Id of the component. This is the same id sent as part of the request. This can be used to uniquely identify the component.",
            "type": "string"
          },
          "policyViolations": {
            "description": "A list of policy violations for the component that were detected during pre moderation. Note that this field is present in the response only when preModerationStatus is set to REJECTED.",
            "items": {
              "$ref": "#/components/schemas/TextPolicyViolation"
            },
            "type": "array"
          },
          "preModerationStatus": {
            "description": "The pre moderation status of the component.",
            "enum": [
              "REJECTED",
              "APPROVED",
              "FAILED",
              "RETRYABLE_FAILURE"
            ],
            "type": "string"
          },
          "text": {
            "description": "Text which got pre moderated.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TextEvidence": {
        "description": "Structure of a text evidence",
        "properties": {
          "position": {
            "description": "Position in the textComponent where the policy violation is detected.",
            "properties": {
              "end": {
                "description": "Zero-based index into the text in textComponent where the text specified in violatingText ends.",
                "type": "integer"
              },
              "start": {
                "description": "Zero-based index into the text in textComponent where the text specified in violatingText starts.",
                "type": "integer"
              }
            },
            "type": "object"
          },
          "violatingText": {
            "description": "The specific text determined to violate the specified policy in reviewedText.",
            "example": "alcohol",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TextPolicyViolation": {
        "description": "Structure of policy violation for a text component",
        "properties": {
          "name": {
            "description": "A policy violation code.",
            "example": "GRAMMATICAL_ERROR",
            "type": "string"
          },
          "policyDescription": {
            "description": "A human-readable description of the policy.",
            "type": "string"
          },
          "policyLinkUrl": {
            "description": "Address of the policy documentation. Follow the link to learn more about the specified policy.",
            "example": "https://advertising.amazon.com/resources/ad-policy/en/creative-acceptance#alcohol",
            "type": "string"
          },
          "textEvidences": {
            "description": "List of text evidences",
            "items": {
              "$ref": "#/components/schemas/TextEvidence"
            },
            "type": "array"
          },
          "type": {
            "description": "Type of policy violation.",
            "enum": [
              "WARNING",
              "REJECTED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "TextPosition": {
        "properties": {
          "end": {
            "description": "Zero-based index into the text in reviewedText where the text specified in violatingText ends.",
            "format": "int64",
            "type": "integer"
          },
          "start": {
            "description": "Zero-based index into the text in reviewedText where the text specified in violatingText starts.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "TextRecommendation": {
        "properties": {
          "id": {
            "description": "Unique ID for generated recommendation.",
            "type": "string"
          },
          "value": {
            "description": "Recommendation value.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TextRecommendations": {
        "description": "Ordered list of recommendations in each group.",
        "items": {
          "$ref": "#/components/schemas/TextRecommendation"
        },
        "maxItems": 5,
        "minItems": 0,
        "type": "array"
      },
      "Theme": {
        "description": "Structure for theme details",
        "properties": {
          "themeForDisplay": {
            "type": "string"
          },
          "themeId": {
            "type": "string"
          }
        },
        "required": [
          "themeForDisplay",
          "themeId"
        ],
        "type": "object"
      },
      "ThrottledErrorCode": {
        "enum": [
          "THROTTLED"
        ],
        "type": "string"
      },
      "ThrottlingErrorCode": {
        "enum": [
          "THROTTLED"
        ],
        "type": "string"
      },
      "ThrottlingErrorResponseContent": {
        "properties": {
          "code": {
            "$ref": "#/components/schemas/ThrottlingErrorCode"
          },
          "message": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message",
          "requestId"
        ],
        "type": "object"
      },
      "ThrottlingExceptionResponseContent": {
        "properties": {
          "code": {
            "$ref": "#/components/schemas/ThrottledErrorCode"
          },
          "message": {
            "description": "Human readable error message.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "type": "object"
      },
      "UnauthorizedErrorCode": {
        "enum": [
          "UNAUTHORIZED"
        ],
        "type": "string"
      },
      "UnauthorizedErrorResponseContent": {
        "properties": {
          "code": {
            "$ref": "#/components/schemas/UnauthorizedErrorCode"
          },
          "message": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message",
          "requestId"
        ],
        "type": "object"
      },
      "UnauthorizedExceptionResponseContent": {
        "properties": {
          "code": {
            "$ref": "#/components/schemas/UnauthorizedErrorCode"
          },
          "message": {
            "description": "Human readable error message.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ],
        "type": "object"
      },
      "UnsupportedMediaTypeExceptionResponseContent": {
        "properties": {
          "code": {
            "description": "A human-readable description of the enumerated response code in the `code` field.",
            "type": "string"
          },
          "details": {
            "description": "An enumerated response code.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "details"
        ],
        "type": "object"
      },
      "UpdateAd": {
        "properties": {
          "adId": {
            "description": "The product ad identifier.",
            "type": "string"
          },
          "name": {
            "description": "The name of the ad.",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/CreateOrUpdateEntityState"
          }
        },
        "required": [
          "adId"
        ],
        "type": "object"
      },
      "UpdateAdGroup": {
        "properties": {
          "adGroupId": {
            "description": "The identifier of the keyword.",
            "type": "string"
          },
          "name": {
            "description": "The name of the ad group.",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/CreateOrUpdateEntityState"
          }
        },
        "required": [
          "adGroupId"
        ],
        "type": "object"
      },
      "UpdateBudgetRulesResponse": {
        "properties": {
          "responses": {
            "items": {
              "$ref": "#/components/schemas/BudgetRuleResponse"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "UpdateCampaign": {
        "properties": {
          "bidding": {
            "$ref": "#/components/schemas/Bidding"
          },
          "budget": {
            "description": "The budget of the campaign. See https://advertising.amazon.com/help?entityId=ENTITYJDATFOIA05Q7#GE5QEBS6QRJJAT3A",
            "format": "double",
            "type": "number"
          },
          "campaignId": {
            "description": "The identifier of the campaign.",
            "type": "string"
          },
          "endDate": {
            "description": "endDate is optional. If endDate is specified, startDate must be specified as well. Note: This property is nullable. If null is explicitly provided in a campaign update request, any existing endDate for the campaign will be removed.",
            "nullable": true,
            "pattern": "^20[1-9][0-9]-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string"
          },
          "name": {
            "description": "The name of the campaign.",
            "maxLength": 128,
            "minLength": 1,
            "type": "string"
          },
          "portfolioId": {
            "description": "The identifier of an existing portfolio to which the campaign is associated.",
            "nullable": true,
            "type": "string"
          },
          "startDate": {
            "description": "startDate can only be changed if the current startDate is in the future.",
            "pattern": "^20[1-9][0-9]-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/CreateOrUpdateEntityState"
          },
          "tags": {
            "$ref": "#/components/schemas/Tags"
          }
        },
        "required": [
          "campaignId"
        ],
        "type": "object"
      },
      "UpdateOptimizationRule": {
        "properties": {
          "conditions": {
            "items": {
              "$ref": "#/components/schemas/RuleCondition"
            },
            "maxItems": 1,
            "minItems": 1,
            "type": "array"
          },
          "optimizationRuleId": {
            "description": "The identifier of the optimization rule.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateOptimizationRuleSuccessResponseItem": {
        "properties": {
          "index": {
            "description": "The index of the entityId in the array from the request body.",
            "maximum": 10,
            "minimum": 0,
            "type": "number"
          },
          "optimizationRule": {
            "$ref": "#/components/schemas/OptimizationRule"
          },
          "optimizationRuleId": {
            "description": "The identifier of the optimization rule.",
            "type": "string"
          }
        },
        "required": [
          "index",
          "optimizationRule",
          "optimizationRuleId"
        ],
        "type": "object"
      },
      "UpdateSBBudgetRulesRequest": {
        "properties": {
          "budgetRulesDetails": {
            "description": "A list of budget rule details.",
            "items": {
              "$ref": "#/components/schemas/SBBudgetRule"
            },
            "maxItems": 25,
            "type": "array"
          }
        },
        "type": "object"
      },
      "UpdateSDBudgetRulesRequest": {
        "description": "Request object for updating budget rule for SD campaign",
        "properties": {
          "budgetRulesDetails": {
            "description": "A list of budget rule details.",
            "items": {
              "$ref": "#/components/schemas/SDBudgetRule"
            },
            "maxItems": 25,
            "type": "array"
          }
        },
        "type": "object"
      },
      "UpdateSPBudgetRulesRequest": {
        "description": "Request object for updating budget rule for SP campaign",
        "properties": {
          "budgetRulesDetails": {
            "description": "A list of budget rule details.",
            "items": {
              "$ref": "#/components/schemas/SPBudgetRule"
            },
            "maxItems": 25,
            "type": "array"
          }
        },
        "type": "object"
      },
      "UpdateSponsoredBrandsAdGroupsBetaRequestContent": {
        "properties": {
          "adGroups": {
            "items": {
              "$ref": "#/components/schemas/UpdateAdGroup"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "adGroups"
        ],
        "type": "object"
      },
      "UpdateSponsoredBrandsAdGroupsBetaResponseContent": {
        "properties": {
          "adGroups": {
            "$ref": "#/components/schemas/BulkAdGroupOperationResponse"
          }
        },
        "type": "object"
      },
      "UpdateSponsoredBrandsAdGroupsRequestContent": {
        "properties": {
          "adGroups": {
            "items": {
              "$ref": "#/components/schemas/UpdateAdGroup"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "adGroups"
        ],
        "type": "object"
      },
      "UpdateSponsoredBrandsAdGroupsResponseContent": {
        "properties": {
          "adGroups": {
            "$ref": "#/components/schemas/BulkAdGroupOperationResponse"
          }
        },
        "type": "object"
      },
      "UpdateSponsoredBrandsAdsBetaRequestContent": {
        "properties": {
          "ads": {
            "items": {
              "$ref": "#/components/schemas/UpdateAd"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "ads"
        ],
        "type": "object"
      },
      "UpdateSponsoredBrandsAdsBetaResponseContent": {
        "properties": {
          "ads": {
            "$ref": "#/components/schemas/BulkAdOperationResponse"
          }
        },
        "type": "object"
      },
      "UpdateSponsoredBrandsAdsRequestContent": {
        "properties": {
          "ads": {
            "items": {
              "$ref": "#/components/schemas/UpdateAd"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "ads"
        ],
        "type": "object"
      },
      "UpdateSponsoredBrandsAdsResponseContent": {
        "properties": {
          "ads": {
            "$ref": "#/components/schemas/BulkAdOperationResponse"
          }
        },
        "type": "object"
      },
      "UpdateSponsoredBrandsCampaignsBetaRequestContent": {
        "properties": {
          "campaigns": {
            "items": {
              "$ref": "#/components/schemas/UpdateCampaign"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "campaigns"
        ],
        "type": "object"
      },
      "UpdateSponsoredBrandsCampaignsBetaResponseContent": {
        "properties": {
          "campaigns": {
            "$ref": "#/components/schemas/BulkCampaignOperationResponse"
          }
        },
        "type": "object"
      },
      "UpdateSponsoredBrandsCampaignsRequestContent": {
        "properties": {
          "campaigns": {
            "items": {
              "$ref": "#/components/schemas/UpdateCampaign"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "campaigns"
        ],
        "type": "object"
      },
      "UpdateSponsoredBrandsCampaignsResponseContent": {
        "properties": {
          "campaigns": {
            "$ref": "#/components/schemas/BulkCampaignOperationResponse"
          }
        },
        "type": "object"
      },
      "UpdateSponsoredBrandsOptimizationRulesRequestContent": {
        "properties": {
          "optimizationRules": {
            "items": {
              "$ref": "#/components/schemas/UpdateOptimizationRule"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "optimizationRules"
        ],
        "type": "object"
      },
      "UpdateSponsoredBrandsOptimizationRulesResponseContent": {
        "properties": {
          "optimizationRules": {
            "$ref": "#/components/schemas/BulkUpdateOptimizationRuleOperationResponse"
          }
        },
        "required": [
          "optimizationRules"
        ],
        "type": "object"
      },
      "ValueTypeRuleCriteria": {
        "properties": {
          "comparisonOperator": {
            "description": "Enum: \"LESS_THAN_OR_EQUAL_TO\"\n\nThe comparison operator.",
            "type": "string"
          },
          "value": {
            "description": "The value of the threshold associated with the attribute.",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "VersionId": {
        "description": "The version identifier that helps to keep track of multiple versions of a submitted ad. In case of Sponsored Brands this is the creative version id.",
        "type": "string"
      },
      "VideoComponent": {
        "description": "Video component which needs to be pre moderated. A publicly accessible videoUrl must be sent.",
        "properties": {
          "componentType": {
            "description": "Type of the video component.",
            "enum": [
              "SPONSORED_BRANDS_VIDEO",
              "OTHER_VIDEO"
            ],
            "type": "string"
          },
          "id": {
            "description": "Id of the component. The same will be returned as part of the response as well. This can be used to uniquely identify the component from the pre moderation response.",
            "type": "string"
          },
          "landingPage": {
            "$ref": "#/components/schemas/LandingPage"
          },
          "url": {
            "description": "Url of the video to be pre moderated. The url must be publicly accessible.",
            "type": "string"
          }
        },
        "required": [
          "componentType",
          "id",
          "url"
        ],
        "type": "object"
      },
      "VideoComponentResponse": {
        "description": "Pre moderation result for a video component",
        "properties": {
          "componentType": {
            "description": "Type of the video component.",
            "enum": [
              "SPONSORED_BRANDS_VIDEO",
              "OTHER_VIDEO"
            ],
            "type": "string"
          },
          "id": {
            "description": "Id of the component. This is the same id sent as part of the request. This can be used to uniquely identify the component.",
            "type": "string"
          },
          "landingPage": {
            "$ref": "#/components/schemas/LandingPage"
          },
          "policyViolations": {
            "description": "A list of policy violations for the component that were detected during pre moderation. Note that this field is present in the response only when preModerationStatus is set to REJECTED.",
            "items": {
              "$ref": "#/components/schemas/VideoPolicyViolation"
            },
            "type": "array"
          },
          "preModerationStatus": {
            "description": "The pre moderation status of the component.",
            "enum": [
              "REJECTED",
              "APPROVED",
              "FAILED",
              "RETRYABLE_FAILURE"
            ],
            "type": "string"
          },
          "url": {
            "description": "Publicly accessible url of the video that got pre moderated.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "VideoCreative": {
        "properties": {
          "consentToTranslate": {
            "description": "If set to true and the heaadline and/or video are not in the marketplace's default language, Amazon will attempt to translate them to the marketplace's default language.\nIf Amazon is unable to translate them, the ad will be rejected by moderation. We only support translating headlines and videos from English to German, French, Italian, Spanish, Japanese, and Dutch. See developer notes for more information.",
            "type": "boolean"
          },
          "videoAssetIds": {
            "description": "The assetIds of the original videos submitted by the advertiser.\nIf 'consentToTranslate' is set to true and translation is SUCCESSFUL then 'videoAssetIds' will return translated video assetId whereas `originalVideoAssetIds` will return the original video assetId. In all other cases, `videoAssetIds` will return original video assetId.",
            "items": {
              "description": "The identifier of image/video asset from the store's asset library",
              "type": "string"
            },
            "maxItems": 1,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "videoAssetIds"
        ],
        "type": "object"
      },
      "VideoEvidence": {
        "description": "Structure of a video evidence",
        "properties": {
          "end": {
            "description": "The end position (in seconds) of the content that violates the specified policy within the video.",
            "type": "integer"
          },
          "start": {
            "description": "The start position (in seconds) of the content that violates the specified policy within the video.",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "VideoPolicyViolation": {
        "description": "Structure of policy violation for a video component",
        "properties": {
          "name": {
            "description": "A policy violation code.",
            "type": "string"
          },
          "policyDescription": {
            "description": "A human-readable description of the policy.",
            "type": "string"
          },
          "policyLinkUrl": {
            "description": "Address of the policy documentation. Follow the link to learn more about the specified policy.",
            "example": "https://advertising.amazon.com/resources/ad-policy/en/creative-acceptance#alcohol",
            "type": "string"
          },
          "type": {
            "description": "Type of policy violation.",
            "enum": [
              "WARNING",
              "REJECTED"
            ],
            "type": "string"
          },
          "videoEvidences": {
            "description": "List of evidences for the policy violations detected on the video component.",
            "items": {
              "$ref": "#/components/schemas/VideoEvidence"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "VideoPosition": {
        "properties": {
          "end": {
            "description": "End time of the video having the policy violation.",
            "format": "int64",
            "type": "integer"
          },
          "start": {
            "description": "Start time of the video having the policy violation.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "ViolatingAsinContent": {
        "properties": {
          "moderatedComponent": {
            "description": "Moderation component which marked the policy violation.",
            "type": "string"
          },
          "violatingAsinEvidences": {
            "items": {
              "$ref": "#/components/schemas/ViolatingAsinEvidence"
            },
            "maxItems": 200,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ViolatingAsinEvidence": {
        "properties": {
          "asin": {
            "description": "ASIN which has the ad policy violation.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ViolatingImageContent": {
        "properties": {
          "moderatedComponent": {
            "description": "Moderation component which marked the policy violation.",
            "type": "string"
          },
          "reviewedImageUrl": {
            "description": "URL of the image which has the ad policy violation.",
            "type": "string"
          },
          "violatingImageEvidences": {
            "items": {
              "$ref": "#/components/schemas/ViolatingImageEvidence"
            },
            "maxItems": 200,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ViolatingImageEvidence": {
        "properties": {
          "violatingImageCrop": {
            "$ref": "#/components/schemas/ImageCrop"
          }
        },
        "type": "object"
      },
      "ViolatingTextContent": {
        "description": "Information about the specific text that violates the specified policy in the campaign.",
        "properties": {
          "moderatedComponent": {
            "description": "Moderation component which marked the policy violation.",
            "type": "string"
          },
          "reviewedText": {
            "description": "The actual text on which the moderation was done.",
            "type": "string"
          },
          "violatingTextEvidences": {
            "items": {
              "$ref": "#/components/schemas/ViolatingTextEvidence"
            },
            "maxItems": 200,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ViolatingTextEvidence": {
        "properties": {
          "violatingText": {
            "description": "The specific text determined to violate the specified policy in reviewedText.",
            "type": "string"
          },
          "violatingTextPosition": {
            "$ref": "#/components/schemas/TextPosition"
          }
        },
        "type": "object"
      },
      "ViolatingVideoContent": {
        "properties": {
          "moderatedComponent": {
            "description": "Moderation component which marked the policy violation.",
            "type": "string"
          },
          "reviewedVideoUrl": {
            "description": "URL of the video which has the ad policy violation.",
            "type": "string"
          },
          "violatingVideoEvidences": {
            "items": {
              "$ref": "#/components/schemas/ViolatingVideoEvidence"
            },
            "maxItems": 200,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ViolatingVideoEvidence": {
        "properties": {
          "violatingVideoPosition": {
            "$ref": "#/components/schemas/VideoPosition"
          }
        },
        "type": "object"
      },
      "budgetIncreaseBy": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/BudgetChangeType"
          },
          "value": {
            "description": "The budget value.",
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "type",
          "value"
        ],
        "type": "object"
      },
      "state": {
        "description": "The budget rule state.",
        "enum": [
          "ACTIVE",
          "PAUSED"
        ],
        "type": "string"
      },
      "timeOfDay": {
        "properties": {
          "endTime": {
            "description": "The end time of intra-day budget rule window in the format 'hh:mm:ss'. Required to be greater than start-time. ",
            "type": "string"
          },
          "startTime": {
            "description": "The start time of intra-day budget rule window in the format 'hh:mm:ss' ",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {}
  },
  "info": {
    "description": "Create and manage Sponsored Brands campaigns. \n\nTo learn more about Sponsored Brands campaigns, see:\n\n - [Sponsored Brands overview](guides/sponsored-brands/overview)\n - [Sponsored Brands campaign structure](guides/sponsored-brands/campaigns/structure)\n - [Get started with Sponsored Brands campaigns](guides/sponsored-brands/campaigns/get-started-with-campaigns)",
    "title": "Sponsored Brands campaign management",
    "version": "4.0"
  },
  "openapi": "3.0.1",
  "paths": {
    "/sb/ads/creatives/brandVideo": {
      "post": {
        "description": "This API creates a new version of an existing creative for given Sponsored Brands Ad by supplying brand video creative content\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "CreateBrandVideoCreative",
        "parameters": [
          {
            "description": "Clients request a specific version of a resource using the Accept request-header field set to the value field of the desired content-type.",
            "in": "header",
            "name": "Accept",
            "schema": {
              "$ref": "#/components/schemas/AcceptHeader"
            }
          },
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.\nThis is a required header for advertisers and integrators using the Advertising API.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.\nThis is a required header for advertisers and integrators using the Advertising API.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account.\nUse GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and use profileId from the response to pass as input.\nThis is a required header for advertisers and integrators using the Advertising API.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account.\nUse GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and use profileId from the response to pass as input.\nThis is a required header for advertisers and integrators using the Advertising API.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.sbAdCreativeResource.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBrandVideoCreativeRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBrandVideoCreativeResponseContent"
                }
              }
            },
            "description": "CreateBrandVideoCreative 200 response"
          },
          "400": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidArgumentExceptionResponseContent"
                }
              }
            },
            "description": "InvalidArgumentException 400 response"
          },
          "401": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response"
          },
          "403": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response"
          },
          "409": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictStateExceptionResponseContent"
                }
              }
            },
            "description": "ConflictStateException 409 response"
          },
          "429": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response"
          },
          "500": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerExceptionResponseContent"
                }
              }
            },
            "description": "InternalServerException 500 response"
          }
        },
        "summary": "Create new version of brand video ad creative",
        "tags": [
          "Ad creatives"
        ]
      }
    },
    "/sb/ads/creatives/list": {
      "post": {
        "description": "This API gets an array of all Sponsored Brands creatives that qualify the given resource identifiers and filters\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "operationId": "ListCreatives",
        "parameters": [
          {
            "description": "Clients request a specific version of a resource using the Accept request-header field set to the value field of the desired content-type.",
            "in": "header",
            "name": "Accept",
            "schema": {
              "$ref": "#/components/schemas/AcceptHeader"
            }
          },
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.\nThis is a required header for advertisers and integrators using the Advertising API.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.\nThis is a required header for advertisers and integrators using the Advertising API.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account.\nUse GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and use profileId from the response to pass as input.\nThis is a required header for advertisers and integrators using the Advertising API.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account.\nUse GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and use profileId from the response to pass as input.\nThis is a required header for advertisers and integrators using the Advertising API.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.sbAdCreativeResource.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/ListCreativesRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCreativesResponseContent"
                }
              }
            },
            "description": "ListCreatives 200 response"
          },
          "400": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidArgumentExceptionResponseContent"
                }
              }
            },
            "description": "InvalidArgumentException 400 response"
          },
          "401": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response"
          },
          "403": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response"
          },
          "404": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundExceptionResponseContent"
                }
              }
            },
            "description": "NotFoundException 404 response"
          },
          "429": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response"
          },
          "500": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerExceptionResponseContent"
                }
              }
            },
            "description": "InternalServerException 500 response"
          }
        },
        "summary": "List ad creatives",
        "tags": [
          "Ad creatives"
        ]
      }
    },
    "/sb/ads/creatives/productCollection": {
      "post": {
        "description": "This API creates a new version of creative for given Sponsored Brands ad by supplying product collection creative content\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "CreateProductCollectionCreative",
        "parameters": [
          {
            "description": "Clients request a specific version of a resource using the Accept request-header field set to the value field of the desired content-type.",
            "in": "header",
            "name": "Accept",
            "schema": {
              "$ref": "#/components/schemas/AcceptHeader"
            }
          },
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.\nThis is a required header for advertisers and integrators using the Advertising API.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.\nThis is a required header for advertisers and integrators using the Advertising API.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account.\nUse GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and use profileId from the response to pass as input.\nThis is a required header for advertisers and integrators using the Advertising API.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account.\nUse GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and use profileId from the response to pass as input.\nThis is a required header for advertisers and integrators using the Advertising API.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.sbAdCreativeResource.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductCollectionCreativeRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProductCollectionCreativeResponseContent"
                }
              }
            },
            "description": "CreateProductCollectionCreative 200 response"
          },
          "400": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidArgumentExceptionResponseContent"
                }
              }
            },
            "description": "InvalidArgumentException 400 response"
          },
          "401": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response"
          },
          "403": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response"
          },
          "409": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictStateExceptionResponseContent"
                }
              }
            },
            "description": "ConflictStateException 409 response"
          },
          "429": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response"
          },
          "500": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerExceptionResponseContent"
                }
              }
            },
            "description": "InternalServerException 500 response"
          }
        },
        "summary": "Create new version of product collection ad creative",
        "tags": [
          "Ad creatives"
        ]
      }
    },
    "/sb/ads/creatives/productCollectionExtended": {
      "post": {
        "description": "This API creates a new version of creative for given Sponsored Brands ad by supplying extended product collection creative content\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "CreateExtendedProductCollectionCreative",
        "parameters": [
          {
            "description": "Clients request a specific version of a resource using the Accept request-header field set to the value field of the desired content-type.",
            "in": "header",
            "name": "Accept",
            "schema": {
              "$ref": "#/components/schemas/AcceptHeader"
            }
          },
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.\nThis is a required header for advertisers and integrators using the Advertising API.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.\nThis is a required header for advertisers and integrators using the Advertising API.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account.\nUse GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and use profileId from the response to pass as input.\nThis is a required header for advertisers and integrators using the Advertising API.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account.\nUse GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and use profileId from the response to pass as input.\nThis is a required header for advertisers and integrators using the Advertising API.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.sbAdCreativeResource.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateExtendedProductCollectionCreativeRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateExtendedProductCollectionCreativeResponseContent"
                }
              }
            },
            "description": "CreateExtendedProductCollectionCreative 200 response"
          },
          "400": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidArgumentExceptionResponseContent"
                }
              }
            },
            "description": "InvalidArgumentException 400 response"
          },
          "401": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response"
          },
          "403": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response"
          },
          "409": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictStateExceptionResponseContent"
                }
              }
            },
            "description": "ConflictStateException 409 response"
          },
          "429": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response"
          },
          "500": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerExceptionResponseContent"
                }
              }
            },
            "description": "InternalServerException 500 response"
          }
        },
        "summary": "Creates Sponsored Brands new version of product collection with collection of custom image ads",
        "tags": [
          "Ad creatives"
        ]
      }
    },
    "/sb/ads/creatives/storeSpotlight": {
      "post": {
        "description": "This API creates a new version of creative for given Sponsored Brands ad by supplying store spotlight creative content\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "CreateStoreSpotlightCreative",
        "parameters": [
          {
            "description": "Clients request a specific version of a resource using the Accept request-header field set to the value field of the desired content-type.",
            "in": "header",
            "name": "Accept",
            "schema": {
              "$ref": "#/components/schemas/AcceptHeader"
            }
          },
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.\nThis is a required header for advertisers and integrators using the Advertising API.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.\nThis is a required header for advertisers and integrators using the Advertising API.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account.\nUse GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and use profileId from the response to pass as input.\nThis is a required header for advertisers and integrators using the Advertising API.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account.\nUse GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and use profileId from the response to pass as input.\nThis is a required header for advertisers and integrators using the Advertising API.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.sbAdCreativeResource.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStoreSpotlightCreativeRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateStoreSpotlightCreativeResponseContent"
                }
              }
            },
            "description": "CreateStoreSpotlightCreative 200 response"
          },
          "400": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidArgumentExceptionResponseContent"
                }
              }
            },
            "description": "InvalidArgumentException 400 response"
          },
          "401": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response"
          },
          "403": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response"
          },
          "409": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictStateExceptionResponseContent"
                }
              }
            },
            "description": "ConflictStateException 409 response"
          },
          "429": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response"
          },
          "500": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerExceptionResponseContent"
                }
              }
            },
            "description": "InternalServerException 500 response"
          }
        },
        "summary": "Create new version of store spotlight ad creative",
        "tags": [
          "Ad creatives"
        ]
      }
    },
    "/sb/ads/creatives/video": {
      "post": {
        "description": "This API creates a new version of an existing creative for given Sponsored Brands ad by supplying video creative content\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "CreateVideoCreative",
        "parameters": [
          {
            "description": "Clients request a specific version of a resource using the Accept request-header field set to the value field of the desired content-type.",
            "in": "header",
            "name": "Accept",
            "schema": {
              "$ref": "#/components/schemas/AcceptHeader"
            }
          },
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.\nThis is a required header for advertisers and integrators using the Advertising API.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.\nThis is a required header for advertisers and integrators using the Advertising API.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account.\nUse GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and use profileId from the response to pass as input.\nThis is a required header for advertisers and integrators using the Advertising API.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account.\nUse GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and use profileId from the response to pass as input.\nThis is a required header for advertisers and integrators using the Advertising API.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.sbAdCreativeResource.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateVideoCreativeRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateVideoCreativeResponseContent"
                }
              }
            },
            "description": "CreateVideoCreative 200 response"
          },
          "400": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidArgumentExceptionResponseContent"
                }
              }
            },
            "description": "InvalidArgumentException 400 response"
          },
          "401": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response"
          },
          "403": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response"
          },
          "409": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictStateExceptionResponseContent"
                }
              }
            },
            "description": "ConflictStateException 409 response"
          },
          "429": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response"
          },
          "500": {
            "content": {
              "application/vnd.sbAdCreativeResource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerExceptionResponseContent"
                }
              }
            },
            "description": "InternalServerException 500 response"
          }
        },
        "summary": "Create new version of video ad creative",
        "tags": [
          "Ad creatives"
        ]
      }
    },
    "/sb/budgetRules": {
      "get": {
        "operationId": "GetSBBudgetRulesForAdvertiser",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.",
            "in": "query",
            "name": "nextToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sets a limit on the number of results returned. Maximum limit of `pageSize` is 30.",
            "in": "query",
            "name": "pageSize",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSBBudgetRulesForAdvertiserResponse"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Forbidden. The request failed because user does not have access to a specified resource."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Too Many Requests. The request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved."
          }
        },
        "summary": "Get budget rules",
        "tags": [
          "Budget rules"
        ]
      },
      "post": {
        "description": "\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "CreateBudgetRulesForSBCampaigns",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSBBudgetRulesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "207": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBudgetRulesResponse"
                }
              }
            },
            "description": "Multi-status. An object containing a list of budget rule response objects reflecting the same order as the input."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Forbidden. The request failed because user does not have access to a specified resource."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Too Many Requests. The request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Internal Server BudgetRuleError - Something went wrong on the server. Retry later and report an BudgetRuleError if unresolved."
          }
        },
        "summary": "Create budget rules",
        "tags": [
          "Budget rules"
        ]
      },
      "put": {
        "description": "\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "UpdateBudgetRulesForSBCampaigns",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSBBudgetRulesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "207": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBudgetRulesResponse"
                }
              }
            },
            "description": "Multi-status. An object containing a list of budget rule response objects reflecting the same order as the input."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Forbidden. The request failed because user does not have access to a specified resource."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Too Many Requests. The request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Internal Server BudgetRuleError - Something went wrong on the server. Retry later and report an BudgetRuleError if unresolved."
          }
        },
        "summary": "Update budget rules",
        "tags": [
          "Budget rules"
        ]
      }
    },
    "/sb/budgetRules/{budgetRuleId}": {
      "get": {
        "description": "\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "operationId": "GetBudgetRuleByRuleIdForSBCampaigns",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The budget rule identifier.",
            "in": "path",
            "name": "budgetRuleId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSBBudgetRuleResponse"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Forbidden. The request failed because user does not have access to a specified resource."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Too Many Requests. The request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved."
          }
        },
        "summary": "Get budget rule by ID",
        "tags": [
          "Budget rules"
        ]
      }
    },
    "/sb/budgetRules/{budgetRuleId}/campaigns": {
      "get": {
        "operationId": "GetCampaignsAssociatedWithSBBudgetRule",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The budget rule identifier.",
            "in": "path",
            "name": "budgetRuleId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.",
            "in": "query",
            "name": "nextToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sets a limit on the number of results returned. Maximum limit of `pageSize` is 30.",
            "in": "query",
            "name": "pageSize",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SBGetAssociatedCampaignsResponse"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Forbidden. The request failed because user does not have access to a specified resource."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Too Many Requests. The request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved."
          }
        },
        "summary": "Get campaigns associated with budget rule",
        "tags": [
          "Budget rules"
        ]
      }
    },
    "/sb/campaigns/budget/usage": {
      "post": {
        "description": "\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "operationId": "sbCampaignsBudgetUsage",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {}
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {}
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.sbcampaignbudgetusage.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetUsageCampaignRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "207": {
            "content": {
              "application/vnd.sbcampaignbudgetusage.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetUsageCampaignResponse"
                }
              }
            },
            "description": "Multi-status. An object containing a list of budget usage response objects reflecting the same order as the input."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetUsageError"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetUsageError"
                }
              }
            },
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetUsageError"
                }
              }
            },
            "description": "Forbidden. The request failed because user does not have access to a specified resource."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetUsageError"
                }
              }
            },
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetUsageError"
                }
              }
            },
            "description": "Too Many Requests. The request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetUsageError"
                }
              }
            },
            "description": "Internal Server BudgetUsageError - Something went wrong on the server. Retry later and report an BudgetUsageError if unresolved."
          }
        },
        "summary": "Get budget usage",
        "tags": [
          "Budget usage"
        ]
      }
    },
    "/sb/campaigns/budgetRecommendations": {
      "post": {
        "description": "Provides daily budget recommendations for a list of requested Sponsored Brands campaigns, with context on estimated historical missed opportunities.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "operationId": "GetBudgetRecommendations",
        "parameters": [
          {
            "description": "The identifier of a client associated with a `Login with Amazon` account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a `Login with Amazon` account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": false,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of an account. Account must be a global advertising account.",
            "in": "header",
            "name": "Amazon-Ads-AccountId",
            "required": false,
            "schema": {
              "description": "The identifier of an account. Account must be a global advertising account.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.sbbudgetrecommendation.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/GetBudgetRecommendationsRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "207": {
            "content": {
              "application/vnd.sbbudgetrecommendation.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBudgetRecommendationsResponseContent"
                }
              }
            },
            "description": "GetBudgetRecommendations 207 response"
          },
          "401": {
            "content": {
              "application/vnd.sbbudgetrecommendation.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response"
          },
          "403": {
            "content": {
              "application/vnd.sbbudgetrecommendation.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response"
          },
          "415": {
            "content": {
              "application/vnd.sbbudgetrecommendation.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnsupportedMediaTypeExceptionResponseContent"
                }
              }
            },
            "description": "UnsupportedMediaTypeException 415 response"
          },
          "422": {
            "content": {
              "application/vnd.sbbudgetrecommendation.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidArgumentExceptionResponseContent"
                }
              }
            },
            "description": "InvalidArgumentException 422 response"
          },
          "429": {
            "content": {
              "application/vnd.sbbudgetrecommendation.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response",
            "headers": {
              "Retry-After": {
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                "schema": {
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                  "type": "number"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/vnd.sbbudgetrecommendation.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerExceptionResponseContent"
                }
              }
            },
            "description": "InternalServerException 500 response"
          }
        },
        "summary": "Get budget recommendations",
        "tags": [
          "Recommendations"
        ]
      }
    },
    "/sb/campaigns/insights": {
      "post": {
        "description": "Creates campaign level insights. Insights will be provided for passed in campaign parameters.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "operationId": "SBInsightsCampaignInsights",
        "parameters": [
          {
            "description": "Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the `NextToken` field is empty, there are no further results.",
            "in": "query",
            "name": "nextToken",
            "schema": {
              "description": "Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the `NextToken` field is empty, there are no further results.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.sbinsights.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/SBInsightsCampaignInsightsRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.sbinsights.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBInsightsCampaignInsightsResponseContent"
                }
              }
            },
            "description": "SBInsightsCampaignInsights 200 response"
          },
          "400": {
            "content": {
              "application/vnd.sbinsights.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBInsightsBadRequestExceptionResponseContent"
                }
              }
            },
            "description": "SBInsightsBadRequestException 400 response"
          },
          "401": {
            "content": {
              "application/vnd.sbinsights.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBInsightsUnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "SBInsightsUnauthorizedException 401 response"
          },
          "422": {
            "content": {
              "application/vnd.sbinsights.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBInsightsUnprocessableEntityExceptionResponseContent"
                }
              }
            },
            "description": "SBInsightsUnprocessableEntityException 422 response"
          },
          "429": {
            "content": {
              "application/vnd.sbinsights.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBInsightsThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "SBInsightsThrottlingException 429 response",
            "headers": {
              "Retry-After": {
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                "schema": {
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                  "type": "integer"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/vnd.sbinsights.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBInsightsInternalServerExceptionResponseContent"
                }
              }
            },
            "description": "SBInsightsInternalServerException 500 response"
          }
        },
        "summary": "Get insights for campaigns",
        "tags": [
          "Insights"
        ]
      }
    },
    "/sb/campaigns/{campaignId}/budgetRules": {
      "get": {
        "description": "\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "operationId": "ListAssociatedBudgetRulesForSBCampaigns",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The campaign identifier.",
            "in": "path",
            "name": "campaignId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SBListAssociatedBudgetRulesResponse"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Forbidden. The request failed because user does not have access to a specified resource."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Too Many Requests. The request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved."
          }
        },
        "summary": "Get budget rules associated to campaign",
        "tags": [
          "Budget rules"
        ]
      },
      "post": {
        "description": "A maximum of 250 rules can be associated to a campaign. Note that the name of each rule associated to a campaign is required to be unique.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "CreateAssociatedBudgetRulesForSBCampaigns",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The campaign identifier.",
            "in": "path",
            "name": "campaignId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAssociatedBudgetRulesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "207": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAssociatedBudgetRulesResponse"
                }
              }
            },
            "description": "Multi-status. An object containing a list of associated budget rule response objects reflecting the same order as the input."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Forbidden. The request failed because user does not have access to a specified resource."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Too Many Requests. The request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved."
          }
        },
        "summary": "Associate budget rules to campaign",
        "tags": [
          "Budget rules"
        ]
      }
    },
    "/sb/campaigns/{campaignId}/budgetRules/{budgetRuleId}": {
      "delete": {
        "description": "\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "DisassociateAssociatedBudgetRuleForSBCampaigns",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The campaign identifier.",
            "in": "path",
            "name": "campaignId",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "number"
            }
          },
          {
            "description": "The budget rule identifier.",
            "in": "path",
            "name": "budgetRuleId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisassociateAssociatedBudgetRuleResponse"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Unauthorized - Request failed because user is not authenticated or is not allowed to invoke the operation."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Forbidden. The request failed because user does not have access to a specified resource."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Too Many Requests. The request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            },
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved."
          }
        },
        "summary": "Disassociate budget rule from campaign",
        "tags": [
          "Budget rules"
        ]
      }
    },
    "/sb/forecasts": {
      "post": {
        "description": "Returns forecasts for a list of new campaigns specified in SB forecast request. Currently only one new campaign is supported. \n\n**If the campaign is not set to any goal during campaign creation then use PAGE_VISIT as goal value.**",
        "operationId": "SBCampaignPerformanceForecasts",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.sbforecasting.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/SBCampaignPerformanceForecastsRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "207": {
            "content": {
              "application/vnd.sbforecasting.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBCampaignPerformanceForecastsResponseContent"
                }
              }
            },
            "description": "SBCampaignPerformanceForecasts 207 response"
          },
          "400": {
            "content": {
              "application/vnd.sbforecasting.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBForecastingBadRequestExceptionResponseContent"
                }
              }
            },
            "description": "SBForecastingBadRequestException 400 response"
          },
          "401": {
            "content": {
              "application/vnd.sbforecasting.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBForecastingUnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "SBForecastingUnauthorizedException 401 response"
          },
          "403": {
            "content": {
              "application/vnd.sbforecasting.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBForecastingAccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "SBForecastingAccessDeniedException 403 response"
          },
          "422": {
            "content": {
              "application/vnd.sbforecasting.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBForecastingUnprocessableEntityExceptionResponseContent"
                }
              }
            },
            "description": "SBForecastingUnprocessableEntityException 422 response"
          },
          "429": {
            "content": {
              "application/vnd.sbforecasting.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBForecastingThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "SBForecastingThrottlingException 429 response",
            "headers": {
              "Retry-After": {
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                "schema": {
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                  "type": "integer"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/vnd.sbforecasting.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBForecastingInternalServerExceptionResponseContent"
                }
              }
            },
            "description": "SBForecastingInternalServerException 500 response"
          }
        },
        "summary": "Get performance forecasts for campaigns",
        "tags": [
          "Forecasts"
        ]
      }
    },
    "/sb/negativeTargets/brands/recommendations": {
      "get": {
        "description": "Returns brands recommended for negative targeting. Only available for Sellers and Vendors. These recommendations include your own brands because targeting your own brands usually results in lower performance than targeting competitors' brands. \n\nOnly available in the following marketplaces: US, CA, MX, UK, DE, FR, ES, IT, IN, JP\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "operationId": "SBTargetingGetNegativeBrands",
        "parameters": [
          {
            "description": "Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the `NextToken` field is empty, there are no further results.",
            "in": "query",
            "name": "nextToken",
            "schema": {
              "description": "Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the `NextToken` field is empty, there are no further results.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a client associated with a `Login with Amazon` account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a `Login with Amazon` account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.sbtargeting.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBTargetingGetNegativeBrandsResponseContent"
                }
              }
            },
            "description": "SBTargetingGetNegativeBrands 200 response"
          },
          "400": {
            "content": {
              "application/vnd.sbtargeting.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBTargetingBadRequestExceptionResponseContent"
                }
              }
            },
            "description": "SBTargetingBadRequestException 400 response"
          },
          "401": {
            "content": {
              "application/vnd.sbtargeting.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBTargetingUnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "SBTargetingUnauthorizedException 401 response"
          },
          "403": {
            "content": {
              "application/vnd.sbtargeting.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBTargetingAccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "SBTargetingAccessDeniedException 403 response"
          },
          "429": {
            "content": {
              "application/vnd.sbtargeting.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBTargetingThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "SBTargetingThrottlingException 429 response",
            "headers": {
              "Retry-After": {
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                "schema": {
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                  "type": "integer"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/vnd.sbtargeting.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBTargetingInternalServerExceptionResponseContent"
                }
              }
            },
            "description": "SBTargetingInternalServerException 500 response"
          }
        },
        "summary": "Get brand recommendations for negative targeting",
        "tags": [
          "Recommendations"
        ]
      }
    },
    "/sb/recommendations/creative/headline": {
      "post": {
        "description": "API to receive creative headline suggestions.",
        "operationId": "getHeadlineRecommendations",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HeadlineSuggestionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HeadlineSuggestionResponse"
                }
              }
            },
            "description": "Successful"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModerationError"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModerationError"
                }
              }
            },
            "description": "Unauthorized - Request failed because user is not authenticated or is not allowed to invoke the operation.\n"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModerationError"
                }
              }
            },
            "description": "Unprocessable entity - Failed due to invalid parameters."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModerationError"
                }
              }
            },
            "description": "Too Many Requests - Request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModerationError"
                }
              }
            },
            "description": "Internal Server Error - Something went wrong on the server. Retry\nlater and report an error if unresolved."
          }
        },
        "summary": "Get recommendations for creative headline",
        "tags": [
          "Recommendations"
        ]
      }
    },
    "/sb/recommendations/optimization": {
      "post": {
        "description": "Returns recommended bid value for optimization rule enable campaigns. Recommendations are generated based landing page, page type and ASINs provided in request. Only available for Sellers and Vendors.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]\"",
        "operationId": "SBOptimizationRecommendation",
        "parameters": [
          {
            "description": "The identifier of a client associated with a `Login with Amazon` account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a `Login with Amazon` account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.sboptimizationrecommendationresource.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/SBOptimizationRecommendationRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "207": {
            "content": {
              "application/vnd.sboptimizationrecommendationresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBOptimizationRecommendationResponseContent"
                }
              }
            },
            "description": "SBOptimizationRecommendation 207 response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidArgumentExceptionResponseContent"
                }
              }
            },
            "description": "InvalidArgumentException 400 response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response"
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnsupportedMediaTypeExceptionResponseContent"
                }
              }
            },
            "description": "UnsupportedMediaTypeException 415 response"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response",
            "headers": {
              "Retry-After": {
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                "schema": {
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                  "type": "integer"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerExceptionResponseContent"
                }
              }
            },
            "description": "InternalServerException 500 response"
          }
        },
        "summary": "Get recommendation for optimization rule",
        "tags": [
          "Recommendations"
        ]
      }
    },
    "/sb/rules/optimization": {
      "post": {
        "description": "Currently available in beta. \n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "operationId": "CreateSponsoredBrandsOptimizationRules",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.sbruleoptimization.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSponsoredBrandsOptimizationRulesRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "207": {
            "content": {
              "application/vnd.sbruleoptimization.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSponsoredBrandsOptimizationRulesResponseContent"
                }
              }
            },
            "description": "CreateSponsoredBrandsOptimizationRules 207 response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidArgumentExceptionResponseContent"
                }
              }
            },
            "description": "InvalidArgumentException 400 response."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response."
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnsupportedMediaTypeExceptionResponseContent"
                }
              }
            },
            "description": "UnsupportedMediaTypeException 415 response."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response.",
            "headers": {
              "Retry-After": {
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                "schema": {
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                  "type": "number"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerExceptionResponseContent"
                }
              }
            },
            "description": "InternalServerException 500 response."
          }
        },
        "summary": "Create optimization rules",
        "tags": [
          "Optimization rules"
        ]
      },
      "put": {
        "description": "Currently available in beta. \n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "operationId": "UpdateSponsoredBrandsOptimizationRules",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.sbruleoptimization.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSponsoredBrandsOptimizationRulesRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "207": {
            "content": {
              "application/vnd.sbruleoptimization.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSponsoredBrandsOptimizationRulesResponseContent"
                }
              }
            },
            "description": "UpdateSponsoredBrandsOptimizationRules 207 response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidArgumentExceptionResponseContent"
                }
              }
            },
            "description": "InvalidArgumentException 400 response."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response."
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnsupportedMediaTypeExceptionResponseContent"
                }
              }
            },
            "description": "UnsupportedMediaTypeException 415 response."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response.",
            "headers": {
              "Retry-After": {
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                "schema": {
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                  "type": "number"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerExceptionResponseContent"
                }
              }
            },
            "description": "InternalServerException 500 response."
          }
        },
        "summary": "Update optimization rules",
        "tags": [
          "Optimization rules"
        ]
      }
    },
    "/sb/rules/optimization/associate": {
      "post": {
        "description": "Currently available in beta. Associate one or more optimization rules by providing combinations of entityId-ruleId that require association.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "operationId": "AssociateSponsoredBrandsOptimizationRules",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.sbruleoptimization.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/AssociateSponsoredBrandsOptimizationRulesRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "207": {
            "content": {
              "application/vnd.sbruleoptimization.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/AssociateSponsoredBrandsOptimizationRulesResponseContent"
                }
              }
            },
            "description": "AssociateSponsoredBrandsOptimizationRules 207 response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidArgumentExceptionResponseContent"
                }
              }
            },
            "description": "InvalidArgumentException 400 response."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response."
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnsupportedMediaTypeExceptionResponseContent"
                }
              }
            },
            "description": "UnsupportedMediaTypeException 415 response."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response.",
            "headers": {
              "Retry-After": {
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                "schema": {
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                  "type": "number"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerExceptionResponseContent"
                }
              }
            },
            "description": "InternalServerException 500 response."
          }
        },
        "summary": "Associate optimization rules",
        "tags": [
          "Optimization rules"
        ]
      }
    },
    "/sb/rules/optimization/disassociate": {
      "post": {
        "description": "Currently available in beta. Disassociate one or more optimization rules by providing combinations of entityId-ruleId that require disassociation\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "operationId": "DisassociateSponsoredBrandsOptimizationRules",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.sbruleoptimization.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/DisassociateSponsoredBrandsOptimizationRulesRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "207": {
            "content": {
              "application/vnd.sbruleoptimization.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/DisassociateSponsoredBrandsOptimizationRulesResponseContent"
                }
              }
            },
            "description": "DisassociateSponsoredBrandsOptimizationRules 207 response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidArgumentExceptionResponseContent"
                }
              }
            },
            "description": "InvalidArgumentException 400 response."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response."
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnsupportedMediaTypeExceptionResponseContent"
                }
              }
            },
            "description": "UnsupportedMediaTypeException 415 response."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response.",
            "headers": {
              "Retry-After": {
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                "schema": {
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                  "type": "number"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerExceptionResponseContent"
                }
              }
            },
            "description": "InternalServerException 500 response."
          }
        },
        "summary": "Disassociate optimization rules",
        "tags": [
          "Optimization rules"
        ]
      }
    },
    "/sb/rules/optimization/list": {
      "post": {
        "description": "Currently available in beta. \n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "operationId": "ListSponsoredBrandsOptimizationRules",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.sbruleoptimization.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/ListSponsoredBrandsOptimizationRulesRequestContent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.sbruleoptimization.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSponsoredBrandsOptimizationRulesResponseContent"
                }
              }
            },
            "description": "ListSponsoredBrandsOptimizationRules 200 response."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidArgumentExceptionResponseContent"
                }
              }
            },
            "description": "InvalidArgumentException 400 response."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response."
          },
          "415": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnsupportedMediaTypeExceptionResponseContent"
                }
              }
            },
            "description": "UnsupportedMediaTypeException 415 response."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response.",
            "headers": {
              "Retry-After": {
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                "schema": {
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                  "type": "number"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerExceptionResponseContent"
                }
              }
            },
            "description": "InternalServerException 500 response."
          }
        },
        "summary": "List optimization rules",
        "tags": [
          "Optimization rules"
        ]
      }
    },
    "/sb/targets/categories": {
      "get": {
        "description": "Returns all targetable categories by default in a list. List of categories can be used to build and traverse category tree.\nSet query parameter `includeOnlyRootCategories=true` to return only the root categories, or set `parentCategoryRefinementId` to return children of a specific parent category.\nEach category node has the fields - category name, category refinement id, parent category refinement id, isTargetable flag, and ASIN count range. \n\nOnly available in the following marketplaces: US, CA, MX, UK, DE, FR, ES, IT, IN, JP\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "operationId": "SBTargetingGetTargetableCategories",
        "parameters": [
          {
            "description": "The locale to which the caller wishes to translate the targetable categories or refinements to. For example, if the caller wishes to receive the targetable categories in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the returned tagetable categories will be in the default language of the marketplace.",
            "in": "query",
            "name": "locale",
            "schema": {
              "$ref": "#/components/schemas/SBTargetingLocale"
            }
          },
          {
            "description": "[UPDATE: As of 05/28/2024, `STREAMING_VIDEO` is deprecated]. \n The supply source where the target will be used. Use `AMAZON` for placements on Amazon website. Use `STREAMING_VIDEO` for off-site video placements such as IMDb TV.",
            "in": "query",
            "name": "supplySource",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SBTargetingSupplySource"
            }
          },
          {
            "description": "Indicates whether to only retun root categories or not.",
            "in": "query",
            "name": "includeOnlyRootCategories",
            "schema": {
              "description": "Indicates whether to only retun root categories or not.",
              "type": "boolean"
            }
          },
          {
            "description": "Returns child categories of category.",
            "in": "query",
            "name": "parentCategoryRefinementId",
            "schema": {
              "description": "Returns child categories of category.",
              "type": "string"
            }
          },
          {
            "description": "Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the `NextToken` field is empty, there are no further results.",
            "in": "query",
            "name": "nextToken",
            "schema": {
              "description": "Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the `NextToken` field is empty, there are no further results.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a client associated with a `Login with Amazon` account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a `Login with Amazon` account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.sbtargeting.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBTargetingGetTargetableCategoriesResponseContent"
                }
              }
            },
            "description": "SBTargetingGetTargetableCategories 200 response"
          },
          "400": {
            "content": {
              "application/vnd.sbtargeting.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBTargetingBadRequestExceptionResponseContent"
                }
              }
            },
            "description": "SBTargetingBadRequestException 400 response"
          },
          "401": {
            "content": {
              "application/vnd.sbtargeting.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBTargetingUnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "SBTargetingUnauthorizedException 401 response"
          },
          "429": {
            "content": {
              "application/vnd.sbtargeting.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBTargetingThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "SBTargetingThrottlingException 429 response",
            "headers": {
              "Retry-After": {
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                "schema": {
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                  "type": "integer"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/vnd.sbtargeting.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBTargetingInternalServerExceptionResponseContent"
                }
              }
            },
            "description": "SBTargetingInternalServerException 500 response"
          }
        },
        "summary": "Get targetable categories",
        "tags": [
          "Product targeting categories"
        ]
      }
    },
    "/sb/targets/categories/{categoryRefinementId}/refinements": {
      "get": {
        "description": "Returns refinements according to category input. \n\nOnly available in the following marketplaces: US, CA, MX, UK, DE, FR, ES, IT, IN, JP\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "operationId": "SBTargetingGetRefinementsForCategory",
        "parameters": [
          {
            "description": "The category refinement id. Please use /sb/targets/categories or /sb/recommendations/targets/category to retrieve category IDs.",
            "in": "path",
            "name": "categoryRefinementId",
            "required": true,
            "schema": {
              "description": "The category refinement id. Please use /sb/targets/categories or /sb/recommendations/targets/category to retrieve category IDs.",
              "type": "string"
            }
          },
          {
            "description": "The locale to which the caller wishes to translate the targetable categories or refinements to. For example, if the caller wishes to receive the targetable categories in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the returned tagetable categories will be in the default language of the marketplace.",
            "in": "query",
            "name": "locale",
            "schema": {
              "$ref": "#/components/schemas/SBTargetingLocale"
            }
          },
          {
            "description": "Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the `NextToken` field is empty, there are no further results.",
            "in": "query",
            "name": "nextToken",
            "schema": {
              "description": "Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the `NextToken` field is empty, there are no further results.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a client associated with a `Login with Amazon` account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a `Login with Amazon` account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.sbtargeting.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBTargetingGetRefinementsForCategoryResponseContent"
                }
              }
            },
            "description": "SBTargetingGetRefinementsForCategory 200 response"
          },
          "400": {
            "content": {
              "application/vnd.sbtargeting.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBTargetingBadRequestExceptionResponseContent"
                }
              }
            },
            "description": "SBTargetingBadRequestException 400 response"
          },
          "401": {
            "content": {
              "application/vnd.sbtargeting.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBTargetingUnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "SBTargetingUnauthorizedException 401 response"
          },
          "429": {
            "content": {
              "application/vnd.sbtargeting.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBTargetingThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "SBTargetingThrottlingException 429 response",
            "headers": {
              "Retry-After": {
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                "schema": {
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                  "type": "integer"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/vnd.sbtargeting.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBTargetingInternalServerExceptionResponseContent"
                }
              }
            },
            "description": "SBTargetingInternalServerException 500 response"
          }
        },
        "summary": "Get refinements for category",
        "tags": [
          "Product targeting categories"
        ]
      }
    },
    "/sb/targets/products/count": {
      "post": {
        "description": "Get number of targetable asins based on refinements provided by the user.\n\nUse `/sb/targets/categories` or `/sb/recommendations/targets/category` to retrieve the category ID. Use `/sb/targets/categories/{categoryRefinementId}/refinements` to retrieve refinements data for a category.\n\nOnly available in the following marketplaces: US, CA, MX, UK, DE, FR, ES, IT, IN, JP\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "operationId": "SBTargetingGetTargetableASINCounts",
        "parameters": [
          {
            "description": "The identifier of a client associated with a `Login with Amazon` account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a `Login with Amazon` account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.sbtargeting.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/SBTargetingGetTargetableASINCountsRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.sbtargeting.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBTargetingGetTargetableASINCountsResponseContent"
                }
              }
            },
            "description": "SBTargetingGetTargetableASINCounts 200 response"
          },
          "400": {
            "content": {
              "application/vnd.sbtargeting.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBTargetingBadRequestExceptionResponseContent"
                }
              }
            },
            "description": "SBTargetingBadRequestException 400 response"
          },
          "401": {
            "content": {
              "application/vnd.sbtargeting.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBTargetingUnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "SBTargetingUnauthorizedException 401 response"
          },
          "422": {
            "content": {
              "application/vnd.sbtargeting.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBTargetingUnprocessableEntityExceptionResponseContent"
                }
              }
            },
            "description": "SBTargetingUnprocessableEntityException 422 response"
          },
          "429": {
            "content": {
              "application/vnd.sbtargeting.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBTargetingThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "SBTargetingThrottlingException 429 response",
            "headers": {
              "Retry-After": {
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                "schema": {
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                  "type": "integer"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/vnd.sbtargeting.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SBTargetingInternalServerExceptionResponseContent"
                }
              }
            },
            "description": "SBTargetingInternalServerException 500 response"
          }
        },
        "summary": "Get number of products in a category",
        "tags": [
          "Product targeting categories"
        ]
      }
    },
    "/sb/v4/adGroups": {
      "post": {
        "description": "Creates Sponsored Brands ad groups.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "CreateSponsoredBrandsAdGroups",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.sbadgroupresource.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSponsoredBrandsAdGroupsRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "207": {
            "content": {
              "application/vnd.sbadgroupresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSponsoredBrandsAdGroupsResponseContent"
                }
              }
            },
            "description": "CreateSponsoredBrandsAdGroups 207 response."
          },
          "400": {
            "content": {
              "application/vnd.sbadgroupresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidArgumentExceptionResponseContent"
                }
              }
            },
            "description": "InvalidArgumentException 400 response."
          },
          "401": {
            "content": {
              "application/vnd.sbadgroupresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response."
          },
          "403": {
            "content": {
              "application/vnd.sbadgroupresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response."
          },
          "429": {
            "content": {
              "application/vnd.sbadgroupresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response.",
            "headers": {
              "Retry-After": {
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                "schema": {
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                  "type": "number"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/vnd.sbadgroupresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerExceptionResponseContent"
                }
              }
            },
            "description": "InternalServerException 500 response."
          }
        },
        "summary": "Create ad groups",
        "tags": [
          "Ad groups"
        ]
      },
      "put": {
        "description": "Updates Sponsored Brands ad groups.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "UpdateSponsoredBrandsAdGroups",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.sbadgroupresource.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSponsoredBrandsAdGroupsRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "207": {
            "content": {
              "application/vnd.sbadgroupresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSponsoredBrandsAdGroupsResponseContent"
                }
              }
            },
            "description": "UpdateSponsoredBrandsAdGroups 207 response."
          },
          "400": {
            "content": {
              "application/vnd.sbadgroupresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidArgumentExceptionResponseContent"
                }
              }
            },
            "description": "InvalidArgumentException 400 response."
          },
          "401": {
            "content": {
              "application/vnd.sbadgroupresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response."
          },
          "403": {
            "content": {
              "application/vnd.sbadgroupresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response."
          },
          "429": {
            "content": {
              "application/vnd.sbadgroupresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response.",
            "headers": {
              "Retry-After": {
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                "schema": {
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                  "type": "number"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/vnd.sbadgroupresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerExceptionResponseContent"
                }
              }
            },
            "description": "InternalServerException 500 response."
          }
        },
        "summary": "Update ad groups",
        "tags": [
          "Ad groups"
        ]
      }
    },
    "/sb/v4/adGroups/delete": {
      "post": {
        "description": "Deletes Sponsored Brands ad groups.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "DeleteSponsoredBrandsAdGroups",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.sbadgroupresource.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteSponsoredBrandsAdGroupsRequestContent"
              }
            }
          }
        },
        "responses": {
          "207": {
            "content": {
              "application/vnd.sbadgroupresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSponsoredBrandsAdGroupsResponseContent"
                }
              }
            },
            "description": "DeleteSponsoredBrandsAdGroups 207 response."
          },
          "400": {
            "content": {
              "application/vnd.sbadgroupresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidArgumentExceptionResponseContent"
                }
              }
            },
            "description": "InvalidArgumentException 400 response."
          },
          "401": {
            "content": {
              "application/vnd.sbadgroupresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response."
          },
          "403": {
            "content": {
              "application/vnd.sbadgroupresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response."
          },
          "429": {
            "content": {
              "application/vnd.sbadgroupresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response.",
            "headers": {
              "Retry-After": {
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                "schema": {
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                  "type": "number"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/vnd.sbadgroupresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerExceptionResponseContent"
                }
              }
            },
            "description": "InternalServerException 500 response."
          }
        },
        "summary": "Delete ad groups",
        "tags": [
          "Ad groups"
        ]
      }
    },
    "/sb/v4/adGroups/list": {
      "post": {
        "description": "Lists Sponsored Brands ad groups.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "operationId": "ListSponsoredBrandsAdGroups",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.sbadgroupresource.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/ListSponsoredBrandsAdGroupsRequestContent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.sbadgroupresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSponsoredBrandsAdGroupsResponseContent"
                }
              }
            },
            "description": "ListSponsoredBrandsAdGroups 200 response."
          },
          "400": {
            "content": {
              "application/vnd.sbadgroupresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidArgumentExceptionResponseContent"
                }
              }
            },
            "description": "InvalidArgumentException 400 response."
          },
          "401": {
            "content": {
              "application/vnd.sbadgroupresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response."
          },
          "403": {
            "content": {
              "application/vnd.sbadgroupresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response."
          },
          "429": {
            "content": {
              "application/vnd.sbadgroupresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response.",
            "headers": {
              "Retry-After": {
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                "schema": {
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                  "type": "number"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/vnd.sbadgroupresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerExceptionResponseContent"
                }
              }
            },
            "description": "InternalServerException 500 response."
          }
        },
        "summary": "List ad groups",
        "tags": [
          "Ad groups"
        ]
      }
    },
    "/sb/v4/ads": {
      "put": {
        "description": "Updates Sponsored Brands ads.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "UpdateSponsoredBrandsAds",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.sbadresource.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSponsoredBrandsAdsRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "207": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSponsoredBrandsAdsResponseContent"
                }
              }
            },
            "description": "UpdateSponsoredBrandsAds 207 response."
          },
          "400": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidArgumentExceptionResponseContent"
                }
              }
            },
            "description": "InvalidArgumentException 400 response."
          },
          "401": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response."
          },
          "403": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response."
          },
          "429": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response.",
            "headers": {
              "Retry-After": {
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                "schema": {
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                  "type": "number"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerExceptionResponseContent"
                }
              }
            },
            "description": "InternalServerException 500 response."
          }
        },
        "summary": "Update ads",
        "tags": [
          "Ads"
        ]
      }
    },
    "/sb/v4/ads/brandVideo": {
      "post": {
        "description": "Creates Sponsored Brands brand video ads.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "CreateSponsoredBrandsBrandVideoAds",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.sbadresource.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSponsoredBrandsBrandVideoAdsRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "207": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSponsoredBrandsBrandVideoAdsResponseContent"
                }
              }
            },
            "description": "CreateSponsoredBrandsBrandVideoAds 207 response."
          },
          "400": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidArgumentExceptionResponseContent"
                }
              }
            },
            "description": "InvalidArgumentException 400 response."
          },
          "401": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response."
          },
          "403": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response."
          },
          "429": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response.",
            "headers": {
              "Retry-After": {
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                "schema": {
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                  "type": "number"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerExceptionResponseContent"
                }
              }
            },
            "description": "InternalServerException 500 response."
          }
        },
        "summary": "Create brand video ads",
        "tags": [
          "Ads"
        ]
      }
    },
    "/sb/v4/ads/delete": {
      "post": {
        "description": "Deletes Sponsored Brands ads.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "DeleteSponsoredBrandsAds",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.sbadresource.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteSponsoredBrandsAdsRequestContent"
              }
            }
          }
        },
        "responses": {
          "207": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSponsoredBrandsAdsResponseContent"
                }
              }
            },
            "description": "DeleteSponsoredBrandsAds 207 response."
          },
          "400": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidArgumentExceptionResponseContent"
                }
              }
            },
            "description": "InvalidArgumentException 400 response."
          },
          "401": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response."
          },
          "403": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response."
          },
          "429": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response.",
            "headers": {
              "Retry-After": {
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                "schema": {
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                  "type": "number"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerExceptionResponseContent"
                }
              }
            },
            "description": "InternalServerException 500 response."
          }
        },
        "summary": "Delete ads",
        "tags": [
          "Ads"
        ]
      }
    },
    "/sb/v4/ads/list": {
      "post": {
        "description": "Lists Sponsored Brands ads.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "operationId": "ListSponsoredBrandsAds",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.sbadresource.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/ListSponsoredBrandsAdsRequestContent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSponsoredBrandsAdsResponseContent"
                }
              }
            },
            "description": "ListSponsoredBrandsAds 200 response."
          },
          "400": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidArgumentExceptionResponseContent"
                }
              }
            },
            "description": "InvalidArgumentException 400 response."
          },
          "401": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response."
          },
          "403": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response."
          },
          "429": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response.",
            "headers": {
              "Retry-After": {
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                "schema": {
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                  "type": "number"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerExceptionResponseContent"
                }
              }
            },
            "description": "InternalServerException 500 response."
          }
        },
        "summary": "List ads",
        "tags": [
          "Ads"
        ]
      }
    },
    "/sb/v4/ads/productCollection": {
      "post": {
        "description": "Creates Sponsored Brands product collection ads.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "CreateSponsoredBrandsProductCollectionAds",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.sbadresource.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSponsoredBrandsProductCollectionAdsRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "207": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSponsoredBrandsProductCollectionAdsResponseContent"
                }
              }
            },
            "description": "CreateSponsoredBrandsProductCollectionAds 207 response."
          },
          "400": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidArgumentExceptionResponseContent"
                }
              }
            },
            "description": "InvalidArgumentException 400 response."
          },
          "401": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response."
          },
          "403": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response."
          },
          "429": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response.",
            "headers": {
              "Retry-After": {
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                "schema": {
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                  "type": "number"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerExceptionResponseContent"
                }
              }
            },
            "description": "InternalServerException 500 response."
          }
        },
        "summary": "Create product collection ads",
        "tags": [
          "Ads"
        ]
      }
    },
    "/sb/v4/ads/productCollectionExtended": {
      "post": {
        "description": "Creates Sponsored Brands product collection ads with collection of custom images[1-5].\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "CreateSponsoredBrandsExtendedProductCollectionAds",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.sbadresource.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSponsoredBrandsExtendedProductCollectionAdsRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "207": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSponsoredBrandsExtendedProductCollectionAdsResponseContent"
                }
              }
            },
            "description": "CreateSponsoredBrandsExtendedProductCollectionAds 207 response."
          },
          "400": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidArgumentExceptionResponseContent"
                }
              }
            },
            "description": "InvalidArgumentException 400 response."
          },
          "401": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response."
          },
          "403": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response."
          },
          "429": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response.",
            "headers": {
              "Retry-After": {
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                "schema": {
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                  "type": "number"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerExceptionResponseContent"
                }
              }
            },
            "description": "InternalServerException 500 response."
          }
        },
        "summary": "Creates Sponsored Brands new product collection ads with collection of custom images",
        "tags": [
          "Ads"
        ]
      }
    },
    "/sb/v4/ads/storeSpotlight": {
      "post": {
        "description": "Creates Sponsored Brands store spotlight ads.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "CreateSponsoredBrandStoreSpotlightAds",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.sbadresource.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSponsoredBrandStoreSpotlightAdsRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "207": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSponsoredBrandStoreSpotlightAdsResponseContent"
                }
              }
            },
            "description": "CreateSponsoredBrandStoreSpotlightAds 207 response."
          },
          "400": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidArgumentExceptionResponseContent"
                }
              }
            },
            "description": "InvalidArgumentException 400 response."
          },
          "401": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response."
          },
          "403": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response."
          },
          "429": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response.",
            "headers": {
              "Retry-After": {
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                "schema": {
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                  "type": "number"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerExceptionResponseContent"
                }
              }
            },
            "description": "InternalServerException 500 response."
          }
        },
        "summary": "Create store spotlight ads",
        "tags": [
          "Ads"
        ]
      }
    },
    "/sb/v4/ads/video": {
      "post": {
        "description": "Creates Sponsored Brands video ads.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "CreateSponsoredBrandsVideoAds",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.sbadresource.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSponsoredBrandsVideoAdsRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "207": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSponsoredBrandsVideoAdsResponseContent"
                }
              }
            },
            "description": "CreateSponsoredBrandsVideoAds 207 response."
          },
          "400": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidArgumentExceptionResponseContent"
                }
              }
            },
            "description": "InvalidArgumentException 400 response."
          },
          "401": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response."
          },
          "403": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response."
          },
          "429": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response.",
            "headers": {
              "Retry-After": {
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                "schema": {
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                  "type": "number"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/vnd.sbadresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerExceptionResponseContent"
                }
              }
            },
            "description": "InternalServerException 500 response."
          }
        },
        "summary": "Create video ads",
        "tags": [
          "Ads"
        ]
      }
    },
    "/sb/v4/campaigns": {
      "post": {
        "description": "Creates Sponsored Brands campaigns.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "CreateSponsoredBrandsCampaigns",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.sbcampaignresource.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSponsoredBrandsCampaignsRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "207": {
            "content": {
              "application/vnd.sbcampaignresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSponsoredBrandsCampaignsResponseContent"
                }
              }
            },
            "description": "CreateSponsoredBrandsCampaigns 207 response."
          },
          "400": {
            "content": {
              "application/vnd.sbcampaignresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidArgumentExceptionResponseContent"
                }
              }
            },
            "description": "InvalidArgumentException 400 response."
          },
          "401": {
            "content": {
              "application/vnd.sbcampaignresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response."
          },
          "403": {
            "content": {
              "application/vnd.sbcampaignresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response."
          },
          "429": {
            "content": {
              "application/vnd.sbcampaignresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response.",
            "headers": {
              "Retry-After": {
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                "schema": {
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                  "type": "number"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/vnd.sbcampaignresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerExceptionResponseContent"
                }
              }
            },
            "description": "InternalServerException 500 response."
          }
        },
        "summary": "Create campaigns",
        "tags": [
          "Campaigns"
        ]
      },
      "put": {
        "description": "Updates Sponsored Brands campaigns.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "UpdateSponsoredBrandsCampaigns",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.sbcampaignresource.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSponsoredBrandsCampaignsRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "207": {
            "content": {
              "application/vnd.sbcampaignresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSponsoredBrandsCampaignsResponseContent"
                }
              }
            },
            "description": "UpdateSponsoredBrandsCampaigns 207 response."
          },
          "400": {
            "content": {
              "application/vnd.sbcampaignresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidArgumentExceptionResponseContent"
                }
              }
            },
            "description": "InvalidArgumentException 400 response."
          },
          "401": {
            "content": {
              "application/vnd.sbcampaignresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response."
          },
          "403": {
            "content": {
              "application/vnd.sbcampaignresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response."
          },
          "429": {
            "content": {
              "application/vnd.sbcampaignresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response.",
            "headers": {
              "Retry-After": {
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                "schema": {
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                  "type": "number"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/vnd.sbcampaignresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerExceptionResponseContent"
                }
              }
            },
            "description": "InternalServerException 500 response."
          }
        },
        "summary": "Update campaigns",
        "tags": [
          "Campaigns"
        ]
      }
    },
    "/sb/v4/campaigns/delete": {
      "post": {
        "description": "Deletes Sponsored Brands campaigns.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "DeleteSponsoredBrandsCampaigns",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.sbcampaignresource.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteSponsoredBrandsCampaignsRequestContent"
              }
            }
          }
        },
        "responses": {
          "207": {
            "content": {
              "application/vnd.sbcampaignresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSponsoredBrandsCampaignsResponseContent"
                }
              }
            },
            "description": "DeleteSponsoredBrandsCampaigns 207 response."
          },
          "400": {
            "content": {
              "application/vnd.sbcampaignresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidArgumentExceptionResponseContent"
                }
              }
            },
            "description": "InvalidArgumentException 400 response."
          },
          "401": {
            "content": {
              "application/vnd.sbcampaignresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response."
          },
          "403": {
            "content": {
              "application/vnd.sbcampaignresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response."
          },
          "429": {
            "content": {
              "application/vnd.sbcampaignresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response.",
            "headers": {
              "Retry-After": {
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                "schema": {
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                  "type": "number"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/vnd.sbcampaignresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerExceptionResponseContent"
                }
              }
            },
            "description": "InternalServerException 500 response."
          }
        },
        "summary": "Delete campaigns.",
        "tags": [
          "Campaigns"
        ]
      }
    },
    "/sb/v4/campaigns/list": {
      "post": {
        "description": "Lists Sponsored Brands campaigns.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "operationId": "ListSponsoredBrandsCampaigns",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.sbcampaignresource.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/ListSponsoredBrandsCampaignsRequestContent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.sbcampaignresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSponsoredBrandsCampaignsResponseContent"
                }
              }
            },
            "description": "ListSponsoredBrandsCampaigns 200 response."
          },
          "400": {
            "content": {
              "application/vnd.sbcampaignresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidArgumentExceptionResponseContent"
                }
              }
            },
            "description": "InvalidArgumentException 400 response."
          },
          "401": {
            "content": {
              "application/vnd.sbcampaignresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response."
          },
          "403": {
            "content": {
              "application/vnd.sbcampaignresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response."
          },
          "429": {
            "content": {
              "application/vnd.sbcampaignresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response.",
            "headers": {
              "Retry-After": {
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                "schema": {
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                  "type": "number"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/vnd.sbcampaignresource.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerExceptionResponseContent"
                }
              }
            },
            "description": "InternalServerException 500 response."
          }
        },
        "summary": "List campaigns",
        "tags": [
          "Campaigns"
        ]
      }
    },
    "/sb/v4/legacyCampaigns/migrationJob": {
      "post": {
        "description": "Creates Migration Job for V3 campaigns.",
        "operationId": "StartMigrationJob",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.SponsoredBrands.SponsoredBrandsMigrationApi.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/StartMigrationJobRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.SponsoredBrands.SponsoredBrandsMigrationApi.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/StartMigrationJobResponseContent"
                }
              }
            },
            "description": "StartMigrationJob 200 response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidArgumentExceptionResponseContent"
                }
              }
            },
            "description": "InvalidArgumentException 400 response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response",
            "headers": {
              "Retry-After": {
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                "schema": {
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                  "type": "number"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerExceptionResponseContent"
                }
              }
            },
            "description": "InternalServerException 500 response"
          }
        },
        "summary": "Creates Migration Job for V3 campaigns.",
        "tags": [
          "V3 Campaign Migration"
        ]
      }
    },
    "/sb/v4/legacyCampaigns/migrationJob/results": {
      "post": {
        "description": "List Migration Results of all Campaign.",
        "operationId": "MigrationJobResults",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.SponsoredBrands.SponsoredBrandsMigrationApi.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/MigrationJobResultsRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.SponsoredBrands.SponsoredBrandsMigrationApi.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/MigrationJobResultsResponseContent"
                }
              }
            },
            "description": "MigrationJobResults 200 response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidArgumentExceptionResponseContent"
                }
              }
            },
            "description": "InvalidArgumentException 400 response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response",
            "headers": {
              "Retry-After": {
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                "schema": {
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                  "type": "number"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerExceptionResponseContent"
                }
              }
            },
            "description": "InternalServerException 500 response"
          }
        },
        "summary": "List Migration Results of all Campaign.",
        "tags": [
          "V3 Campaign Migration"
        ]
      }
    },
    "/sb/v4/legacyCampaigns/migrationJob/status": {
      "post": {
        "description": "List Migration Job Status.",
        "operationId": "MigrationJobStatus",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.SponsoredBrands.SponsoredBrandsMigrationApi.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/MigrationJobStatusRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.SponsoredBrands.SponsoredBrandsMigrationApi.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/MigrationJobStatusResponseContent"
                }
              }
            },
            "description": "MigrationJobStatus 200 response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidArgumentExceptionResponseContent"
                }
              }
            },
            "description": "InvalidArgumentException 400 response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response",
            "headers": {
              "Retry-After": {
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                "schema": {
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                  "type": "number"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerExceptionResponseContent"
                }
              }
            },
            "description": "InternalServerException 500 response"
          }
        },
        "summary": "List Migration Job Status.",
        "tags": [
          "V3 Campaign Migration"
        ]
      }
    },
    "/sb/v4/legacyCampaigns/overallMigrationResults": {
      "post": {
        "description": "Lists all Campaign Migration results for an advertiser",
        "operationId": "MigrationResults",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.SponsoredBrands.SponsoredBrandsMigrationApi.v4+json": {
              "schema": {
                "$ref": "#/components/schemas/MigrationResultsRequestContent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.SponsoredBrands.SponsoredBrandsMigrationApi.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/MigrationResultsResponseContent"
                }
              }
            },
            "description": "MigrationResults 200 response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidArgumentExceptionResponseContent"
                }
              }
            },
            "description": "InvalidArgumentException 400 response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            },
            "description": "UnauthorizedException 401 response"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            },
            "description": "AccessDeniedException 403 response"
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "ThrottlingException 429 response",
            "headers": {
              "Retry-After": {
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                "schema": {
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                  "type": "number"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerExceptionResponseContent"
                }
              }
            },
            "description": "InternalServerException 500 response"
          }
        },
        "summary": "Lists all Campaign Migration results for an advertiser.",
        "tags": [
          "V3 Campaign Migration"
        ]
      }
    }
  },
  "tags": [
    {
      "name": "Campaigns"
    },
    {
      "name": "Ad groups"
    },
    {
      "name": "Ads"
    },
    {
      "name": "Ad creatives"
    },
    {
      "name": "Recommendations"
    },
    {
      "name": "Product targeting categories"
    },
    {
      "name": "Insights"
    },
    {
      "name": "Budget usage"
    },
    {
      "name": "Forecasts"
    },
    {
      "name": "Optimization rules"
    },
    {
      "name": "V3 Campaign Migration"
    }
  ]
}