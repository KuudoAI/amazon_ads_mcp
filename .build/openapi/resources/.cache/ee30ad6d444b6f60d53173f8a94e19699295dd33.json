{
  "components": {
    "callbacks": {},
    "examples": {},
    "headers": {},
    "links": {},
    "parameters": {
      "advertiserIdHeader": {
        "description": "The identifier that describe DSP advertiser level accounts that exists under a manager account (previously under a DSP entity). Exposed in the /dsp/advertisers API.",
        "in": "header",
        "name": "Amazon-Ads-AccountId",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "clientHeader": {
        "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
        "in": "header",
        "name": "Amazon-Advertising-API-ClientId",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "profileHeader": {
        "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
        "in": "header",
        "name": "Amazon-Advertising-API-Scope",
        "required": false,
        "schema": {
          "type": "string"
        }
      }
    },
    "requestBodies": {},
    "responses": {},
    "schemas": {
      "AdTypeV1": {
        "description": "Supported values are DSP(Demand Side Platform).",
        "enum": [
          "DSP"
        ],
        "readOnly": true,
        "type": "string"
      },
      "AssetTypeV1M2": {
        "description": "The type of the Asset.",
        "enum": [
          "IMAGE",
          "VIDEO"
        ],
        "readOnly": true,
        "type": "string"
      },
      "AssetV1M2": {
        "description": "The Amazon Creative Asset Library asset identifier. Refer https://advertising.amazon.com/API/docs/en-us/creative-asset-library",
        "properties": {
          "assetId": {
            "description": "The assetId.",
            "type": "string"
          },
          "assetType": {
            "$ref": "#/components/schemas/AssetTypeV1M2"
          },
          "version": {
            "description": "The version of the asset.",
            "type": "string"
          }
        }
      },
      "AudienceGroupV1M2": {
        "description": "The model for holding Audiece selection within a group. The expression within an audience group will be evaluated using the IntraGroupOperator. The InterGroupOperator will be applied on the output of one audience group with another audience group.",
        "properties": {
          "audienceSegments": {
            "description": "List of audience segments in this group.",
            "items": {
              "$ref": "#/components/schemas/AudienceSegmentV1M2"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "interGroupOperator": {
            "$ref": "#/components/schemas/AudienceSelectionOperatorV1M2"
          },
          "intraGroupOperator": {
            "$ref": "#/components/schemas/AudienceSelectionOperatorV1M2"
          }
        },
        "type": "object"
      },
      "AudienceResearchStudyResultV1M2": {
        "description": "The result of Audience Research study.",
        "properties": {
          "studyId": {
            "description": "The canonical Id of Study.",
            "type": "string"
          },
          "surveyResponses": {
            "description": "Detailed response rate for each response in Survey question aggregated by different segments.",
            "items": {
              "$ref": "#/components/schemas/SurveyResponseResultV1"
            },
            "maxItems": 2000,
            "minItems": 1,
            "type": "array"
          },
          "totalResponses": {
            "description": "Total number of responses received in the Survey.",
            "type": "number"
          }
        }
      },
      "AudienceSegmentV1M2": {
        "description": "The model for holding an Audience Segment.",
        "properties": {
          "segmentId": {
            "description": "ID for the audience segment. This ID can be fetched from these APIs- https://advertising.amazon.com/API/docs/en-us/audiences/#/Discovery",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AudienceSelectionOperatorV1M2": {
        "description": "The operator used in Audience Segment Selection to determine which operation needs to be applied across selected segments. AND operator takes priority over OR operator.",
        "enum": [
          "AND",
          "OR"
        ],
        "readOnly": true,
        "type": "string"
      },
      "AudienceTargetingGroupV1M2": {
        "description": "The model for holding Audiece targeting group. The includedAudienceGroups and excludedAudienceGroups are always joined with AND operator.",
        "properties": {
          "excludedAudienceGroups": {
            "description": "List of audience groups to be excluded from the targeted audience.",
            "items": {
              "$ref": "#/components/schemas/AudienceGroupV1M2"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "includedAudienceGroups": {
            "description": "List of audience groups to be included in the targeted audience.",
            "items": {
              "$ref": "#/components/schemas/AudienceGroupV1M2"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "BaseEligibilityRequestV1": {
        "description": "The request object of measurement eligibility check.",
        "properties": {
          "fundingTypeFilters": {
            "description": "FundingType filters to be applied when checking eligibility status. If not supplied we will check against all available vendor products.",
            "items": {
              "$ref": "#/components/schemas/FundingTypeV1"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "vendorProductIdFilters": {
            "description": "VendorProduct identifier filters to be applied when checking eligibility status. If not supplied we will check against all available vendor products.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "vendorTypeFilters": {
            "description": "VendorType filters to be applied when checking eligibility status. If not supplied we will check against all available vendor products.",
            "items": {
              "$ref": "#/components/schemas/VendorTypeV1"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "BaseEligibilityRequestV1M1": {
        "description": "The request object of measurement eligibility check.",
        "properties": {
          "fundingTypeFilters": {
            "description": "FundingType filters to be applied when checking eligibility status. If not supplied we will check against all available vendor products.",
            "items": {
              "$ref": "#/components/schemas/FundingTypeV1M1"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "vendorProductIdFilters": {
            "description": "VendorProduct identifier filters to be applied when checking eligibility status. If not supplied we will check against all available vendor products.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "vendorTypeFilters": {
            "description": "VendorType filters to be applied when checking eligibility status. If not supplied we will check against all available vendor products.",
            "items": {
              "$ref": "#/components/schemas/VendorTypeV1M1"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "BaseEligibilityRequestV1M2": {
        "description": "The request object of measurement eligibility check.",
        "properties": {
          "fundingTypeFilters": {
            "description": "FundingType filters to be applied when checking eligibility status. If not supplied we will check against all available vendor products.",
            "items": {
              "$ref": "#/components/schemas/FundingTypeV1M2"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "vendorProductIdFilters": {
            "description": "VendorProduct identifier filters to be applied when checking eligibility status. If not supplied we will check against all available vendor products.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "vendorTypeFilters": {
            "description": "VendorType filters to be applied when checking eligibility status. If not supplied we will check against all available vendor products.",
            "items": {
              "$ref": "#/components/schemas/VendorTypeV1M2"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          }
        }
      },
      "BaseEligibilityRequestV1M3": {
        "description": "The request object of measurement eligibility check.",
        "properties": {
          "fundingTypeFilters": {
            "description": "FundingType filters to be applied when checking eligibility status. If not supplied we will check against all available vendor products.",
            "items": {
              "$ref": "#/components/schemas/FundingTypeV1M3"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "vendorProductIdFilters": {
            "description": "VendorProduct identifier filters to be applied when checking eligibility status. If not supplied we will check against all available vendor products.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "vendorTypeFilters": {
            "description": "VendorType filters to be applied when checking eligibility status. If not supplied we will check against all available vendor products.",
            "items": {
              "$ref": "#/components/schemas/VendorTypeV1M3"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          }
        }
      },
      "BaseStudyV1": {
        "description": "The base study object.",
        "properties": {
          "comment": {
            "description": "The approver's comment on why the study is approved/rejected.",
            "readOnly": true,
            "type": "string"
          },
          "createDate": {
            "description": "The study creation date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "endDate": {
            "description": "The study end date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC. By default this will be the latest endDate of the associated orders.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "externalReferenceId": {
            "description": "Optional field. For some vendors, advertisers are required to provide this vendor assigned reference identifier for EXTERNAL_BILLING studies.",
            "type": "string"
          },
          "id": {
            "description": "The study canonical identifier. Immutable field. This is required for update.",
            "type": "string"
          },
          "lastUpdatedDate": {
            "description": "The study last updated date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The study name.",
            "type": "string"
          },
          "rejectionReasons": {
            "deprecated": true,
            "description": "List of reasons for rejection, this will only be available if the status is REJECTED. This field is deprecated, use statusReasons instead.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "readOnly": true,
            "type": "array"
          },
          "reviewDate": {
            "description": "The study review date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "startDate": {
            "description": "The study start date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC. By default this will be the earliest startDate of the associated orders.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/StudyStatusV1"
          },
          "statusReasons": {
            "description": "List of reasons for study status. For example, when study is marked Rejected or Ineligible, this field would be available.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "readOnly": true,
            "type": "array"
          },
          "studyResultStatus": {
            "description": "The status of result of the study.",
            "enum": [
              "AVAILABLE"
            ],
            "type": "string"
          },
          "submissionType": {
            "$ref": "#/components/schemas/StudySubmissionTypeV1"
          },
          "surveyId": {
            "description": "The study survey canonical identifier.",
            "type": "string"
          },
          "vendorProductId": {
            "description": "Associated vendor product canonical identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BaseStudyV1M1": {
        "description": "The base study object.",
        "properties": {
          "comment": {
            "description": "The approver's comment on why the study is approved/rejected.",
            "readOnly": true,
            "type": "string"
          },
          "createDate": {
            "description": "The study creation date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "endDate": {
            "description": "The study end date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC. By default this will be the latest endDate of the associated orders.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "externalReferenceId": {
            "description": "Optional field. For some vendors, advertisers are required to provide this vendor assigned reference identifier for EXTERNAL_BILLING studies.",
            "type": "string"
          },
          "id": {
            "description": "The study canonical identifier. Immutable field. This is required for update.",
            "type": "string"
          },
          "lastUpdatedDate": {
            "description": "The study last updated date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/ResourceLinkV1M1"
            },
            "maxItems": 100,
            "minItems": 0,
            "readOnly": true,
            "type": "array"
          },
          "name": {
            "description": "The study name.",
            "type": "string"
          },
          "rejectionReasons": {
            "deprecated": true,
            "description": "List of reasons for rejection, this will only be available if the status is REJECTED. This field is deprecated, use statusReasons instead.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "readOnly": true,
            "type": "array"
          },
          "reviewDate": {
            "description": "The study review date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "startDate": {
            "description": "The study start date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC. By default this will be the earliest startDate of the associated orders.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/StudyStatusV1"
          },
          "statusReasons": {
            "description": "List of reasons for study status. For example, when study is marked Rejected or Ineligible, this field would be available.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "readOnly": true,
            "type": "array"
          },
          "studyResultStatus": {
            "description": "The status of result of the study.",
            "enum": [
              "AVAILABLE"
            ],
            "type": "string"
          },
          "submissionType": {
            "$ref": "#/components/schemas/StudySubmissionTypeV1"
          },
          "surveyId": {
            "description": "The study survey canonical identifier.",
            "type": "string"
          },
          "vendorProductId": {
            "description": "Associated vendor product canonical identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BaseStudyV1M2": {
        "description": "The base study object.",
        "properties": {
          "comment": {
            "description": "The approver's comment on why the study is approved/rejected.",
            "readOnly": true,
            "type": "string"
          },
          "createDate": {
            "description": "The study creation date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "endDate": {
            "description": "The study end date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC. By default this will be the latest endDate of the associated orders.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "externalReferenceId": {
            "description": "Optional field. For some vendors, advertisers are required to provide this vendor assigned reference identifier for EXTERNAL_BILLING studies.",
            "type": "string"
          },
          "lastUpdatedDate": {
            "description": "The study last updated date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The study name.",
            "type": "string"
          },
          "reviewDate": {
            "description": "The study review date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "startDate": {
            "description": "The study start date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC. By default this will be the earliest startDate of the associated orders.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/StudyStatusV1"
          },
          "statusReasons": {
            "description": "List of reasons for study status. For example, when study is marked Rejected or Ineligible, this field would be available.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "readOnly": true,
            "type": "array"
          },
          "studyResultStatus": {
            "description": "The status of result of the study.",
            "enum": [
              "AVAILABLE"
            ],
            "type": "string"
          },
          "surveyId": {
            "description": "The study survey canonical identifier.",
            "type": "string"
          },
          "vendorProductId": {
            "description": "Associated vendor product canonical identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BenchmarkCategoryV1": {
        "description": "The study benchmark product category.",
        "enum": [
          "APPLIANCES",
          "APPS_AND_GAMES",
          "ARTS_CRAFTS_AND_SEWING",
          "AUTOMOTIVE",
          "BABY",
          "BEAUTY_AND_PERSONAL_CARE",
          "BEVERAGES",
          "BOOKS",
          "CELL_PHONES_AND_ACCESSORIES",
          "CLOTHING_SHOES_AND_JEWELRY",
          "COMPUTERS_AND_ACCESSORIES",
          "DIGITAL_MUSIC",
          "EDUCATION",
          "ELECTRONICS",
          "FINANCIAL_AND_INSURANCE",
          "FOOD",
          "HEALTH_AND_HOUSEHOLD",
          "HOME_AND_KITCHEN",
          "HOSPITALITY",
          "KITCHEN_AND_DINING",
          "MOVIES_AND_TV",
          "OFFICE_PRODUCTS",
          "PATIO_LAWN_AND_GARDEN",
          "PET_SUPPLIES",
          "RESTAURANTS",
          "SOFTWARE",
          "SPORTS_AND_OUTDOORS",
          "TELECOMMUNICATIONS_SERVICES",
          "TOOLS_AND_HOME_IMPROVEMENT",
          "TOYS_AND_GAMES",
          "VIDEO_GAMES"
        ],
        "type": "string"
      },
      "BooleanStudyField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StudyField"
          },
          {
            "properties": {
              "defaultEnabled": {
                "description": "Whether or not this study field is selected or not by default.",
                "type": "boolean"
              },
              "fieldType": {
                "default": "BOOLEAN",
                "enum": [
                  "BOOLEAN"
                ],
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "description": "Represents a boolean study field."
      },
      "BrandLiftStudyResultV1": {
        "description": "The result of Brand Lift study.",
        "properties": {
          "brandLiftSummary": {
            "description": "Summary of Brand Lift achieved for each objective.",
            "items": {
              "$ref": "#/components/schemas/BrandLiftSummaryV1"
            },
            "maxItems": 50,
            "minItems": 1,
            "type": "array"
          },
          "studyId": {
            "description": "The canonical Id of Study.",
            "type": "string"
          },
          "surveyResponses": {
            "description": "Detailed response rate for each response in Survey question aggregated by different segments.",
            "items": {
              "$ref": "#/components/schemas/SurveyResponseResultV1"
            },
            "maxItems": 2000,
            "minItems": 1,
            "type": "array"
          },
          "totalResponses": {
            "description": "Total number of responses received in the Survey.",
            "type": "number"
          }
        }
      },
      "BrandLiftStudyResultV1M1": {
        "description": "The result of Brand Lift study.",
        "properties": {
          "brandLiftSummary": {
            "description": "Summary of Brand Lift achieved for each objective.",
            "items": {
              "$ref": "#/components/schemas/BrandLiftSummaryV1M1"
            },
            "maxItems": 50,
            "minItems": 1,
            "type": "array"
          },
          "studyId": {
            "description": "The canonical Id of Study.",
            "type": "string"
          },
          "surveyResponses": {
            "description": "Detailed response rate for each response in Survey question aggregated by different segments.",
            "items": {
              "$ref": "#/components/schemas/SurveyResponseResultV1M1"
            },
            "maxItems": 2000,
            "minItems": 1,
            "type": "array"
          },
          "totalResponses": {
            "description": "Total number of responses received in the Survey.",
            "type": "number"
          }
        }
      },
      "BrandLiftSummaryV1": {
        "description": "Summary of Brand Lift achieved for an objective.",
        "properties": {
          "adExposedGroupRate": {
            "description": "Ad exposed group response rate.",
            "format": "double",
            "type": "number"
          },
          "benchmarkLiftRate": {
            "description": "The benchmark lift rate for the selected product category in the Survey.",
            "format": "double",
            "type": "number"
          },
          "controlGroupRate": {
            "description": "Control group response rate.",
            "format": "double",
            "type": "number"
          },
          "qualifyingResponses": {
            "description": "Qualifying responses aggregated to measure the Brand Lift.",
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          },
          "questionObjective": {
            "$ref": "#/components/schemas/SurveyQuestionObjectiveTypeV1"
          },
          "questionText": {
            "description": "Text of the Survey question.",
            "type": "string"
          },
          "statisticalSignificance": {
            "description": "The significance percentage of achieved Brand Lift.",
            "format": "double",
            "type": "number"
          }
        }
      },
      "BrandLiftSummaryV1M1": {
        "description": "Summary of Brand Lift achieved for an objective.",
        "properties": {
          "adExposedGroupRate": {
            "description": "Ad exposed group response rate.",
            "type": "number"
          },
          "benchmarkLiftRate": {
            "description": "The benchmark lift rate for the selected product category in the Survey.",
            "type": "number"
          },
          "controlGroupRate": {
            "description": "Control group response rate.",
            "type": "number"
          },
          "qualifyingResponses": {
            "description": "Qualifying responses aggregated to measure the Brand Lift.",
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          },
          "questionObjective": {
            "$ref": "#/components/schemas/SurveyQuestionObjectiveTypeV1M1"
          },
          "questionText": {
            "description": "Text of the Survey question.",
            "type": "string"
          },
          "statisticalSignificance": {
            "description": "The significance percentage of achieved Brand Lift.",
            "type": "number"
          }
        }
      },
      "CreateDSPAudienceResearchStudyV1M2": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseStudyV1M2"
          },
          {
            "$ref": "#/components/schemas/DSPCampaignPlanningMetadataV1M2"
          },
          {
            "$ref": "#/components/schemas/DSPAudienceResearchMetadataV1M2"
          }
        ],
        "description": "Create DSP AUDIENCE_RESEARCH study object.",
        "type": "object"
      },
      "CreateDSPCreativeTestingStudyV1M2": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseStudyV1M2"
          },
          {
            "$ref": "#/components/schemas/DSPCampaignPlanningMetadataV1M2"
          },
          {
            "$ref": "#/components/schemas/DSPCreativeTestingMetadataV1M2"
          }
        ],
        "description": "Create DSP CREATIVE_TESTING study object.",
        "type": "object"
      },
      "CreativeTestingStudyResultV1M2": {
        "description": "The result of Creative Testing study.",
        "properties": {
          "studyId": {
            "description": "The canonical Id of Study.",
            "type": "string"
          },
          "surveyResponses": {
            "description": "Detailed response rate for each response in Survey question aggregated by different segments.",
            "items": {
              "$ref": "#/components/schemas/SurveyResponseResultV1M2"
            },
            "maxItems": 2000,
            "minItems": 1,
            "type": "array"
          },
          "totalResponses": {
            "description": "Total number of responses received in the Survey.",
            "type": "number"
          }
        }
      },
      "CuratedStudyResultV1": {
        "description": "The response object for downloading curated study results.",
        "properties": {
          "fileDownloadUrl": {
            "description": "A pre-signed S3 URL which links to the curated study results file. The URL expires after 60 seconds. If the URL expires before the curated results file is downloaded, a new download request must be created.",
            "type": "string"
          },
          "fileType": {
            "description": "The file type of the curated results file.",
            "enum": [
              "JPEG",
              "OTHER",
              "PDF",
              "PNG",
              "POWERPOINT"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "CurrencyCodeV1M2": {
        "description": "Currency Code.",
        "enum": [
          "AED",
          "AUD",
          "BRL",
          "CAD",
          "EGP",
          "EUR",
          "GBP",
          "INR",
          "JPY",
          "MXN",
          "PLN",
          "SAR",
          "SEK",
          "SGD",
          "TRY",
          "USD"
        ],
        "type": "string"
      },
      "CustomSurveyQuestionV1": {
        "deprecated": true,
        "description": "The templated measurement survey question.",
        "properties": {
          "questionText": {
            "description": "The survey question text.",
            "type": "string"
          },
          "responses": {
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "type": {
            "$ref": "#/components/schemas/SurveyQuestionTypeV1"
          }
        },
        "type": "object"
      },
      "DSPAudienceResearchCostEstimationRequestV1M2": {
        "description": "The request object of DSP Audience Research study cost estimation.",
        "properties": {
          "advertiserId": {
            "description": "The associated advertiser identifier.",
            "type": "string"
          },
          "customQuestions": {
            "description": "A list of custom survey questions.",
            "items": {
              "$ref": "#/components/schemas/CustomSurveyQuestionV1"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "locale": {
            "$ref": "#/components/schemas/MeasurementLocaleV1"
          },
          "templatedQuestions": {
            "description": "A list of templated survey questions.",
            "items": {
              "$ref": "#/components/schemas/TemplatedSurveyQuestionV1"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "vendorProductId": {
            "description": "vendor product canonical identifier.",
            "type": "string"
          }
        }
      },
      "DSPAudienceResearchCostEstimationResponseV1M2": {
        "description": "The response object of DSP Audience Research study cost estimation.",
        "properties": {
          "cost": {
            "description": "The estimated cost for the Study.",
            "type": "number"
          },
          "currencyCode": {
            "$ref": "#/components/schemas/CurrencyCodeV1M2"
          }
        }
      },
      "DSPAudienceResearchEligibilityDataV1M2": {
        "description": "The audience research study eligibility data.",
        "properties": {
          "audienceTargetingGroup": {
            "$ref": "#/components/schemas/AudienceTargetingGroupV1M2"
          }
        },
        "type": "object"
      },
      "DSPAudienceResearchEligibilityRequestV1M2": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEligibilityRequestV1M2"
          },
          {
            "$ref": "#/components/schemas/DSPAudienceResearchEligibilityDataV1M2"
          }
        ],
        "description": "The request object of DSP Audience Research study eligibility check."
      },
      "DSPAudienceResearchMetadataV1M2": {
        "description": "The basic model for all DSP AUDIENCE_RESEARCH objective studies.",
        "properties": {
          "audienceTargetingGroup": {
            "$ref": "#/components/schemas/AudienceTargetingGroupV1M2"
          },
          "brandName": {
            "description": "The study brand name.",
            "type": "string"
          },
          "peerNames": {
            "description": "A list of peer names for the study brand.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "productCategory": {
            "description": "The study product category.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DSPAudienceResearchStudyV1M2": {
        "allOf": [
          {
            "properties": {
              "id": {
                "description": "The study canonical identifier. Immutable field.",
                "type": "string"
              }
            },
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/BaseStudyV1M2"
          },
          {
            "$ref": "#/components/schemas/DSPCampaignPlanningMetadataV1M2"
          },
          {
            "$ref": "#/components/schemas/DSPAudienceResearchMetadataV1M2"
          }
        ],
        "description": "DSP AUDIENCE_RESEARCH study object.",
        "type": "object"
      },
      "DSPBrandLiftEligibilityDataV1": {
        "description": "The campaign study eligibility data.",
        "properties": {
          "currentStudyId": {
            "description": "Optional current study identifier, if provided orders are expected to be added into this study and the orders already associated with this study will be excluded from certain eligibility check.",
            "type": "string"
          },
          "excludedLineItemIds": {
            "description": "A list of canonical lineItem identifiers that are excluded from the eligibility check.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "orderIds": {
            "description": "A list of canonical order identifiers. By default all lineItems in those orders will be included.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "DSPBrandLiftEligibilityRequestV1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEligibilityRequestV1"
          },
          {
            "$ref": "#/components/schemas/DSPBrandLiftEligibilityDataV1"
          }
        ],
        "description": "The request object of DSP brand lift eligibility check.",
        "type": "object"
      },
      "DSPBrandLiftEligibilityRequestV1M1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEligibilityRequestV1M1"
          },
          {
            "$ref": "#/components/schemas/DSPBrandLiftEligibilityDataV1"
          }
        ],
        "description": "The request object of DSP brand lift eligibility check.",
        "type": "object"
      },
      "DSPBrandLiftMetadataV1": {
        "description": "The basic model for all DSP BRAND_LIFT objective studies.",
        "properties": {
          "benchmarkCategory": {
            "$ref": "#/components/schemas/BenchmarkCategoryV1"
          },
          "brandName": {
            "description": "The study brand name.",
            "type": "string"
          },
          "peerNames": {
            "description": "A list of peer names for the study brand.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "productCategory": {
            "description": "The study product category.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DSPBrandLiftMetadataV1M1": {
        "description": "The basic model for all DSP BRAND_LIFT objective studies.",
        "properties": {
          "benchmarkCategory": {
            "$ref": "#/components/schemas/BenchmarkCategoryV1"
          },
          "brandName": {
            "description": "The study brand name.",
            "type": "string"
          },
          "peerNames": {
            "description": "A list of peer names for the study brand.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "productCategory": {
            "description": "The study product category.",
            "type": "string"
          },
          "verb": {
            "description": "The verb that will be used in the applicable survey questions to construct the question text.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DSPBrandLiftStudyV1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseStudyV1"
          },
          {
            "$ref": "#/components/schemas/DSPCampaignMeasurementMetadataV1"
          },
          {
            "$ref": "#/components/schemas/DSPBrandLiftMetadataV1"
          }
        ],
        "description": "DSP BRAND_LIFT study object.",
        "type": "object"
      },
      "DSPBrandLiftStudyV1M1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseStudyV1M1"
          },
          {
            "$ref": "#/components/schemas/DSPCampaignMeasurementMetadataV1M1"
          },
          {
            "$ref": "#/components/schemas/DSPBrandLiftMetadataV1M1"
          }
        ],
        "description": "DSP BRAND_LIFT study object.",
        "type": "object"
      },
      "DSPCampaignMeasurementMetadataV1": {
        "description": "The basic model for all DSP CAMPAIGN_MEASUREMENT objective studies.",
        "properties": {
          "advertiserId": {
            "description": "The associated advertiser identifier. Immutable field.",
            "type": "string"
          },
          "excludedLineItemIds": {
            "description": "A list of canonical lineItem identifiers that are excluded from the study.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "orderIds": {
            "description": "A list of canonical order identifiers that are associated with the study. By default all lineItems in those orders will be included.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "DSPCampaignMeasurementMetadataV1M1": {
        "description": "The basic model for all DSP CAMPAIGN_MEASUREMENT objective studies.",
        "properties": {
          "advertiserId": {
            "description": "The associated advertiser identifier. Immutable field.",
            "type": "string"
          },
          "excludedLineItemIds": {
            "description": "A list of canonical lineItem identifiers that are excluded from the study.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "orderIds": {
            "description": "A list of canonical order identifiers that are associated with the study. By default all lineItems in those orders will be included.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "DSPCampaignPlanningMetadataV1M2": {
        "description": "The basic model for all DSP CAMPAIGN_PLANNING objective studies.",
        "properties": {
          "advertiserId": {
            "description": "The associated advertiser identifier. Immutable field.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DSPCreativeTestingCostEstimationRequestV1M2": {
        "description": "The request object of DSP Creative Testing study cost estimation.",
        "properties": {
          "advertiserId": {
            "description": "The associated advertiser identifier.",
            "type": "string"
          },
          "assets": {
            "description": "A list of assets to be used for the creative testing study as part of either the survey question or the response.",
            "items": {
              "$ref": "#/components/schemas/AssetV1M2"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          },
          "customQuestions": {
            "description": "A list of custom survey questions.",
            "items": {
              "$ref": "#/components/schemas/CustomSurveyQuestionV1"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "locale": {
            "$ref": "#/components/schemas/MeasurementLocaleV1"
          },
          "templatedQuestions": {
            "description": "A list of templated survey questions.",
            "items": {
              "$ref": "#/components/schemas/TemplatedSurveyQuestionV1"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "vendorProductId": {
            "description": "vendor product canonical identifier.",
            "type": "string"
          }
        }
      },
      "DSPCreativeTestingCostEstimationResponseV1M2": {
        "description": "The response object of DSP Creative Testing study cost estimation.",
        "properties": {
          "cost": {
            "description": "The estimated cost for the Study.",
            "type": "number"
          },
          "currencyCode": {
            "$ref": "#/components/schemas/CurrencyCodeV1M2"
          }
        }
      },
      "DSPCreativeTestingEligibilityDataV1M2": {
        "description": "The creative testing study eligibility data.",
        "properties": {
          "audienceTargetingGroup": {
            "$ref": "#/components/schemas/AudienceTargetingGroupV1M2"
          }
        },
        "type": "object"
      },
      "DSPCreativeTestingEligibilityRequestV1M2": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEligibilityRequestV1M2"
          },
          {
            "$ref": "#/components/schemas/DSPCreativeTestingEligibilityDataV1M2"
          }
        ],
        "description": "The request object of DSP Creative Testing study eligibility check."
      },
      "DSPCreativeTestingMetadataV1M2": {
        "description": "The basic model for all DSP CREATIVE_TESTING objective studies.",
        "properties": {
          "assets": {
            "description": "A list of assets to be used for the creative testing study as part of either the survey question or the response. In case of API responses, number of assets returned would be limited to 10 even if a creative testing study has more than 10 assets associated with it.",
            "items": {
              "$ref": "#/components/schemas/AssetV1M2"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          },
          "audienceTargetingGroup": {
            "$ref": "#/components/schemas/AudienceTargetingGroupV1M2"
          },
          "brandName": {
            "description": "The study brand name.",
            "type": "string"
          },
          "productCategory": {
            "description": "Optional study product category.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DSPCreativeTestingStudyV1M2": {
        "allOf": [
          {
            "properties": {
              "id": {
                "description": "The study canonical identifier. Immutable field.",
                "type": "string"
              }
            },
            "type": "object"
          },
          {
            "$ref": "#/components/schemas/BaseStudyV1M2"
          },
          {
            "$ref": "#/components/schemas/DSPCampaignPlanningMetadataV1M2"
          },
          {
            "$ref": "#/components/schemas/DSPCreativeTestingMetadataV1M2"
          }
        ],
        "description": "DSP CREATIVE_TESTING study object.",
        "type": "object"
      },
      "DSPOmnichannelMetricsEligibilityDataV1M2": {
        "description": "The campaign study eligibility data.",
        "properties": {
          "brandIds": {
            "description": "A list of canonical brand identifiers.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "currentStudyId": {
            "description": "Optional current study identifier. If provided orders are expected to be added into this study and the orders already associated with this study will be excluded from certain eligibility checks.",
            "type": "string"
          },
          "excludedLineItemIds": {
            "description": "A list of canonical lineItem identifiers that are excluded from the eligibility check.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "orderIds": {
            "description": "A list of canonical order identifiers. By default all lineItems in those orders will be included.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "DSPOmnichannelMetricsEligibilityRequestV1M2": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEligibilityRequestV1M2"
          },
          {
            "$ref": "#/components/schemas/DSPOmnichannelMetricsEligibilityDataV1M2"
          }
        ],
        "description": "The request object of DSP omnichannel metrics eligibility check."
      },
      "DSPOmnichannelMetricsEligibilityRequestV1M3": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEligibilityRequestV1M3"
          },
          {
            "$ref": "#/components/schemas/DSPOmnichannelMetricsEligibilityDataV1M2"
          }
        ],
        "description": "The request object of DSP omnichannel metrics eligibility check."
      },
      "DSPOmnichannelMetricsMetadataV1M2": {
        "description": "The basic model for all DSP OMNICHANNEL_METRICS objective studies.",
        "properties": {
          "brandIds": {
            "description": "A list of canonical brand ids to be tracked for off-Amazon conversions.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "DSPOmnichannelMetricsStudyV1M2": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseStudyV1"
          },
          {
            "$ref": "#/components/schemas/DSPCampaignMeasurementMetadataV1"
          },
          {
            "$ref": "#/components/schemas/DSPOmnichannelMetricsMetadataV1M2"
          }
        ],
        "description": "DSP OMNICHANNEL_METRICS study object.",
        "type": "object"
      },
      "DSPOmnichannelMetricsStudyV1M3": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseStudyV1M1"
          },
          {
            "$ref": "#/components/schemas/DSPCampaignMeasurementMetadataV1M1"
          },
          {
            "$ref": "#/components/schemas/DSPOmnichannelMetricsMetadataV1M2"
          }
        ],
        "description": "DSP OMNICHANNEL_METRICS study object.",
        "type": "object"
      },
      "EligibilityFieldV1": {
        "description": "Fields that will be checked as part of eligibility API call.",
        "enum": [
          "BUDGET",
          "END_TIME",
          "FLIGHT_LENGTH",
          "GOAL",
          "IMPRESSIONS",
          "LEAD_TIME",
          "LOCALE",
          "ORDER",
          "START_TIME"
        ],
        "type": "string"
      },
      "EligibilityFieldV1M2": {
        "description": "Fields that will be checked as part of eligibility API call.",
        "enum": [
          "BUDGET",
          "BUYER_COUNT",
          "END_TIME",
          "FLIGHT_LENGTH",
          "GOAL",
          "IMPRESSIONS",
          "INDUSTRY",
          "LEAD_TIME",
          "LOCALE",
          "ORDER",
          "START_TIME"
        ],
        "type": "string"
      },
      "EligibilityIssueSeverityV1": {
        "description": "Supported values are WARNING, ERROR. ERROR severity issues need to be resolved while WARNING severity issues can be ignored.",
        "enum": [
          "ERROR",
          "WARNING"
        ],
        "type": "string"
      },
      "EligibilityIssueV1": {
        "description": "The list of eligibility issues.",
        "properties": {
          "code": {
            "description": "An enumerated issue code for machine use.",
            "type": "string"
          },
          "field": {
            "$ref": "#/components/schemas/EligibilityFieldV1"
          },
          "message": {
            "description": "A human-readable description of the issue with suggestions on how to resolve the issue.",
            "type": "string"
          },
          "severity": {
            "$ref": "#/components/schemas/EligibilityIssueSeverityV1"
          }
        },
        "type": "object"
      },
      "EligibilityIssueV1M2": {
        "description": "The list of eligibility issues.",
        "properties": {
          "code": {
            "description": "An enumerated issue code for machine use.",
            "type": "string"
          },
          "field": {
            "$ref": "#/components/schemas/EligibilityFieldV1M2"
          },
          "message": {
            "description": "A human-readable description of the issue with suggestions on how to resolve the issue.",
            "type": "string"
          },
          "severity": {
            "$ref": "#/components/schemas/EligibilityIssueSeverityV1"
          }
        }
      },
      "EligibilityMetadataV1": {
        "description": "The eligibility metadata.",
        "properties": {
          "budget": {
            "description": "The total budget. Expressed in dollars.",
            "format": "double",
            "readOnly": true,
            "type": "number"
          },
          "endDate": {
            "description": "The latest end date of the associated orders in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "flightLength": {
            "description": "The flight length of the associated orders. Expressed in days.",
            "readOnly": true,
            "type": "integer"
          },
          "impressions": {
            "description": "The total estimated impressions.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "startDate": {
            "description": "The earliest start date of associated orders in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "EligibilityResponseV1": {
        "description": "The eligibility check response object.",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/EligibilityMetadataV1"
          },
          "nextToken": {
            "type": "string"
          },
          "vendorProductEligibilities": {
            "items": {
              "$ref": "#/components/schemas/VendorProductEligibilityV1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "EligibilityResponseV1M2": {
        "description": "The eligibility check response object.",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/EligibilityMetadataV1"
          },
          "nextToken": {
            "type": "string"
          },
          "vendorProductEligibilities": {
            "items": {
              "$ref": "#/components/schemas/VendorProductEligibilityV1M2"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        }
      },
      "EligibilityStatusV1": {
        "description": "Supported values are ELIGIBLE, INELIGIBLE and ELIGIBLE_WITH_WARNING. INELIGIBLE status indicates the study can not be created.",
        "enum": [
          "ELIGIBLE",
          "ELIGIBLE_WITH_WARNING",
          "INELIGIBLE"
        ],
        "type": "string"
      },
      "ErrorV1": {
        "description": "The error response object.",
        "properties": {
          "errors": {
            "items": {
              "$ref": "#/components/schemas/SubErrorV1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "message": {
            "description": "A human-readable description of the response.",
            "type": "string"
          },
          "requestId": {
            "description": "Request Id that uniquely identifies your request.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "FreeTextStudyField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StudyField"
          },
          {
            "properties": {
              "fieldType": {
                "default": "FREE_TEXT",
                "enum": [
                  "FREE_TEXT"
                ],
                "type": "string"
              },
              "maxLength": {
                "description": "The maximum length of the free text input.",
                "minimum": 1,
                "type": "integer"
              }
            },
            "type": "object"
          }
        ],
        "description": "Represents a free text study field."
      },
      "FundingTypeV1": {
        "description": "The measurement funding type. For COMPLIMENTARY studies the cost will be covered by Amazon.",
        "enum": [
          "COMPLIMENTARY"
        ],
        "readOnly": true,
        "type": "string"
      },
      "FundingTypeV1M1": {
        "description": "The measurement funding type. For COMPLIMENTARY studies the cost will be covered by Amazon.",
        "enum": [
          "COMPLIMENTARY",
          "THIRD_PARTY_PAYMENT"
        ],
        "readOnly": true,
        "type": "string"
      },
      "FundingTypeV1M2": {
        "description": "The measurement funding type. For COMPLIMENTARY studies the cost will be covered by Amazon.",
        "enum": [
          "COMPLIMENTARY",
          "CPM",
          "FLAT_RATE"
        ],
        "readOnly": true,
        "type": "string"
      },
      "FundingTypeV1M3": {
        "description": "The measurement funding type. For COMPLIMENTARY studies the cost will be covered by Amazon.",
        "enum": [
          "COMPLIMENTARY",
          "CPM",
          "THIRD_PARTY_PAYMENT"
        ],
        "readOnly": true,
        "type": "string"
      },
      "GetMeasurementStudies": {
        "description": "The request object for fetching measurement studies.",
        "properties": {
          "advertiserId": {
            "description": "The advertiser canonical identifier. Either one of studyIds or advertiserId should be provided.",
            "type": "string"
          },
          "maxResults": {
            "default": 10,
            "description": "Sets the maximum number of studies in the returned array. Use in conjunction with the nextToken parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "format": "integer",
            "maximum": 100,
            "minimum": 1,
            "type": "number"
          },
          "nextToken": {
            "description": "Token from a previous request. Use in conjunction with the maxResults parameter to control pagination of the returned array.",
            "type": "string"
          },
          "studyIds": {
            "description": "Study canonical identifier to filter with.",
            "items": {
              "type": "string"
            },
            "maxItems": 50,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetMeasurementStudiesAudienceResearch": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GetMeasurementStudies"
          }
        ],
        "description": "The request object for audience research study.",
        "type": "object"
      },
      "GetMeasurementStudiesAudienceResearchResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GetMeasurementStudyResults"
          }
        ],
        "description": "The request object for fetching audience research study results of a specific study.",
        "type": "object"
      },
      "GetMeasurementStudiesBrandLift": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GetMeasurementStudies"
          }
        ],
        "description": "The request object for fetching brand lift studies.",
        "type": "object"
      },
      "GetMeasurementStudiesBrandLiftResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GetMeasurementStudyResults"
          }
        ],
        "description": "The request object for fetching brand lift results of a specific study.",
        "type": "object"
      },
      "GetMeasurementStudiesCreativeTesting": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GetMeasurementStudies"
          }
        ],
        "description": "The request object for fetching creative testing studies.",
        "type": "object"
      },
      "GetMeasurementStudiesCreativeTestingResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GetMeasurementStudyResults"
          }
        ],
        "description": "The request object for fetching creative testing results of a specific study.",
        "type": "object"
      },
      "GetMeasurementStudiesGeneric": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GetMeasurementStudies"
          }
        ],
        "description": "The request object for fetching generic studies.",
        "type": "object"
      },
      "GetMeasurementStudiesGenericResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GetMeasurementStudyResults"
          }
        ],
        "description": "The request object for fetching generic results of a specific study.",
        "type": "object"
      },
      "GetMeasurementStudiesLocationLift": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GetMeasurementStudies"
          }
        ],
        "description": "The request object for fetching location lift studies.",
        "type": "object"
      },
      "GetMeasurementStudiesLocationLiftResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GetMeasurementStudyResults"
          }
        ],
        "description": "The request object for fetching location lift results of a specific study.",
        "type": "object"
      },
      "GetMeasurementStudiesOmnichannelMetrics": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GetMeasurementStudies"
          }
        ],
        "description": "The request object for fetching omnichannel metrics study.",
        "type": "object"
      },
      "GetMeasurementStudiesOmnichannelMetricsResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GetMeasurementStudyResults"
          }
        ],
        "description": "The request object for fetching omnichannel metrics results of a specific study.",
        "type": "object"
      },
      "GetMeasurementStudiesReachAndFrequency": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GetMeasurementStudies"
          }
        ],
        "description": "The request object for fetching reach and frequency studies.",
        "type": "object"
      },
      "GetMeasurementStudiesReachAndFrequencyResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GetMeasurementStudyResults"
          }
        ],
        "description": "The request object for fetching reach and frequency results of a specific study.",
        "type": "object"
      },
      "GetMeasurementStudiesSurvey": {
        "description": "The request object for fetching measurement studies based on surveys.",
        "properties": {
          "studyId": {
            "description": "A study canonical identifier. Either one of surveyIds or studyId should be provided.",
            "type": "string"
          },
          "surveyIds": {
            "description": "Survey canonical identifier to filter with. Either one of surveyIds or studyId should be provided.",
            "items": {
              "type": "string"
            },
            "maxItems": 50,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetMeasurementStudiesSurveyQuestionTemplate": {
        "description": "The request object for fetching survey question templates of a specific vendor product.",
        "properties": {
          "vendorProductId": {
            "description": "Vendor product canonical identifier to filter with.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetMeasurementStudiesVendorProductPolicy": {
        "description": "The request object for fetching vendor product policies of specific vendor products.",
        "properties": {
          "vendorProductIds": {
            "description": "Vendor product canonical identifier to filter with.",
            "items": {
              "type": "string"
            },
            "maxItems": 50,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetMeasurementStudyResults": {
        "description": "The request object for fetching results of a specific study.",
        "properties": {
          "studyId": {
            "description": "The canonical identifier that represents a unique study.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GridQuestionResponsesV1M1": {
        "description": "The grid question response object. Only applicable for SINGLE_SELECT_GRID type question.",
        "properties": {
          "columns": {
            "items": {
              "$ref": "#/components/schemas/SurveyQuestionPlaceholderFieldValueV1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "rows": {
            "items": {
              "$ref": "#/components/schemas/SurveyQuestionPlaceholderFieldValueV1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "HelpTextStudyField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StudyField"
          },
          {
            "properties": {
              "fieldType": {
                "default": "HELP_TEXT",
                "enum": [
                  "HELP_TEXT"
                ],
                "type": "string"
              },
              "maxLength": {
                "description": "The maximum length of the help text.",
                "minimum": 1,
                "type": "integer"
              }
            },
            "type": "object"
          }
        ],
        "description": "Represents a help text study field."
      },
      "MeasurementAudienceResearchFee": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementFee"
          }
        ],
        "description": "The response object to get fee for a Audience Research study."
      },
      "MeasurementAudienceResearchFeeRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementFeeRequest"
          }
        ],
        "description": "The request object to get fee for a Audience Research study."
      },
      "MeasurementAudienceResearchStudy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementBaseStudy"
          },
          {
            "$ref": "#/components/schemas/MeasurementStudiesCampaignPlanningMetadata"
          },
          {
            "$ref": "#/components/schemas/MeasurementAudienceResearchStudyMetadata"
          }
        ],
        "description": "AUDIENCE_RESEARCH study object.",
        "type": "object"
      },
      "MeasurementAudienceResearchStudyEligibilityData": {
        "description": "The audience research study eligibility data.",
        "properties": {
          "audienceTargetingGroup": {
            "$ref": "#/components/schemas/MeasurementStudiesAudienceTargetingGroup"
          }
        },
        "type": "object"
      },
      "MeasurementAudienceResearchStudyEligibilityRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementStudiesBaseEligibilityRequest"
          },
          {
            "$ref": "#/components/schemas/MeasurementAudienceResearchStudyEligibilityData"
          }
        ],
        "description": "The request object of Audience Research study eligibility check."
      },
      "MeasurementAudienceResearchStudyMetadata": {
        "description": "The basic model for all AUDIENCE_RESEARCH objective studies.",
        "properties": {
          "audienceTargetingGroup": {
            "$ref": "#/components/schemas/MeasurementStudiesAudienceTargetingGroup"
          },
          "brandName": {
            "description": "The study brand name.",
            "type": "string"
          },
          "peerNames": {
            "description": "A list of peer names for the study brand.",
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          },
          "productCategory": {
            "description": "The study product category.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementAudienceResearchStudyResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementStudyResult"
          },
          {
            "properties": {
              "fileType": {
                "enum": [
                  "CSV"
                ],
                "type": "string"
              }
            }
          }
        ],
        "description": "The response object for downloading study results.",
        "type": "object"
      },
      "MeasurementBaseStudy": {
        "description": "The base study object.",
        "properties": {
          "cancelledDate": {
            "description": "The study cancelled date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "format": "date-time",
            "type": "string"
          },
          "comment": {
            "description": "The approver's comment on why the study is approved/rejected.",
            "type": "string"
          },
          "createDate": {
            "description": "The study creation date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "format": "date-time",
            "type": "string"
          },
          "endDate": {
            "description": "The study end date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC. By default this will be the latest endDate of the associated orders.",
            "format": "date-time",
            "type": "string"
          },
          "exceptionReason": {
            "description": "The exception reason for submitting a study with REQUIRES_FURTHER_REVIEW eligibility status.",
            "type": "string"
          },
          "externalReferenceId": {
            "description": "Optional field. For some vendors, advertisers are required to provide this vendor assigned reference identifier for EXTERNAL_BILLING studies.",
            "type": "string"
          },
          "lastUpdatedDate": {
            "description": "The study last updated date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "format": "date-time",
            "type": "string"
          },
          "link": {
            "$ref": "#/components/schemas/MeasurementStudiesResourceLink"
          },
          "marketplace": {
            "$ref": "#/components/schemas/MeasurementStudiesCountry",
            "description": "The marketplace country code for the study"
          },
          "name": {
            "description": "The study name.",
            "type": "string"
          },
          "reviewDate": {
            "description": "The study review date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "format": "date-time",
            "type": "string"
          },
          "startDate": {
            "description": "The study start date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC. By default this will be the earliest startDate of the associated orders.",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/MeasurementStudyStatus"
          },
          "statusReasons": {
            "description": "List of reasons for study status. For example, when study is marked Rejected or Ineligible, this field would be available.",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudyStatusReason"
            },
            "maxItems": 42,
            "minItems": 0,
            "type": "array"
          },
          "studyId": {
            "description": "The study canonical identifier. Immutable field.",
            "readOnly": true,
            "type": "string"
          },
          "studyResultStatus": {
            "$ref": "#/components/schemas/MeasurementStudyResultStatus"
          },
          "studyTags": {
            "description": "List of tags for the study. For example, a study can be associated with an always on campaign.",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudyTag"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          },
          "submissionType": {
            "$ref": "#/components/schemas/MeasurementStudySubmissionType"
          },
          "surveyId": {
            "description": "The study survey canonical identifier.",
            "type": "string"
          },
          "vendorProductId": {
            "description": "Associated vendor product canonical identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementBrandLiftStudy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementBaseStudy"
          },
          {
            "$ref": "#/components/schemas/MeasurementBrandLiftStudyMetadata"
          }
        ],
        "description": "BRAND_LIFT study object.",
        "type": "object"
      },
      "MeasurementBrandLiftStudyEligibilityData": {
        "description": "The campaign study eligibility data.",
        "properties": {
          "campaignIds": {
            "description": "A list of canonical Sponsored Ads campaign identifiers that are associated with the study.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "currentStudyId": {
            "description": "Optional current study identifier, if provided orders are expected to be added into this study and the orders already associated with this study will be excluded from certain eligibility check.",
            "type": "string"
          },
          "excludedLineItemIds": {
            "description": "A list of canonical lineItem identifiers that are excluded from the eligibility check.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "orderIds": {
            "description": "A list of canonical DSP order identifiers. By default all lineItems in those orders will be included.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "MeasurementBrandLiftStudyEligibilityRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementStudiesBaseEligibilityRequest"
          },
          {
            "$ref": "#/components/schemas/MeasurementBrandLiftStudyEligibilityData"
          }
        ],
        "description": "The request object of brand lift eligibility check.",
        "type": "object"
      },
      "MeasurementBrandLiftStudyMetadata": {
        "description": "The basic model for all BRAND_LIFT studies.",
        "properties": {
          "advertiserId": {
            "description": "The associated advertiser identifier. Immutable field.",
            "type": "string"
          },
          "benchmarkCategory": {
            "$ref": "#/components/schemas/MeasurementStudiesBenchmarkCategory"
          },
          "brandEntityId": {
            "description": "The brand entity Id to be measured by the study.",
            "type": "string"
          },
          "brandName": {
            "description": "The study brand name.",
            "type": "string"
          },
          "campaignIds": {
            "description": "A list of canonical Sponsored Ads campaign identifiers that are associated with the study.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "contacts": {
            "items": {
              "$ref": "#/components/schemas/MeasurementContact"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          },
          "excludedLineItemIds": {
            "description": "A list of canonical lineItem identifiers that are excluded from the study.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "orderIds": {
            "description": "A list of canonical DSP order identifiers that are associated with the study. By default all lineItems in those orders will be included.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "peerNames": {
            "description": "A list of peer names for the study brand.",
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          },
          "productCategory": {
            "description": "The study product category.",
            "type": "string"
          },
          "verb": {
            "description": "The verb that will be used in the applicable survey questions to construct the question text.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementBrandLiftStudyResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementStudyResult"
          }
        ],
        "description": "The response object for downloading study results.",
        "properties": {
          "fileType": {
            "enum": [
              "CSV",
              "JPEG",
              "OTHER",
              "PDF",
              "PNG",
              "POWERPOINT"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementContact": {
        "description": "The study's contact",
        "properties": {
          "contactEmail": {
            "description": "Contact email address.",
            "example": "email@amazon.com",
            "type": "string"
          },
          "contactRole": {
            "$ref": "#/components/schemas/MeasurementContactRole"
          }
        },
        "type": "object"
      },
      "MeasurementContactRole": {
        "description": "The role type of the study's contact.",
        "enum": [
          "ACCOUNT_EXECUTIVE",
          "ACCOUNT_MANAGER",
          "OTHER",
          "PSC"
        ],
        "type": "string"
      },
      "MeasurementCountryV1": {
        "description": "The measurement country.",
        "enum": [
          "AE",
          "AU",
          "BR",
          "CA",
          "DE",
          "ES",
          "FR",
          "IT",
          "JP",
          "MX",
          "NL",
          "UK",
          "US"
        ],
        "type": "string"
      },
      "MeasurementCreativeTestingFee": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementFee"
          }
        ],
        "description": "The response object to get fee for a Creative Testing study."
      },
      "MeasurementCreativeTestingFeeRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementFeeRequest"
          }
        ],
        "description": "The request object to get fee for a Creative Testing study.",
        "properties": {
          "assets": {
            "description": "A list of assets to be used for the creative testing study as part of either the survey question or the response.",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesAsset"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          }
        }
      },
      "MeasurementCreativeTestingStudy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementBaseStudy"
          },
          {
            "$ref": "#/components/schemas/MeasurementStudiesCampaignPlanningMetadata"
          },
          {
            "$ref": "#/components/schemas/MeasurementCreativeTestingStudyMetadata"
          }
        ],
        "description": "CREATIVE_TESTING study object.",
        "type": "object"
      },
      "MeasurementCreativeTestingStudyEligibilityData": {
        "description": "The creative testing study eligibility data.",
        "properties": {
          "audienceTargetingGroup": {
            "$ref": "#/components/schemas/MeasurementStudiesAudienceTargetingGroup"
          }
        },
        "type": "object"
      },
      "MeasurementCreativeTestingStudyEligibilityRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementStudiesBaseEligibilityRequest"
          },
          {
            "$ref": "#/components/schemas/MeasurementCreativeTestingStudyEligibilityData"
          }
        ],
        "description": "The request object of Creative Testing study eligibility check."
      },
      "MeasurementCreativeTestingStudyMetadata": {
        "description": "The basic model for all CREATIVE_TESTING objective studies.",
        "properties": {
          "assets": {
            "description": "A list of assets to be used for the creative testing study as part of either the survey question or the response. In case of API responses, number of assets returned would be limited to 10 even if a creative testing study has more than 10 assets associated with it.",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesAsset"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          },
          "audienceTargetingGroup": {
            "$ref": "#/components/schemas/MeasurementStudiesAudienceTargetingGroup"
          },
          "brandName": {
            "description": "The study brand name.",
            "type": "string"
          },
          "productCategory": {
            "description": "Optional study product category.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementCreativeTestingStudyResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementStudyResult"
          }
        ],
        "description": "The response object for downloading study results.",
        "properties": {
          "fileType": {
            "enum": [
              "CSV"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementFee": {
        "description": "The response object to get fee for a study.",
        "properties": {
          "currencyCode": {
            "$ref": "#/components/schemas/MeasurementStudiesCurrencyCode"
          },
          "fee": {
            "description": "The fee for the Study. Check currencyCode field for the currency in which this field is expressed.",
            "type": "number"
          }
        }
      },
      "MeasurementFeeRequest": {
        "description": "The request object to get fee for a study.",
        "properties": {
          "advertiserId": {
            "description": "The associated DSP advertiser identifier. Mandatory field for DSP clients.",
            "type": "string"
          },
          "templatedQuestions": {
            "description": "A list of templated survey questions.",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesTemplatedSurveyShortQuestion"
            },
            "maxItems": 20,
            "minItems": 1,
            "type": "array"
          },
          "vendorProductId": {
            "description": "vendor product canonical identifier.",
            "type": "string"
          }
        }
      },
      "MeasurementFileUploadPolicy": {
        "description": "The measurement file upload policy.",
        "properties": {
          "s3ResponseFields": {
            "description": "Fields used in Post request. See more details at\n https://docs.aws.amazon.com/AWSJavaScriptSDK/v3/latest/modules/_aws_sdk_s3_presigned_post.html#post-file-using-formdata-in-nodejs",
            "example": {
              "acl": "bucket-owner-full-control",
              "key": "LOCATION_FILE/dc4f57a0-5a84-4cce-b227-0bf389f4c6a8/locationList.csv",
              "policy": "eyJleHBpcacEF53",
              "x-amz-algorithm": "AWS4-HMAC-SHA256",
              "x-amz-credential": "ASIA4HUVSEUT23WHSXYQ/20210517/us-east-1/s3/aws4_request",
              "x-amz-date": "20210517T183410Z",
              "x-amz-security-token": "IQoJb3JpZ2luX2VjELP",
              "x-amz-signature": "10864c"
            },
            "properties": {
              "acl": {
                "type": "string"
              },
              "key": {
                "type": "string"
              },
              "policy": {
                "type": "string"
              },
              "x-amz-algorithm": {
                "type": "string"
              },
              "x-amz-credential": {
                "type": "string"
              },
              "x-amz-date": {
                "type": "string"
              },
              "x-amz-security-token": {
                "type": "string"
              },
              "x-amz-signature": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "url": {
            "description": "The AWS S3 url for file upload. It will be used as POST request URL.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementFileUploadRequest": {
        "description": "The measurement file upload request object.",
        "properties": {
          "operationType": {
            "$ref": "#/components/schemas/MeasurementUploadOperationType"
          }
        },
        "type": "object"
      },
      "MeasurementFund": {
        "description": "The measurement fund.",
        "properties": {
          "advertiserId": {
            "description": "The associated DSP advertiser identifier. Mandatory field for DSP clients.",
            "type": "string"
          },
          "currencyCode": {
            "$ref": "#/components/schemas/MeasurementStudiesCurrencyCode"
          },
          "fundBalance": {
            "description": "The current balance of the measurement fund. Check currencyCode field for the currency in which this field is expressed.",
            "type": "number"
          }
        },
        "type": "object"
      },
      "MeasurementGenericStudy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementBaseStudy"
          },
          {
            "$ref": "#/components/schemas/MeasurementGenericStudyMetadata"
          }
        ],
        "description": "GENERIC study object.",
        "type": "object"
      },
      "MeasurementGenericStudyEligibilityData": {
        "description": "The campaign study eligibility data.",
        "properties": {
          "currentStudyId": {
            "description": "Optional current study identifier, if provided orders are expected to be added into this study and the orders already associated with this study will be excluded from certain eligibility check.",
            "type": "string"
          },
          "excludedLineItemIds": {
            "description": "A list of canonical lineItem identifiers that are excluded from the eligibility check.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "orderIds": {
            "description": "A list of canonical DSP order identifiers. By default all lineItems in those orders will be included.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "MeasurementGenericStudyEligibilityRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementStudiesBaseEligibilityRequest"
          },
          {
            "$ref": "#/components/schemas/MeasurementGenericStudyEligibilityData"
          }
        ],
        "description": "The request object of generic eligibility check.",
        "type": "object"
      },
      "MeasurementGenericStudyFile": {
        "description": "The response object for downloading generic study file.",
        "properties": {
          "fileDownloadUrl": {
            "description": "A pre-signed S3 URL which links to the generic file. The URL expires after 60 seconds. If the URL expires before the file is downloaded, a new download request must be created.",
            "type": "string"
          },
          "fileType": {
            "enum": [
              "EXCEL",
              "OTHER"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementGenericStudyMetadata": {
        "description": "The basic model for all GENERIC studies.",
        "properties": {
          "advertiserId": {
            "description": "The associated advertiser identifier. Immutable field.",
            "type": "string"
          },
          "contacts": {
            "items": {
              "$ref": "#/components/schemas/MeasurementContact"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          },
          "excludedLineItemIds": {
            "description": "A list of canonical lineItem identifiers that are excluded from the study.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "fileKey": {
            "description": "The S3 key of generic file that was uploaded using the upload API",
            "type": "string"
          },
          "orderIds": {
            "description": "A list of canonical DSP order identifiers that are associated with the study. By default all lineItems in those orders will be included.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "MeasurementGenericStudyResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementStudyResult"
          }
        ],
        "description": "The response object for downloading study results.",
        "properties": {
          "fileType": {
            "enum": [
              "JPEG",
              "OTHER",
              "PDF",
              "PNG",
              "POWERPOINT"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementGoal": {
        "description": "The measurement budget optimization goal type goal. Consider upgrading API version if enum `OTHER` is received.",
        "enum": [
          "AWARENESS",
          "CONSIDERATIONS_ON_AMAZON",
          "CONVERSIONS_OFF_AMAZON",
          "ENGAGEMENT_WITH_MY_AD",
          "MOBILE_APP_INSTALLS",
          "OTHER",
          "PURCHASES_ON_AMAZON"
        ],
        "type": "string"
      },
      "MeasurementGoalKpi": {
        "description": "The Key Performance Indicator for a MeasurementGoal.",
        "enum": [
          "COMBINED_ROAS",
          "COMPLETION_RATE",
          "CP",
          "CPA",
          "CPC",
          "CPD",
          "CPDPV",
          "CPFAO",
          "CPVC",
          "CTR",
          "DPVR",
          "IOPS",
          "NONE",
          "OTHER",
          "REACH",
          "ROAS",
          "TOTAL_CPSU",
          "TOTAL_ROAS"
        ],
        "type": "string"
      },
      "MeasurementGoalV1": {
        "description": "The measurement budget optimization goal type goal.",
        "enum": [
          "AWARENESS",
          "CONSIDERATIONS_ON_AMAZON",
          "CONVERSIONS_OFF_AMAZON",
          "ENGAGEMENT_WITH_MY_AD",
          "MOBILE_APP_INSTALLS",
          "PURCHASES_ON_AMAZON"
        ],
        "type": "string"
      },
      "MeasurementLocaleV1": {
        "description": "The measurement locale.",
        "enum": [
          "DE_DE",
          "EN_CA",
          "EN_GB",
          "EN_US",
          "ES_ES",
          "ES_MX",
          "FR_FR",
          "IT_IT",
          "PT_BR"
        ],
        "type": "string"
      },
      "MeasurementLocationLiftStudy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementBaseStudy"
          },
          {
            "$ref": "#/components/schemas/MeasurementLocationLiftStudyMetadata"
          }
        ],
        "description": "LOCATION_LIFT study object.",
        "type": "object"
      },
      "MeasurementLocationLiftStudyEligibilityData": {
        "description": "The campaign study eligibility data.",
        "properties": {
          "currentStudyId": {
            "description": "Optional current study identifier, if provided orders are expected to be added into this study and the orders already associated with this study will be excluded from certain eligibility check.",
            "type": "string"
          },
          "excludedLineItemIds": {
            "description": "A list of canonical lineItem identifiers that are excluded from the eligibility check.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "orderIds": {
            "description": "A list of canonical DSP order identifiers. By default all lineItems in those orders will be included.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "MeasurementLocationLiftStudyEligibilityRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementStudiesBaseEligibilityRequest"
          },
          {
            "$ref": "#/components/schemas/MeasurementLocationLiftStudyEligibilityData"
          }
        ],
        "description": "The request object of location lift eligibility check.",
        "type": "object"
      },
      "MeasurementLocationLiftStudyFile": {
        "description": "The response object for downloading location lift study file.",
        "properties": {
          "fileDownloadUrl": {
            "description": "A pre-signed S3 URL which links to the location list file. The URL expires after 60 seconds. If the URL expires before the file is downloaded, a new download request must be created.",
            "type": "string"
          },
          "fileType": {
            "enum": [
              "EXCEL",
              "OTHER"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementLocationLiftStudyMetadata": {
        "description": "The basic model for all LOCATION_LIFT studies.",
        "properties": {
          "advertiserId": {
            "description": "The associated advertiser identifier. Immutable field.",
            "type": "string"
          },
          "contacts": {
            "items": {
              "$ref": "#/components/schemas/MeasurementContact"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          },
          "excludedLineItemIds": {
            "description": "A list of canonical lineItem identifiers that are excluded from the study.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "locationListFileKey": {
            "description": "The S3 key of locations list file that was uploaded using the upload API",
            "type": "string"
          },
          "orderIds": {
            "description": "A list of canonical DSP order identifiers that are associated with the study. By default all lineItems in those orders will be included.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "MeasurementLocationLiftStudyResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementStudyResult"
          }
        ],
        "description": "The response object for downloading study results.",
        "properties": {
          "fileType": {
            "enum": [
              "JPEG",
              "OTHER",
              "PDF",
              "PNG",
              "POWERPOINT"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementMarketplaceV1": {
        "description": "The marketplace with corresponding rules.",
        "properties": {
          "country": {
            "$ref": "#/components/schemas/MeasurementCountryV1"
          },
          "minimumBudget": {
            "description": "The minimum budget. Expressed in dollars.",
            "format": "double",
            "type": "number"
          },
          "minimumImpressions": {
            "description": "The minimum impressions.",
            "format": "int64",
            "type": "integer"
          },
          "supportedLocales": {
            "items": {
              "$ref": "#/components/schemas/MeasurementLocaleV1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "MeasurementOmnichannelMetricsFee": {
        "description": "The response object to get fee for an Omnichannel Metrics study.",
        "properties": {
          "fee": {
            "description": "The fee rate for the Study in percent. This will be expressed as a value between 0.0000 and 1.0000 and  rounded to 4 decimal places.",
            "example": 0.04,
            "format": "double",
            "maximum": 1,
            "minimum": 0,
            "readOnly": true,
            "type": "number"
          }
        }
      },
      "MeasurementOmnichannelMetricsFeeRequest": {
        "description": "The request object to get fee for an Omnichannel Metrics study.",
        "properties": {
          "advertiserId": {
            "description": "The associated DSP advertiser identifier. Mandatory field for DSP clients.",
            "type": "string"
          },
          "studyId": {
            "description": "The canonical identifier that represents a unique study",
            "type": "string"
          }
        }
      },
      "MeasurementOmnichannelMetricsResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementStudyResult"
          }
        ],
        "description": "The response object for downloading study results.",
        "properties": {
          "fileType": {
            "enum": [
              "EXCEL"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementOmnichannelMetricsStudy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementBaseStudy"
          },
          {
            "$ref": "#/components/schemas/MeasurementOmnichannelMetricsStudyMetadata"
          }
        ],
        "description": "OMNICHANNEL_METRICS study object.",
        "type": "object"
      },
      "MeasurementOmnichannelMetricsStudyEligibilityRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementStudiesBaseEligibilityRequest"
          },
          {
            "$ref": "#/components/schemas/MeasurementStudiesOmnichannelMetricsEligibilityData"
          }
        ],
        "description": "The request object of omnichannel metrics eligibility check."
      },
      "MeasurementOmnichannelMetricsStudyMetadata": {
        "description": "The basic model for all OMNICHANNEL_METRICS objective studies.",
        "properties": {
          "advertiserId": {
            "description": "The associated advertiser identifier. Immutable field.",
            "type": "string"
          },
          "brandIds": {
            "description": "A list of canonical brand ids to be tracked for off-Amazon conversions.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "campaignIds": {
            "description": "A list of canonical Sponsored Ads campaign identifiers that are associated with the study.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "excludedLineItemIds": {
            "description": "A list of canonical lineItem identifiers that are excluded from the study.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "orderIds": {
            "description": "A list of DSP canonical order identifiers that are associated with the study. By default all lineItems in those orders will be included.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "MeasurementPartnerBrand": {
        "properties": {
          "brandFranchiseKey": {
            "description": "The brand franchise key",
            "type": "string"
          },
          "brandFranchiseName": {
            "description": "The brand franchise name",
            "type": "string"
          },
          "brandId": {
            "description": "The brand canonical Id",
            "type": "string"
          },
          "brandKey": {
            "description": "Key of the brand, recognized by the third-party vendor",
            "type": "string"
          },
          "brandName": {
            "description": "The brand name",
            "type": "string"
          },
          "categoryKey": {
            "description": "Category key of the brand",
            "type": "string"
          },
          "categoryName": {
            "description": "Category of the brand",
            "type": "string"
          },
          "manufacturerKey": {
            "description": "Brand Manufacturer key",
            "type": "string"
          },
          "manufacturerName": {
            "description": "Brand Manufacturer name",
            "type": "string"
          },
          "parentCompanyKey": {
            "description": "Brand's Company key",
            "type": "string"
          },
          "parentCompanyName": {
            "description": "Brand's Company name",
            "type": "string"
          },
          "subCategoryKey": {
            "description": "Sub-category key of the brand",
            "type": "string"
          },
          "subCategoryName": {
            "description": "Sub-category of the brand",
            "type": "string"
          },
          "version": {
            "description": "The version of the brand file",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementPartnerPaginatedBrandListRequest": {
        "properties": {
          "brands": {
            "items": {
              "$ref": "#/components/schemas/MeasurementPartnerPaginatedBrandListRequestBody"
            },
            "maxItems": 5000,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "type": "string"
          },
          "totalResults": {
            "description": "The total number of measurement partner brands.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "MeasurementPartnerPaginatedBrandListRequestBody": {
        "properties": {
          "brandId": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "MeasurementPartnerPaginatedBrandResponse": {
        "properties": {
          "brands": {
            "items": {
              "$ref": "#/components/schemas/MeasurementPartnerBrand"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "type": "string"
          },
          "totalResults": {
            "description": "The total number of matched brands.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "MeasurementPartnerPaginatedBrandSearchRequest": {
        "properties": {
          "brands": {
            "items": {
              "$ref": "#/components/schemas/MeasurementPartnerPaginatedBrandSearchRequestBody"
            },
            "maxItems": 5000,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "type": "string"
          },
          "totalResults": {
            "description": "The total number of measurement partner brands.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "MeasurementPartnerPaginatedBrandSearchRequestBody": {
        "properties": {
          "brandName": {
            "example": "brandName",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementReachAndFrequencyEligibilityData": {
        "description": "The campaign study eligibility data.",
        "properties": {
          "currentStudyId": {
            "description": "Optional current study identifier, if provided orders are expected to be added into this study and the orders already associated with this study will be excluded from certain eligibility check.",
            "type": "string"
          },
          "excludedLineItemIds": {
            "description": "A list of canonical lineItem identifiers that are excluded from the eligibility check.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "orderIds": {
            "description": "A list of canonical DSP order identifiers. By default all lineItems in those orders will be included.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "MeasurementReachAndFrequencyEligibilityRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementStudiesBaseEligibilityRequest"
          },
          {
            "$ref": "#/components/schemas/MeasurementReachAndFrequencyEligibilityData"
          }
        ],
        "description": "The request object of reach and frequency eligibility check.",
        "type": "object"
      },
      "MeasurementReachAndFrequencyMetadata": {
        "description": "The basic model for all REACH_AND_FREQUENCY studies.",
        "properties": {
          "advertiserId": {
            "description": "The associated advertiser identifier. Immutable field.",
            "type": "string"
          },
          "contacts": {
            "items": {
              "$ref": "#/components/schemas/MeasurementContact"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          },
          "excludedLineItemIds": {
            "description": "A list of canonical lineItem identifiers that are excluded from the study.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "orderIds": {
            "description": "A list of canonical DSP order identifiers that are associated with the study. By default all lineItems in those orders will be included.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "MeasurementReachAndFrequencyStudy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementBaseStudy"
          },
          {
            "$ref": "#/components/schemas/MeasurementReachAndFrequencyMetadata"
          }
        ],
        "description": "REACH_AND_FREQUENCY study object.",
        "type": "object"
      },
      "MeasurementReachAndFrequencyStudyResult": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementStudyResult"
          }
        ],
        "description": "The response object for downloading study results.",
        "properties": {
          "fileType": {
            "enum": [
              "JPEG",
              "OTHER",
              "PDF",
              "PNG",
              "POWERPOINT"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesAdType": {
        "description": "Supported ad types.",
        "enum": [
          "DSP",
          "SB",
          "SD",
          "SP"
        ],
        "readOnly": true,
        "type": "string"
      },
      "MeasurementStudiesAsset": {
        "description": "The Amazon Creative Asset Library asset identifier. Refer https://advertising.amazon.com/API/docs/en-us/creative-asset-library",
        "properties": {
          "assetId": {
            "description": "The assetId.",
            "type": "string"
          },
          "assetType": {
            "$ref": "#/components/schemas/MeasurementStudiesAssetType"
          },
          "version": {
            "description": "The version of the asset.",
            "type": "string"
          }
        }
      },
      "MeasurementStudiesAssetType": {
        "description": "The type of the Asset.",
        "enum": [
          "IMAGE",
          "VIDEO"
        ],
        "readOnly": true,
        "type": "string"
      },
      "MeasurementStudiesAudienceGroup": {
        "description": "The model for holding Audience selection within a group. The expression within an audience group will be evaluated using the IntraGroupOperator. The InterGroupOperator will be applied on the output of one audience group with another audience group.",
        "properties": {
          "audienceSegments": {
            "description": "List of audience segments in this group.",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesAudienceSegment"
            },
            "maxItems": 25,
            "minItems": 0,
            "type": "array"
          },
          "interGroupOperator": {
            "$ref": "#/components/schemas/MeasurementStudiesAudienceSelectionOperator"
          },
          "intraGroupOperator": {
            "$ref": "#/components/schemas/MeasurementStudiesAudienceSelectionOperator"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesAudienceSegment": {
        "description": "The model for holding an Audience Segment.",
        "properties": {
          "segmentId": {
            "description": "ID for the audience segment. This ID can be fetched from these APIs- https://advertising.amazon.com/API/docs/en-us/audiences/#/Discovery",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesAudienceSelectionOperator": {
        "description": "The operator used in Audience Segment Selection to determine which operation needs to be applied across selected segments. AND operator takes priority over OR operator.",
        "enum": [
          "AND",
          "OR"
        ],
        "readOnly": true,
        "type": "string"
      },
      "MeasurementStudiesAudienceTargetingGroup": {
        "description": "The model for holding Audience targeting group. The includedAudienceGroups and excludedAudienceGroups are always joined with AND operator.",
        "properties": {
          "excludedAudienceGroups": {
            "description": "List of audience groups to be excluded from the targeted audience.",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesAudienceGroup"
            },
            "maxItems": 25,
            "minItems": 0,
            "type": "array"
          },
          "includedAudienceGroups": {
            "description": "List of audience groups to be included in the targeted audience.",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesAudienceGroup"
            },
            "maxItems": 25,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesBaseEligibilityRequest": {
        "description": "The request object of measurement eligibility check.",
        "properties": {
          "advertiserId": {
            "description": "The associated advertiser identifier. Immutable field.",
            "type": "string"
          },
          "fundingTypeFilters": {
            "description": "FundingType filters to be applied when checking eligibility status. If not supplied we will check against all available vendor products.",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesFundingType"
            },
            "maxItems": 5,
            "minItems": 0,
            "type": "array"
          },
          "vendorProductIdFilters": {
            "description": "VendorProduct identifier filters to be applied when checking eligibility status. If not supplied we will check against all available vendor products.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "vendorTypeFilters": {
            "description": "VendorType filters to be applied when checking eligibility status. If not supplied we will check against all available vendor products.",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesVendorType"
            },
            "maxItems": 9,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesBenchmarkCategory": {
        "description": "The study benchmark product category. Consider upgrading API version if enum `OTHER` is received.",
        "enum": [
          "APPLIANCES",
          "APPS_AND_GAMES",
          "ARTS_CRAFTS_AND_SEWING",
          "AUTOMOTIVE",
          "BABY",
          "BEAUTY_AND_PERSONAL_CARE",
          "BEVERAGES",
          "BOOKS",
          "CELL_PHONES_AND_ACCESSORIES",
          "CLOTHING_SHOES_AND_JEWELRY",
          "COMPUTERS_AND_ACCESSORIES",
          "DIGITAL_MUSIC",
          "EDUCATION",
          "ELECTRONICS",
          "FINANCIAL_AND_INSURANCE",
          "FOOD",
          "HEALTH_AND_HOUSEHOLD",
          "HOME_AND_KITCHEN",
          "HOSPITALITY",
          "KITCHEN_AND_DINING",
          "MOVIES_AND_TV",
          "OFFICE_PRODUCTS",
          "OTHER",
          "PATIO_LAWN_AND_GARDEN",
          "PET_SUPPLIES",
          "RESTAURANTS",
          "SOFTWARE",
          "SPORTS_AND_OUTDOORS",
          "TELECOMMUNICATIONS_SERVICES",
          "TOOLS_AND_HOME_IMPROVEMENT",
          "TOYS_AND_GAMES",
          "VIDEO_GAMES"
        ],
        "type": "string"
      },
      "MeasurementStudiesBillingEntity": {
        "description": "Measurement billing entity object",
        "properties": {
          "sfBillingEntity": {
            "description": "The Salesforce billing entity",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesBrandLiftBrand": {
        "properties": {
          "brandId": {
            "example": "brandId",
            "type": "string"
          },
          "brandName": {
            "example": "brandName",
            "type": "string"
          },
          "eligible": {
            "example": "true",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesBrandLiftBrandsRequest": {
        "description": "The request object to fetch brands for measurement studies Brand Lift.",
        "properties": {
          "vendorProductId": {
            "description": "Vendor product canonical identifier to determine associated study ids.",
            "type": "string"
          }
        },
        "required": [
          "vendorProductId"
        ]
      },
      "MeasurementStudiesBrandLiftCampaign": {
        "properties": {
          "brandId": {
            "description": "Brand identifier.",
            "type": "string"
          },
          "campaignId": {
            "description": "Campaign identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesBrandLiftCampaignsRequest": {
        "description": "The request object to fetch campaigns for measurement studies.",
        "properties": {
          "advertiserId": {
            "description": "Advertiser identifier.",
            "type": "string"
          },
          "brandId": {
            "description": "Brand identifier.",
            "type": "string"
          },
          "vendorProductId": {
            "description": "Vendor product canonical identifier.",
            "type": "string"
          }
        },
        "required": [
          "advertiserId",
          "brandId",
          "vendorProductId"
        ]
      },
      "MeasurementStudiesCampaignPlanningMetadata": {
        "description": "The basic model for all CAMPAIGN_PLANNING objective studies.",
        "properties": {
          "advertiserId": {
            "description": "The associated advertiser identifier. Immutable field.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesCountry": {
        "description": "The measurement country. Consider upgrading API version if enum `OTHER` is received.",
        "enum": [
          "AE",
          "AU",
          "BR",
          "CA",
          "DE",
          "EG",
          "ES",
          "FR",
          "IN",
          "IT",
          "JP",
          "MX",
          "NL",
          "OTHER",
          "PL",
          "RU",
          "SA",
          "SE",
          "SG",
          "TR",
          "UK",
          "US"
        ],
        "type": "string"
      },
      "MeasurementStudiesCurrencyCode": {
        "description": "Currency Code. Consider upgrading API version if enum `OTHER` is received.",
        "enum": [
          "AED",
          "AUD",
          "BRL",
          "CAD",
          "EGP",
          "EUR",
          "GBP",
          "INR",
          "JPY",
          "MXN",
          "OTHER",
          "PLN",
          "SAR",
          "SEK",
          "SGD",
          "TRY",
          "USD"
        ],
        "type": "string"
      },
      "MeasurementStudiesCustomSurveyQuestion": {
        "description": "The templated measurement survey question.",
        "properties": {
          "questionText": {
            "description": "The survey question text.",
            "type": "string"
          },
          "responses": {
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionPlaceholderFieldValue"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          },
          "type": {
            "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionType"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesEligibilityField": {
        "description": "Fields that will be checked as part of eligibility API call. Consider upgrading API version if enum `OTHER` is received.",
        "enum": [
          "BUDGET",
          "BUYER_COUNT",
          "END_TIME",
          "FLIGHT_LENGTH",
          "GOAL",
          "IMPRESSIONS",
          "LEAD_TIME",
          "LOCALE",
          "ORDER",
          "OTHER",
          "START_TIME",
          "VERTICAL"
        ],
        "type": "string"
      },
      "MeasurementStudiesEligibilityIssue": {
        "description": "The list of eligibility issues.",
        "properties": {
          "code": {
            "description": "An enumerated issue code for machine use.",
            "type": "string"
          },
          "field": {
            "$ref": "#/components/schemas/MeasurementStudiesEligibilityField"
          },
          "message": {
            "description": "A human-readable description of the issue with suggestions on how to resolve the issue.",
            "type": "string"
          },
          "severity": {
            "$ref": "#/components/schemas/MeasurementStudiesEligibilityIssueSeverity"
          }
        }
      },
      "MeasurementStudiesEligibilityIssueSeverity": {
        "description": "Supported values are WARNING, ERROR. ERROR severity issues need to be resolved while WARNING severity issues can be ignored. Consider upgrading API version if enum `OTHER` is received.",
        "enum": [
          "ERROR",
          "OTHER",
          "WARNING"
        ],
        "type": "string"
      },
      "MeasurementStudiesEligibilityMetadata": {
        "description": "The eligibility metadata.",
        "properties": {
          "budget": {
            "description": "The total budget. Expressed in dollars.",
            "format": "double",
            "readOnly": true,
            "type": "number"
          },
          "endDate": {
            "description": "The latest end date of the associated orders in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          },
          "flightLength": {
            "description": "The flight length of the associated orders. Expressed in days.",
            "readOnly": true,
            "type": "integer"
          },
          "impressions": {
            "description": "The total estimated impressions.",
            "format": "int64",
            "readOnly": true,
            "type": "integer"
          },
          "startDate": {
            "description": "The earliest start date of associated orders in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "format": "date-time",
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "MeasurementStudiesEligibilityResponse": {
        "description": "The eligibility check response object.",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/MeasurementStudiesEligibilityMetadata"
          },
          "nextToken": {
            "type": "string"
          },
          "vendorProductEligibilities": {
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesVendorProductEligibility"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesEligibilityStatus": {
        "description": "Supported values are ELIGIBLE, INELIGIBLE and ELIGIBLE_WITH_WARNING. INELIGIBLE status indicates the study can not be created.",
        "enum": [
          "ELIGIBLE",
          "ELIGIBLE_WITH_WARNING",
          "INELIGIBLE",
          "REQUIRES_FURTHER_REVIEW"
        ],
        "type": "string"
      },
      "MeasurementStudiesError": {
        "description": "The error response object.",
        "properties": {
          "errors": {
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesSubError"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "message": {
            "description": "A human-readable description of the response.",
            "type": "string"
          },
          "requestId": {
            "description": "Request Id that uniquely identifies your request.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesFundingType": {
        "description": "The measurement funding type. For COMPLIMENTARY studies the cost will be covered by Amazon. Check vendor product policy for pricing info. Consider upgrading API version if enum `OTHER` is received.",
        "enum": [
          "COMPLIMENTARY",
          "CPM",
          "FLAT_RATE",
          "OTHER",
          "THIRD_PARTY_PAYMENT"
        ],
        "readOnly": true,
        "type": "string"
      },
      "MeasurementStudiesGetAvailableFundingOptionsResponse": {
        "description": "The available Salesforce billing entities",
        "properties": {
          "availableBillingOptions": {
            "description": "A list of available Salesforce billing entities for a given advertiserId and marketplace.",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesBillingEntity"
            },
            "maxItems": 50,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesGridQuestionResponses": {
        "description": "The grid question response object. Only applicable for SINGLE_SELECT_GRID type question.",
        "properties": {
          "columns": {
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionPlaceholderFieldValue"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          },
          "rows": {
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionPlaceholderFieldValue"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesLocale": {
        "description": "The measurement locale. Consider upgrading API version if enum `OTHER` is received.",
        "enum": [
          "DE_DE",
          "EN_CA",
          "EN_GB",
          "EN_US",
          "ES_ES",
          "ES_MX",
          "FR_FR",
          "IT_IT",
          "OTHER",
          "PT_BR"
        ],
        "type": "string"
      },
      "MeasurementStudiesMarketplace": {
        "description": "The marketplace with corresponding rules.",
        "properties": {
          "budgetTimeSpan": {
            "description": "The time span in days to calculate budget. Null represents total impressions for the campaigns.",
            "format": "int64",
            "type": "integer"
          },
          "country": {
            "$ref": "#/components/schemas/MeasurementStudiesCountry"
          },
          "impressionTimeSpan": {
            "description": "The time span in days to calculate impressions. Null represents total impressions for the campaigns.",
            "format": "int64",
            "type": "integer"
          },
          "minimumBudget": {
            "description": "The minimum budget. Expressed in marketplace currency.",
            "format": "double",
            "type": "number"
          },
          "minimumImpressions": {
            "description": "The minimum impressions.",
            "format": "int64",
            "type": "integer"
          },
          "supportedLocales": {
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesLocale"
            },
            "maxItems": 2,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesOmnichannelMetricsBrand": {
        "properties": {
          "brand": {
            "description": "The brand name.",
            "type": "string"
          },
          "brandId": {
            "description": "The brand canonical Id",
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "majorBrand": {
            "type": "string"
          },
          "manufacturer": {
            "type": "string"
          },
          "subcategory": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesOmnichannelMetricsBrandSearchRequest": {
        "description": "The request object to fetch brands to be used in the OMNICHANNEL_METRICS vendor product.",
        "properties": {
          "brandIdFilter": {
            "description": "List of brandIds in the omnichannel metrics brand catalog. Either one of brandIdFilter or brandNameSearch should be provided.",
            "items": {
              "type": "string"
            },
            "maxItems": 50,
            "minItems": 1,
            "type": "array"
          },
          "brandNameSearch": {
            "description": "Text to search for eligible brands in the omnichannel metrics brand catalog. Either one of brandIdFilter or brandNameSearch should be provided.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesOmnichannelMetricsEligibilityData": {
        "description": "The campaign study eligibility data.",
        "properties": {
          "brandIds": {
            "description": "A list of canonical brand identifiers.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "campaignIds": {
            "description": "A list of canonical Sponsored Ads campaign identifiers that are associated with the study.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "currentStudyId": {
            "description": "Optional current study identifier. If provided orders are expected to be added into this study and the orders already associated with this study will be excluded from certain eligibility checks.",
            "type": "string"
          },
          "excludedLineItemIds": {
            "description": "A list of canonical lineItem identifiers that are excluded from the eligibility check.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "orderIds": {
            "description": "A list of DSP canonical order identifiers. By default all lineItems in those orders will be included.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesPaginatedVendorProducts": {
        "description": "A list of measurement vendor products.",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "totalResults": {
            "description": "The total number of vendor products.",
            "format": "int32",
            "type": "integer"
          },
          "vendorProducts": {
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesVendorProduct"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesPlaceholderValueType": {
        "description": "The placeholder value type. Consider upgrading API version if enum `OTHER` is received.",
        "enum": [
          "INTEGER",
          "OTHER",
          "STRING"
        ],
        "type": "string"
      },
      "MeasurementStudiesResourceLink": {
        "description": "The link that can be used to access corresponding resources in advertising portal.",
        "properties": {
          "name": {
            "description": "The resource name.",
            "type": "string"
          },
          "url": {
            "description": "The resource url.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesSubError": {
        "description": "The sub error object.",
        "properties": {
          "errorType": {
            "type": "string"
          },
          "fieldName": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "errorType",
          "message"
        ],
        "type": "object"
      },
      "MeasurementStudiesSurvey": {
        "description": "The measurement survey.",
        "properties": {
          "customQuestions": {
            "description": "A list of custom survey questions.",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesCustomSurveyQuestion"
            },
            "maxItems": 20,
            "minItems": 1,
            "type": "array"
          },
          "marketplace": {
            "$ref": "#/components/schemas/MeasurementStudiesCountry",
            "description": "The marketplace country code to create the survey under."
          },
          "status": {
            "$ref": "#/components/schemas/MeasurementStudiesSurveyStatus"
          },
          "studyId": {
            "description": "The associated study identifier. Survey needs to be created prior to the study creation.",
            "readOnly": true,
            "type": "string"
          },
          "surveyId": {
            "description": "The survey canonical identifier. Immutable field.",
            "readOnly": true,
            "type": "string"
          },
          "templatedShortQuestions": {
            "description": "A list of templated survey short questions.",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesTemplatedSurveyShortQuestion"
            },
            "maxItems": 20,
            "minItems": 1,
            "type": "array"
          },
          "vendorProductId": {
            "description": "The vendor product canonical identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesSurveyQuestionCategory": {
        "description": "The survey question category. Consider upgrading API version if enum `OTHER` is received.",
        "enum": [
          "BRAND_KPI",
          "CUSTOM",
          "OTHER",
          "WEIGHTING"
        ],
        "readOnly": true,
        "type": "string"
      },
      "MeasurementStudiesSurveyQuestionCategoryRequirement": {
        "description": "The requirement for specific survey question category.",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionCategory"
          },
          "maximumQuestions": {
            "description": "The maximum number of questions required for the question category.",
            "type": "integer"
          },
          "minimumQuestions": {
            "description": "The minimum number of questions required for the question category.",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesSurveyQuestionGridQuestionResponse": {
        "description": "The grid question response object. Only applicable for SINGLE_SELECT_GRID type question.",
        "properties": {
          "columns": {
            "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionPlaceholderCandidate"
          },
          "rows": {
            "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionPlaceholderCandidate"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesSurveyQuestionObjectiveType": {
        "description": "The survey objective. Consider upgrading API version if enum `OTHER` is received.",
        "enum": [
          "AD_RECALL",
          "AGE",
          "AMAZON_SERVICE_USAGE",
          "ASSOCIATION",
          "ATTITUDES",
          "AWARENESS",
          "BEHAVIORS",
          "CHILDREN_IN_HOUSEHOLD",
          "CONSIDERATION",
          "EDUCATION",
          "ETHNICITY",
          "FAMILIARITY",
          "FAVORABILITY",
          "GENDER",
          "HOUSEHOLD_INCOME",
          "HOUSEHOLD_SIZE",
          "INTENT",
          "IN_MARKET_STATUS",
          "OTHER",
          "PREFERENCE",
          "PURCHASE_FREQUENCY",
          "PURCHASE_HISTORY",
          "PURCHASE_LOCATION",
          "TIME_ONLINE",
          "TV_MEDIA_CONSUMPTION",
          "UNAIDED_AWARENESS"
        ],
        "readOnly": true,
        "type": "string"
      },
      "MeasurementStudiesSurveyQuestionPlaceholder": {
        "description": "The object specifying a placeholder in Survey question.",
        "properties": {
          "fieldName": {
            "description": "The survey question placeholder field name.",
            "type": "string"
          },
          "fieldValues": {
            "description": "The survey question placeholder field values.",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionPlaceholderFieldValue"
            },
            "maxItems": 20,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesSurveyQuestionPlaceholderAllowedRange": {
        "description": "Allowed value range for placeholder.",
        "properties": {
          "maximumValue": {
            "description": "The maximum allowed value.",
            "format": "int32",
            "type": "integer"
          },
          "minimumValue": {
            "description": "The minimum allowed value.",
            "format": "int32",
            "type": "integer"
          },
          "parentField": {
            "description": "The field name that this range depends on. Will be empty if this range is the default range.",
            "type": "string"
          },
          "parentValue": {
            "description": "The field value that this range depends on. Will be empty if this range is the default range.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesSurveyQuestionPlaceholderAllowedValue": {
        "description": "Allowed value for placeholder.",
        "properties": {
          "parentField": {
            "description": "The field name that this value list depends on. Will be empty if this is the default list.",
            "type": "string"
          },
          "parentValue": {
            "description": "The field value that this value list depend on. Will be empty if this is the default list.",
            "type": "string"
          },
          "value": {
            "description": "Allowed value string..",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesSurveyQuestionPlaceholderCandidate": {
        "description": "The placeholder candidate in Survey question.",
        "properties": {
          "allowCustomValue": {
            "description": "Whether custom value is allowed for the placeholder.",
            "type": "boolean"
          },
          "allowedValueRanges": {
            "description": "Allowed value ranges for placeholder. Only applicable if the valueType is INTEGER.",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionPlaceholderAllowedRange"
            },
            "maxItems": 20,
            "minItems": 0,
            "type": "array"
          },
          "allowedValues": {
            "description": "Allowed values for placeholder. Will be empty if placeholder is free text field.",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionPlaceholderAllowedValue"
            },
            "maxItems": 20,
            "minItems": 0,
            "type": "array"
          },
          "defaultValues": {
            "description": "Default values that will be appended to the values list regardless.",
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          },
          "fieldName": {
            "description": "The survey question placeholder field name.",
            "type": "string"
          },
          "inferredFields": {
            "description": "Where the placeholder values will be inferred from.",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionPlaceholderInferredField"
            },
            "maxItems": 6,
            "minItems": 0,
            "type": "array"
          },
          "maximumValueLength": {
            "description": "The maximum allowed character length for each individual placeholder value.",
            "type": "integer"
          },
          "minimumValueLength": {
            "description": "The minimum allowed character length for each individual placeholder value.",
            "type": "integer"
          },
          "placeholderCandidateType": {
            "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionPlaceholderCandidateType"
          },
          "valueType": {
            "$ref": "#/components/schemas/MeasurementStudiesPlaceholderValueType"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesSurveyQuestionPlaceholderCandidateType": {
        "description": "The placeholder type for survey question template. Consider upgrading API version if enum `OTHER` is received.",
        "enum": [
          "ACTION",
          "BRAND_OR_PRODUCT_CATEGORY",
          "BRAND_OR_PRODUCT_NAME",
          "CATEGORY",
          "CHANNEL",
          "CHARACTERISTIC",
          "CUSTOM_STATEMENT",
          "DUMMY_PLACEHOLDER_1",
          "DUMMY_PLACEHOLDER_2",
          "OTHER",
          "PERIOD",
          "PLACEMENT_TYPE",
          "QUESTION_TEXT",
          "RESPONSE",
          "TIME",
          "VERB"
        ],
        "type": "string"
      },
      "MeasurementStudiesSurveyQuestionPlaceholderFieldValue": {
        "properties": {
          "isQualifying": {
            "description": "This is only required if the corresponding field is 'response', this will help to define if the response value will be counted as a positive one in the study report.",
            "type": "boolean"
          },
          "value": {
            "description": "The survey question placeholder field value.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesSurveyQuestionPlaceholderInferredField": {
        "description": "The inferred field for survey question placeholder candidate. Consider upgrading API version if enum `OTHER` is received.",
        "enum": [
          "OTHER",
          "STUDY_BRAND_NAME",
          "STUDY_BRAND_NAME_UNQUALIFIED",
          "STUDY_PEER_NAME",
          "STUDY_PRODUCT_CATEGORY",
          "STUDY_VERB"
        ],
        "type": "string"
      },
      "MeasurementStudiesSurveyQuestionStatus": {
        "description": "The status for survey question. Consider upgrading API version if enum `OTHER` is received.",
        "enum": [
          "ACTIVE",
          "DEPRECATED",
          "OTHER"
        ],
        "readOnly": true,
        "type": "string"
      },
      "MeasurementStudiesSurveyQuestionSubCategory": {
        "description": "The survey question sub-category. Only applicable to certain categories. Consider upgrading API version if enum `OTHER` is received.",
        "enum": [
          "BEHAVIOR",
          "DEMOGRAPHIC",
          "OTHER",
          "PURCHASE_HISTORY"
        ],
        "readOnly": true,
        "type": "string"
      },
      "MeasurementStudiesSurveyQuestionType": {
        "description": "The survey question type. SINGLE_SELECT question will allow customers to choose only one response, MULTI_SELECT question will allow customers to choose multiple responses, RATING will allow customers to choose a rating on a scale (e.g. 1 to 5), FREE_TEXT will allow customers to provide a free formed question text, SINGLE_ASSET_SELECT will allow customers to choose an asset as the response. Consider upgrading API version if enum `OTHER` is received.",
        "enum": [
          "FREE_TEXT",
          "MULTI_SELECT",
          "OTHER",
          "RATING",
          "SINGLE_ASSET_SELECT",
          "SINGLE_SELECT",
          "SINGLE_SELECT_GRID"
        ],
        "readOnly": true,
        "type": "string"
      },
      "MeasurementStudiesSurveyShortQuestionTemplate": {
        "description": "Template for short survey question for a vendor product. A short question supports 10 responses per question. For Grid based questions, maximum rows and columns can be 10 each.",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionCategory"
          },
          "gridQuestionResponse": {
            "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionGridQuestionResponse"
          },
          "locale": {
            "$ref": "#/components/schemas/MeasurementStudiesLocale"
          },
          "maximumQualifyingResponses": {
            "description": "The maximum number of qualifying responses allowed for the question. This will be available if the qualifying responses are not pre-defined/inferred.",
            "type": "integer"
          },
          "maximumQuestionResponses": {
            "description": "The maximum number of responses allowed for the question. This will be available if the question responses are not pre-defined/inferred.",
            "type": "integer"
          },
          "minimumQualifyingResponses": {
            "description": "The minimum number of qualifying responses required for the question. This will be available if the qualifying responses are not pre-defined/inferred.",
            "type": "integer"
          },
          "minimumQuestionResponses": {
            "description": "The minimum number of responses required for the question. This will be available if the question responses are not pre-defined/inferred.",
            "type": "integer"
          },
          "objectiveType": {
            "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionObjectiveType"
          },
          "placeholderCandidates": {
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionPlaceholderCandidate"
            },
            "maxItems": 15,
            "minItems": 0,
            "type": "array"
          },
          "priority": {
            "description": "The priority of the question. If present this will determine the ordering of questions in a survey. The check will be enforced when a survey is created/updated. Lower number indicates higher priority.",
            "type": "integer"
          },
          "qualifyingResponses": {
            "description": "The pre-defined qualifying survey question responses with placeholders, this will help to define which responses will be counted as positive ones in the study report.",
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          },
          "questionResponses": {
            "description": "The pre-defined survey question responses with placeholders.",
            "items": {
              "type": "string"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          },
          "questionText": {
            "description": "The survey question text with placeholders.",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionStatus"
          },
          "subCategory": {
            "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionSubCategory"
          },
          "surveyQuestionTemplateId": {
            "description": "The survey question template canonical Id.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionType"
          },
          "vendorProductId": {
            "description": "The associated vendor product id.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesSurveyStatus": {
        "description": "The survey status. Only required if the survey is in DRAFT. Created survey will be in AVAILABLE status by default and will only be in IN_USE status if it's associated with a study.",
        "enum": [
          "AVAILABLE",
          "DRAFT",
          "IN_USE"
        ],
        "type": "string"
      },
      "MeasurementStudiesTemplatedSurveyShortQuestion": {
        "description": "The templated measurement survey question.",
        "properties": {
          "gridQuestionResponse": {
            "$ref": "#/components/schemas/MeasurementStudiesGridQuestionResponses"
          },
          "placeholders": {
            "description": "List of question placeholders",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionPlaceholder"
            },
            "maxItems": 15,
            "minItems": 0,
            "type": "array"
          },
          "surveyQuestionTemplateId": {
            "description": "The survey question template canonical identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesVendorProduct": {
        "description": "The measurement vendor product.",
        "properties": {
          "adType": {
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesAdType"
            },
            "maxItems": 4,
            "minItems": 1,
            "type": "array"
          },
          "displayName": {
            "description": "The vendor product display name.",
            "readOnly": true,
            "type": "string"
          },
          "fundingType": {
            "$ref": "#/components/schemas/MeasurementStudiesFundingType"
          },
          "objective": {
            "$ref": "#/components/schemas/MeasurementStudyObjective"
          },
          "studyType": {
            "$ref": "#/components/schemas/MeasurementStudyType"
          },
          "supportedMarketplaces": {
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesMarketplace"
            },
            "maxItems": 22,
            "minItems": 0,
            "type": "array"
          },
          "vendorProductId": {
            "description": "The vendor product identifier.",
            "readOnly": true,
            "type": "string"
          },
          "vendorType": {
            "$ref": "#/components/schemas/MeasurementStudiesVendorType"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesVendorProductEligibility": {
        "description": "The measurement eligibility details for a certain vendor product.",
        "properties": {
          "issues": {
            "description": "A list of issues will be provided containing the fields causing the issue if the status is INELIGIBLE or ELIGIBLE_WITH_WARNING.",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesEligibilityIssue"
            },
            "maxItems": 11,
            "minItems": 0,
            "type": "array"
          },
          "status": {
            "$ref": "#/components/schemas/MeasurementStudiesEligibilityStatus"
          },
          "vendorProductId": {
            "description": "vendor product canonical identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesVendorProductPolicy": {
        "description": "The policy rules will be enforced at vendor product level.",
        "properties": {
          "benchMarkCategoryRequired": {
            "description": "Whether or not the benchMark category is required for measurement setup.",
            "type": "boolean"
          },
          "brandSelectorEnabled": {
            "description": "Whether the vendor product requires Brand selection.",
            "type": "boolean"
          },
          "customQuestionAllowed": {
            "description": "Whether custom survey questions are allowed.",
            "type": "boolean"
          },
          "externalReferenceIdRequired": {
            "description": "Whether or not the vendor assigned external reference identifier is required for measurement setup.",
            "type": "boolean"
          },
          "fileUploadEnabled": {
            "description": "Whether or not file upload is enabled for the product.",
            "type": "boolean"
          },
          "leadTime": {
            "description": "Days required for measurement configuration. It is recommended that the startDate of the campaign has sufficient padding to accommodate this lead time, but measurement can begin after the campaign start date in some cases.",
            "type": "integer"
          },
          "maximumOrders": {
            "description": "The maximum number of order allowed for the product.",
            "type": "integer"
          },
          "maximumPeerNames": {
            "description": "The maximum number of peer names required for the product.",
            "type": "integer"
          },
          "maximumStudyLength": {
            "description": "The maximum required length/duration of the study in days.",
            "type": "integer"
          },
          "maximumSurveyQuestions": {
            "description": "The maximum number of survey questions required for the product.",
            "type": "integer"
          },
          "minimumOrders": {
            "description": "The maximum number of orders required for the product.",
            "type": "integer"
          },
          "minimumPeerNames": {
            "description": "The minimum number of peer names required for the product.",
            "type": "integer"
          },
          "minimumStudyLength": {
            "description": "The minimum required length/duration of the study in days.",
            "type": "integer"
          },
          "minimumSurveyQuestions": {
            "description": "The minimum number of survey questions required for the product.",
            "type": "integer"
          },
          "ordersRequired": {
            "description": "Whether the vendor product requires orders.",
            "type": "boolean"
          },
          "requiredQuestionCategories": {
            "description": "The requirements for survey question categories.",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionCategoryRequirement"
            },
            "maxItems": 4,
            "minItems": 0,
            "type": "array"
          },
          "requiredQuestionObjectives": {
            "description": "The required question objectives that need to be included as part of the survey.",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionObjectiveType"
            },
            "maxItems": 24,
            "minItems": 0,
            "type": "array"
          },
          "studyFields": {
            "description": "Configurations for study fields for the product.",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/SingleSelectStudyField"
                },
                {
                  "$ref": "#/components/schemas/MultiSelectStudyField"
                },
                {
                  "$ref": "#/components/schemas/RangeSelectStudyField"
                },
                {
                  "$ref": "#/components/schemas/NumberStudyField"
                },
                {
                  "$ref": "#/components/schemas/NumberRangeStudyField"
                },
                {
                  "$ref": "#/components/schemas/HelpTextStudyField"
                },
                {
                  "$ref": "#/components/schemas/FreeTextStudyField"
                },
                {
                  "$ref": "#/components/schemas/BooleanStudyField"
                }
              ]
            },
            "type": "array"
          },
          "supportedGoals": {
            "items": {
              "$ref": "#/components/schemas/MeasurementGoal"
            },
            "maxItems": 7,
            "minItems": 0,
            "type": "array"
          },
          "supportedMarketplaces": {
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesMarketplace"
            },
            "maxItems": 22,
            "minItems": 0,
            "type": "array"
          },
          "supportedVerbs": {
            "description": "List of top 100 supported verbs that can be used in survey questions.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "vendorApprovalRequired": {
            "description": "Whether or not the vendor requires an additional sign off process to fully qualify for study.",
            "type": "boolean"
          },
          "vendorProductId": {
            "description": "vendor product canonical identifier.",
            "type": "string"
          },
          "verbRequired": {
            "description": "Whether or not a verb is required for measurement setup. It will be used in applicable survey questions to construct the question text.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesVendorProductRecommendation": {
        "description": "The vendor product recommendation object with elgibility status.",
        "properties": {
          "issues": {
            "description": "A list of issues will be provided containing the fields causing the issue if the status is INELIGIBLE or ELIGIBLE_WITH_WARNING.",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesEligibilityIssue"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          },
          "rank": {
            "description": "The lower the number, the more recommended the vendor product is.",
            "type": "number"
          },
          "status": {
            "$ref": "#/components/schemas/MeasurementStudiesEligibilityStatus"
          },
          "vendorProductId": {
            "description": "Vendor product canonical identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesVendorProductRecommendationsMetadata": {
        "description": "The recommendations metadata.",
        "properties": {
          "advertiserId": {
            "description": "The advertiserId.",
            "type": "string"
          },
          "locale": {
            "$ref": "#/components/schemas/MeasurementStudiesLocale"
          },
          "orderMetadata": {
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesVendorProductRecommendationsOrderMetadata"
            },
            "maxItems": 7,
            "minItems": 0,
            "type": "array"
          },
          "studyTypeFilters": {
            "description": "StudyType identifier filters to be applied when fecthing recommendations. If not supplied we will check for all available vendor products.",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudyType"
            },
            "maxItems": 5,
            "minItems": 0,
            "type": "array"
          },
          "vertical": {
            "$ref": "#/components/schemas/MeasurementVertical"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesVendorProductRecommendationsOrderMetadata": {
        "description": "Metadata around a hypothetical order.",
        "properties": {
          "budget": {
            "description": "The total estimated budget of the order.",
            "format": "double",
            "type": "number"
          },
          "endDate": {
            "description": "The estimated end date of the order in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "format": "date-time",
            "type": "string"
          },
          "goal": {
            "$ref": "#/components/schemas/MeasurementGoal"
          },
          "goalKpi": {
            "$ref": "#/components/schemas/MeasurementGoalKpi"
          },
          "impressions": {
            "description": "The total estimated impressions of the order.",
            "format": "int64",
            "type": "integer"
          },
          "startDate": {
            "description": "The estimated start date of the order in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesVendorProductRecommendationsRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementStudiesBaseEligibilityRequest"
          },
          {
            "$ref": "#/components/schemas/MeasurementStudiesVendorProductRecommendationsMetadata"
          }
        ],
        "description": "The request object to get recommendations.",
        "type": "object"
      },
      "MeasurementStudiesVendorProductRequest": {
        "description": "The request object to fetch measurement vendor products.",
        "properties": {
          "adTypeFilters": {
            "description": "AdType filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesAdType"
            },
            "maxItems": 4,
            "minItems": 0,
            "type": "array"
          },
          "fundingTypeFilters": {
            "description": "FundingType filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesFundingType"
            },
            "maxItems": 5,
            "minItems": 0,
            "type": "array"
          },
          "marketplaceFilter": {
            "$ref": "#/components/schemas/MeasurementStudiesCountry",
            "description": "The marketplace country code to filter vendor products with."
          },
          "objectiveTypeFilters": {
            "description": "StudyObjective filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudyObjective"
            },
            "maxItems": 3,
            "minItems": 0,
            "type": "array"
          },
          "studyTypeFilters": {
            "description": "StudyType filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudyType"
            },
            "maxItems": 5,
            "minItems": 0,
            "type": "array"
          },
          "vendorProductIdFilters": {
            "description": "VendorProduct identifier filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "vendorTypeFilters": {
            "description": "VendorType filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesVendorType"
            },
            "maxItems": 8,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "MeasurementStudiesVendorType": {
        "description": "The measurement vendor name, each study type will have different supported vendors. Consider upgrading API version if enum `OTHER` is received.",
        "enum": [
          "AMAZON",
          "DYNATA",
          "FOURSQUARE",
          "INMARKET",
          "ISPOT",
          "KANTAR",
          "LUCID",
          "MACROMILL",
          "NIELSEN",
          "OMNICHANNEL_METRICS",
          "OTHER",
          "UPWAVE",
          "VIDEOAMP"
        ],
        "readOnly": true,
        "type": "string"
      },
      "MeasurementStudyObjective": {
        "description": "Measurement category based on the purpose of the measurement. Consider upgrading API version if enum `OTHER` is received.",
        "enum": [
          "CAMPAIGN_MEASUREMENT",
          "CAMPAIGN_PLANNING",
          "OTHER"
        ],
        "type": "string"
      },
      "MeasurementStudyResult": {
        "description": "The response object for downloading study results.",
        "properties": {
          "fileDownloadUrl": {
            "description": "A pre-signed S3 URL which links to the curated study results file. The URL expires after 60 seconds. If the URL expires before the curated results file is downloaded, a new download request must be created.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementStudyResultStatus": {
        "description": "The status of the result of the study. Consider upgrading API version if enum `OTHER` is received.",
        "enum": [
          "AVAILABLE",
          "OTHER"
        ],
        "readOnly": true,
        "type": "string"
      },
      "MeasurementStudyStatus": {
        "description": "The study status. Only required if study is in DRAFT as part of study creation/update. Consider upgrading API version if enum `OTHER` is received.",
        "enum": [
          "APPROVED",
          "CANCELLED",
          "DRAFT",
          "ENDED",
          "INFEASIBLE",
          "OTHER",
          "PENDING",
          "REJECTED",
          "RUNNING"
        ],
        "type": "string"
      },
      "MeasurementStudyStatusReason": {
        "description": "Measurement study status reason.",
        "properties": {
          "measurementStudyStatusReasonType": {
            "$ref": "#/components/schemas/MeasurementStudyStatusReasonType"
          },
          "statusReasonDescription": {
            "description": "Human readable description of status reason.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementStudyStatusReasonType": {
        "description": "Measurement study reason type. Consider upgrading API version if enum OTHER is received.",
        "enum": [
          "ADD_ORDERS_TO_INCREASE_IMPRESSIONS",
          "CAPITALIZE_THE_FIRST_LETTER_OF_ALL_CUSTOM_ATTRIBUTES",
          "CAPITALIZE_THE_FIRST_LETTER_OF_PROPER_NOUNS",
          "CAPITALIZE_THE_FIRST_LETTER_OF_PROPER_NOUNS_LIKE_COUNTRY_NAMES",
          "INELIGIBLE_REASON_2_PLUS_COMPLIMENTARY_STUDIES",
          "INELIGIBLE_REASON_ADD_ORDERS",
          "INELIGIBLE_REASON_COMBINE_REQUESTS",
          "INELIGIBLE_REASON_FLIGHT_LENGTH_TOO_LONG",
          "INELIGIBLE_REASON_FLIGHT_LENGTH_TOO_SHORT",
          "INELIGIBLE_REASON_FUNDING_NOT_APPROVED",
          "INELIGIBLE_REASON_NOT_ENOUGH_IMPRESSIONS",
          "INELIGIBLE_REASON_ONE_ACTIVE_STUDY",
          "INELIGIBLE_REASON_ORDER_LAUNCHED",
          "INELIGIBLE_REASON_ORDER_LIVE_TOO_LONG",
          "INELIGIBLE_REASON_POLITICAL_CONTENT",
          "INELIGIBLE_REASON_REMOVE_DEROGATORY_LANGUAGE",
          "INELIGIBLE_REASON_REMOVE_OFFENSIVE_ACRONYMS",
          "INELIGIBLE_REASON_REMOVE_OFFENSIVE_PRESENTATION",
          "INELIGIBLE_REASON_REMOVE_OFFENSIVE_WORDS_DISGUISED",
          "INELIGIBLE_REASON_REMOVE_VULGAR_WORDS",
          "INELIGIBLE_REASON_UNDER_LEAD_TIME_REQUIREMENT",
          "INFEASIBLE_NOT_ENOUGH_IMPRESSIONS",
          "MAKE_BRAND_OR_PRODUCT_CATEGORY_PLURAL",
          "ONLY_ONE_ACTIVE_STUDY_IS_ALLOWED_PER_BRAND_OR_PRODUCT",
          "OTHER",
          "REMOVE_ALLCAPITALIZED_WORDS_EXCEPT_FOR_ACRONYMS",
          "REMOVE_DEROGATORY_LANGUAGE",
          "REMOVE_DUPLICATE_INPUTS",
          "REMOVE_ELLIPSES",
          "REMOVE_EXTRA_HYPHENS",
          "REMOVE_EXTRA_PUNCTUATION",
          "REMOVE_EXTRA_SPACES_BETWEEN_BEFORE_OR_AFTER_WORDS",
          "REMOVE_HYPHENS_SEPARATING_SINGLE_WORDS",
          "REMOVE_IRRELEVANT_WORDS",
          "REMOVE_NONENGLISH_WORDS",
          "REMOVE_OFFENSIVE_ACRONYMS_AND_ABBREVIATIONS",
          "REMOVE_OFFENSIVE_WORDS_OR_TERMS_DISGUISED_AS_NONOFFENSIVE_TERMS",
          "REMOVE_PUNCTATION_COMBINATIONS",
          "REMOVE_PUNCTUATION_AT_THE_END_OF_WORDS",
          "REMOVE_REDUNDANT_ANSWER_CHOICES",
          "REMOVE_SPACES_BETWEEN_LETTERS",
          "REMOVE_SPECIAL_CHARACTERS_AND_SYMBOLS",
          "REMOVE_TERMS_PRESENTED_IN_A_WAY_IN_WHICH_THEIR_TRUE_MEANING_IS_CLEARLY_OFFENSIVE",
          "REMOVE_TYPOS",
          "REMOVE_UNCLEAR_OR_OBFUSCATED_OFFENSIVE_LANGUAGE",
          "REMOVE_VULGAR_AND_PROFANE_WORDS",
          "RESOLVE_IMPROPERLY_CAPITALIZED_BRAND_OR_PRODUCT_CATEGORY",
          "RESOLVE_IMPROPERLY_CAPITALIZED_CUSTOM_INPUTS",
          "RESOLVE_IMPROPERLY_PLURALIZED_CUSTOM_INPUTS",
          "RESOLVE_INAPPROPRIATELY_CAPITALIZED_WORDS",
          "RESOLVE_INCORRECT_POSSESSIVE_NOUNS",
          "RESOLVE_INCORRECT_TENSES",
          "RESOLVE_NEGATIVE_QUESTIONS_AND_ANSWERS_ABOUT_PEERS",
          "RESOLVE_SUBJECT_VERB_DISAGREEMENT",
          "RESOLVE_UNCLEAR_BRAND_OR_PRODUCT_CATEGORY",
          "RESOLVE_UNCLEAR_BRAND_OR_PRODUCT_NAME",
          "RESOLVE_UNCLEAR_CUSTOM_INPUTS",
          "RESOLVE_UNCLEAR_PEERS",
          "SURVEYS_WITH_POLITICAL_CONTENT_ARE_NOT_ALLOWED"
        ],
        "type": "string"
      },
      "MeasurementStudySubmissionType": {
        "description": "The submission type for the creation and updating of studies. Currently, this submission type is supported for brand lift, reach and frequency, location lift and generic studies only.  This is an optional parameter in each of the request objects and its default value is `SUBMISSION` if not provided. A value of `SUBMISSION` indicates that a study should be submitted for approval. A value of `DRAFT` indicates that a study should be saved but not submitted.",
        "enum": [
          "DRAFT",
          "SUBMISSION"
        ],
        "type": "string",
        "writeOnly": true
      },
      "MeasurementStudyTag": {
        "description": "Measurement study tag. Consider upgrading API version if enum OTHER is received.",
        "enum": [
          "ALEXA",
          "ALWAYS_ON_CAMPAIGN",
          "FREEVEE",
          "OTHER",
          "PRIME_VIDEO",
          "SPANISH_LANGUAGE_CONTENT",
          "TWITCH"
        ],
        "type": "string"
      },
      "MeasurementStudyType": {
        "description": "The study type. Consider upgrading API version if enum `OTHER` is received.",
        "enum": [
          "AUDIENCE_RESEARCH",
          "BRAND_LIFT",
          "CREATIVE_TESTING",
          "GENERIC",
          "LOCATION_LIFT",
          "OMNICHANNEL_METRICS",
          "OTHER",
          "REACH_AND_FREQUENCY"
        ],
        "readOnly": true,
        "type": "string"
      },
      "MeasurementUploadOperationType": {
        "description": "The supported operation types for file upload.",
        "enum": [
          "LOCATION_FILE"
        ],
        "type": "string"
      },
      "MeasurementVertical": {
        "description": "The advertising vertical or industry specifier.",
        "enum": [
          "AMS_CLOTHING",
          "AMS_ELECTRONICS",
          "AMS_GROCERY",
          "AMS_HEALTH_AND_BEAUTY",
          "AMS_HOME_AND_GARDEN",
          "AMS_KEYWORD",
          "AMS_MOVIES_AND_TV",
          "AMS_MUSIC",
          "AMS_SELF_SERVICE",
          "AMS_SPORTS_AND_OUTDOORS",
          "AUTOMOTIVE",
          "AUTOMOTIVE_ACCESSORIES",
          "AUTOMOTIVE_MANUFACTURERS",
          "CONSUMER_GOODS",
          "CONSUMER_GOODS_APPAREL_JEWELRY",
          "CONSUMER_GOODS_FOOD_BEVERAGE",
          "CONSUMER_GOODS_HOME_GARDEN",
          "CONSUMER_GOODS_PERSONAL_CARE",
          "CONSUMER_GOODS_TOY_HOBBY",
          "ECOMMERCE",
          "ECOMMERCE_BOOKS_MOVIES_MUSIC",
          "ECOMMERCE_FLOWERS_GIFTS",
          "ECOMMERCE_GROCERY",
          "ECOMMERCE_MISC_SERVICES",
          "ENTERTAINMENT",
          "ENTERTAINMENT_MOVIES",
          "ENTERTAINMENT_MOVIE_THEATRES",
          "ENTERTAINMENT_PERFORMING_ARTS",
          "ENTERTAINMENT_RECORDING_STUDIOS",
          "ENTERTAINMENT_RESTAURANTS",
          "ENTERTAINMENT_TELEVISION",
          "FINANCIAL_SERVICES",
          "FINANCIAL_SERVICES_BANK_ACCOUNTS",
          "FINANCIAL_SERVICES_CONSUMER_CREDIT",
          "FINANCIAL_SERVICES_INSURANCE",
          "FINANCIAL_SERVICES_INVESTMENT",
          "HARDWARE_ELECTRONICS",
          "HARDWARE_ELECTRONICS_ACCESSORIES_PERIPHERALS",
          "HARDWARE_ELECTRONICS_AUDIO_EQUIPMENT",
          "HARDWARE_ELECTRONICS_CAMERAS_CAMCORDERS",
          "HARDWARE_ELECTRONICS_DESKTOPS",
          "HARDWARE_ELECTRONICS_GAME_CONSOLES_ACCESSORIES",
          "HARDWARE_ELECTRONICS_LAPTOPS_PORTABLES",
          "HARDWARE_ELECTRONICS_MEMORY_PROCESSORS",
          "HARDWARE_ELECTRONICS_PDAS_HANDHELDS",
          "HARDWARE_ELECTRONICS_VIDEO_EQUIPMENT",
          "HEALTH",
          "HEALTH_PHARMACEUTICALS",
          "HEALTH_WEIGHT_LOS",
          "HOUSE_ADS",
          "OTHER",
          "PUBLIC_SERVICES",
          "PUBLIC_SERVICES_EDUCATION",
          "PUBLIC_SERVICES_GOVERNMENT",
          "PUBLIC_SERVICES_NONPROFIT",
          "REMNANT_NETWORKS",
          "RETAIL_GOODS_SERVICES",
          "SOFTWARE",
          "SOFTWARE_ACCOUNTING_FINANCE",
          "SOFTWARE_GAMES",
          "SOFTWARE_GRAPHICS",
          "TELECOMMUNICATIONS",
          "TELECOMMUNICATIONS_ISP_BROADBAND",
          "TELECOMMUNICATIONS_LOCAL_LONG_DISTANCE",
          "TELECOMMUNICATIONS_WIRELESS_SERVICE",
          "TRAVEL",
          "TRAVEL_AIRLINE",
          "TRAVEL_BOOKING_SERVICES",
          "TRAVEL_LODGING",
          "WEB_MEDIA",
          "WEB_MEDIA_AUTOMOTIVE",
          "WEB_MEDIA_COMPUTING_TECHNOLOGY",
          "WEB_MEDIA_FAMILY",
          "WEB_MEDIA_PERSONALS"
        ],
        "type": "string"
      },
      "MultiSelectStudyField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StudyField"
          },
          {
            "properties": {
              "defaultSelectedCodes": {
                "description": "List of options that are selected by default.",
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              "fieldType": {
                "default": "MULTI_SELECT",
                "enum": [
                  "MULTI_SELECT"
                ],
                "type": "string"
              },
              "options": {
                "description": "List of options to select. Multiple selections allowed.",
                "items": {
                  "$ref": "#/components/schemas/SingleSelectValue"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ],
        "description": "Study field model with multiple selection options.",
        "type": "object"
      },
      "NumberRangeStudyField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StudyField"
          },
          {
            "properties": {
              "defaultSelectedRange": {
                "$ref": "#/components/schemas/RangeFieldDefaultValue"
              },
              "fieldType": {
                "default": "NUMBER_RANGE",
                "enum": [
                  "NUMBER_RANGE"
                ],
                "type": "string"
              },
              "max": {
                "description": "The maximum value of the range.",
                "type": "integer"
              },
              "min": {
                "description": "The minimum value of the range.",
                "type": "integer"
              }
            },
            "type": "object"
          }
        ],
        "description": "Represents a number range study field."
      },
      "NumberStudyField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StudyField"
          },
          {
            "properties": {
              "defaultValue": {
                "description": "The default value for this numeric field.",
                "type": "integer"
              },
              "fieldType": {
                "default": "NUMBER",
                "enum": [
                  "NUMBER"
                ],
                "type": "string"
              }
            },
            "type": "object"
          }
        ],
        "description": "Represents a numeric study field."
      },
      "OmnichannelMetricsBrandSearchRequestV1M2": {
        "description": "The request object to fetch brands to be used in the OMNICHANNEL_METRICS vendor product.",
        "properties": {
          "brandIdFilter": {
            "description": "List of brandIds in the omnichannel metrics brand catalog. Either one of brandIdFilter or brandNameSearch should be provided.",
            "items": {
              "type": "string"
            },
            "maxItems": 50,
            "minItems": 1,
            "type": "array"
          },
          "brandNameSearch": {
            "description": "Text to search for eligible brands in the omnichannel metrics brand catalog. Either one of brandIdFilter or brandNameSearch should be provided.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "OmnichannelMetricsBrandV1M2": {
        "properties": {
          "brand": {
            "description": "The brand name.",
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "id": {
            "description": "The brand canonical Id",
            "type": "string"
          },
          "majorBrand": {
            "type": "string"
          },
          "manufacturer": {
            "type": "string"
          },
          "subcategory": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaginatedBaseStudiesV1": {
        "description": "A list of studies.",
        "properties": {
          "measurements": {
            "items": {
              "$ref": "#/components/schemas/BaseStudyV1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaginatedBaseStudiesV1M1": {
        "description": "A list of studies.",
        "properties": {
          "measurements": {
            "items": {
              "$ref": "#/components/schemas/BaseStudyV1M1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaginatedDSPAudienceResearchStudiesV1M2": {
        "description": "A list of audience research studies.",
        "properties": {
          "measurements": {
            "items": {
              "$ref": "#/components/schemas/DSPAudienceResearchStudyV1M2"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaginatedDSPBrandLiftStudiesV1": {
        "description": "A list of studies.",
        "properties": {
          "measurements": {
            "items": {
              "$ref": "#/components/schemas/DSPBrandLiftStudyV1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaginatedDSPBrandLiftStudiesV1M1": {
        "description": "A list of studies.",
        "properties": {
          "measurements": {
            "items": {
              "$ref": "#/components/schemas/DSPBrandLiftStudyV1M1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaginatedDSPCreativeTestingStudiesV1M2": {
        "description": "A list of creative testing studies.",
        "properties": {
          "measurements": {
            "items": {
              "$ref": "#/components/schemas/DSPCreativeTestingStudyV1M2"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaginatedDSPOmnichannelMetricsStudiesV1M2": {
        "description": "A list of studies.",
        "properties": {
          "measurements": {
            "items": {
              "$ref": "#/components/schemas/DSPOmnichannelMetricsStudyV1M2"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaginatedDSPOmnichannelMetricsStudiesV1M3": {
        "description": "A list of studies.",
        "properties": {
          "measurements": {
            "items": {
              "$ref": "#/components/schemas/DSPOmnichannelMetricsStudyV1M3"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaginatedMeasurementAudienceResearchStudies": {
        "description": "A list of audience research studies.",
        "properties": {
          "measurements": {
            "items": {
              "$ref": "#/components/schemas/MeasurementAudienceResearchStudy"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaginatedMeasurementBaseStudies": {
        "description": "A list of studies.",
        "properties": {
          "measurements": {
            "items": {
              "$ref": "#/components/schemas/MeasurementBaseStudy"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaginatedMeasurementBrandLiftStudies": {
        "description": "A list of Brand Lift studies.",
        "properties": {
          "measurements": {
            "items": {
              "$ref": "#/components/schemas/MeasurementBrandLiftStudy"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaginatedMeasurementCreativeTestingStudies": {
        "description": "A list of creative testing studies.",
        "properties": {
          "measurements": {
            "items": {
              "$ref": "#/components/schemas/MeasurementCreativeTestingStudy"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaginatedMeasurementGenericStudies": {
        "description": "A list of Generic studies.",
        "properties": {
          "measurements": {
            "items": {
              "$ref": "#/components/schemas/MeasurementGenericStudy"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaginatedMeasurementLocationLiftStudies": {
        "description": "A list of Location Lift studies.",
        "properties": {
          "measurements": {
            "items": {
              "$ref": "#/components/schemas/MeasurementLocationLiftStudy"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaginatedMeasurementOmnichannelMetricsStudies": {
        "description": "A list of studies.",
        "properties": {
          "measurements": {
            "items": {
              "$ref": "#/components/schemas/MeasurementOmnichannelMetricsStudy"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaginatedMeasurementReachAndFrequencyStudies": {
        "description": "A list of Reach and Frequency studies.",
        "properties": {
          "measurements": {
            "items": {
              "$ref": "#/components/schemas/MeasurementReachAndFrequencyStudy"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "PaginatedMeasurementStudiesBrandLiftBrands": {
        "properties": {
          "brands": {
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesBrandLiftBrand"
            },
            "maxItems": 5000,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "type": "string"
          },
          "totalResults": {
            "description": "The total number of brands.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PaginatedMeasurementStudiesBrandLiftCampaigns": {
        "properties": {
          "campaigns": {
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesBrandLiftCampaign"
            },
            "maxItems": 5000,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "description": "Token for the next request. Use in conjunction with the maxResults parameter to control pagination of the returned arrays.",
            "type": "string"
          },
          "totalResults": {
            "description": "The total number of campaigns.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PaginatedMeasurementStudiesOmnichannelMetricsBrands": {
        "properties": {
          "brands": {
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesOmnichannelMetricsBrand"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "type": "string"
          },
          "totalResults": {
            "description": "The total number of matched brands.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PaginatedMeasurementStudiesSurveyQuestionTemplates": {
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "surveyQuestionTemplates": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/MeasurementStudiesSurveyShortQuestionTemplate"
                }
              ]
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "totalResults": {
            "description": "The total number of templates.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PaginatedMeasurementStudiesSurveys": {
        "description": "A list of study surveys.",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "surveys": {
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesSurvey"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "PaginatedMeasurementStudiesVendorProductPolicies": {
        "description": "A list of measurement vendor products policies.",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "policies": {
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesVendorProductPolicy"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "totalResults": {
            "description": "The total number of vendor products.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PaginatedMeasurementStudiesVendorProductRecommendationsResponse": {
        "description": "The vendor product recommendations response object.",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/MeasurementStudiesEligibilityMetadata"
          },
          "nextToken": {
            "type": "string"
          },
          "recommendations": {
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesVendorProductRecommendation"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "PaginatedOmnichannelMetricsBrandsV1M2": {
        "properties": {
          "brands": {
            "items": {
              "$ref": "#/components/schemas/OmnichannelMetricsBrandV1M2"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "type": "string"
          },
          "totalResults": {
            "description": "The total number of matched brands.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PaginatedSurveyQuestionTemplatesV1": {
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "surveyQuestionTemplates": {
            "items": {
              "$ref": "#/components/schemas/SurveyQuestionTemplateV1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "totalResults": {
            "description": "The total number of templates.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PaginatedSurveyQuestionTemplatesV1M1": {
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "surveyQuestionTemplates": {
            "items": {
              "$ref": "#/components/schemas/SurveyQuestionTemplateV1M1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "totalResults": {
            "description": "The total number of templates.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PaginatedSurveysV1": {
        "description": "A list of study surveys.",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "surveys": {
            "items": {
              "$ref": "#/components/schemas/SurveyV1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "PaginatedSurveysV1M1": {
        "description": "A list of study surveys.",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "surveys": {
            "items": {
              "$ref": "#/components/schemas/SurveyV1M1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "PaginatedVendorProductPoliciesV1": {
        "description": "A list of measurement vendor products policies.",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "policies": {
            "items": {
              "$ref": "#/components/schemas/VendorProductPolicyV1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "totalResults": {
            "description": "The total number of vendor products.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PaginatedVendorProductPoliciesV1M1": {
        "description": "A list of measurement vendor products policies.",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "policies": {
            "items": {
              "$ref": "#/components/schemas/VendorProductPolicyV1M1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "totalResults": {
            "description": "The total number of vendor products.",
            "format": "int32",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PaginatedVendorProductsV1": {
        "description": "A list of measurement vendor products.",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "totalResults": {
            "description": "The total number of vendor products.",
            "format": "int32",
            "type": "integer"
          },
          "vendorProducts": {
            "items": {
              "$ref": "#/components/schemas/VendorProductV1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "PaginatedVendorProductsV1M1": {
        "description": "A list of measurement vendor products.",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "totalResults": {
            "description": "The total number of vendor products.",
            "format": "int32",
            "type": "integer"
          },
          "vendorProducts": {
            "items": {
              "$ref": "#/components/schemas/VendorProductV1M1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "PlaceholderValueTypeV1": {
        "description": "The placeholder value type.",
        "enum": [
          "INTEGER",
          "STRING"
        ],
        "type": "string"
      },
      "PlanningEligibilityDataV1M3": {
        "description": "The planning eligibility data.",
        "properties": {
          "advertiserId": {
            "description": "The advertiserId.",
            "type": "string"
          },
          "locale": {
            "$ref": "#/components/schemas/MeasurementLocaleV1"
          },
          "orderMetadata": {
            "items": {
              "$ref": "#/components/schemas/PlanningOrderMetadataV1M3"
            },
            "type": "array"
          },
          "studyTypeFilters": {
            "description": "StudyType identifier filters to be applied when checking eligibility status. If not supplied we will check against all available vendor products.",
            "items": {
              "$ref": "#/components/schemas/StudyTypeV1M2"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "PlanningEligibilityRequestV1M3": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEligibilityRequestV1M2"
          },
          {
            "$ref": "#/components/schemas/PlanningEligibilityDataV1M3"
          }
        ],
        "description": "The request object of planning eligibility check.",
        "type": "object"
      },
      "PlanningEligibilityResponseV1M3": {
        "description": "The planning eligibility response object.",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/EligibilityMetadataV1"
          },
          "nextToken": {
            "type": "string"
          },
          "vendorProductEligibilities": {
            "items": {
              "$ref": "#/components/schemas/PlanningEligibilityV1M3"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "PlanningEligibilityV1M3": {
        "description": "The request object of measurement eligibility check.",
        "properties": {
          "issues": {
            "description": "A list of issues will be provided if the status is INELIGIBLE or ELIGIBLE_WITH_WARNING.",
            "items": {
              "$ref": "#/components/schemas/EligibilityIssueV1M2"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "rank": {
            "description": "The lower the number, the more recommended the vendor product is.",
            "type": "number"
          },
          "status": {
            "$ref": "#/components/schemas/EligibilityStatusV1"
          },
          "vendorProductId": {
            "description": "Vendor product canonical identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "PlanningOrderMetadataV1M3": {
        "description": "Metadata around a hypothetical order.",
        "properties": {
          "budget": {
            "description": "The total estimated budget of the order.",
            "format": "double",
            "type": "number"
          },
          "endDate": {
            "description": "The estimated end date of the order in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "format": "date-time",
            "type": "string"
          },
          "goal": {
            "$ref": "#/components/schemas/MeasurementGoalV1"
          },
          "impressions": {
            "description": "The total estimated impressions of the order.",
            "format": "int64",
            "type": "integer"
          },
          "startDate": {
            "description": "The estimated start date of the order in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "RangeFieldDefaultValue": {
        "description": "Represents the default selected range values for a range field.",
        "properties": {
          "defaultLeft": {
            "description": "The default lower bound value of the selected range.",
            "type": "integer"
          },
          "defaultRight": {
            "description": "The default upper bound value of the selected range.",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "RangeSelectStudyField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StudyField"
          },
          {
            "properties": {
              "defaultSelectedRange": {
                "$ref": "#/components/schemas/RangeFieldDefaultValue"
              },
              "fieldType": {
                "default": "RANGE_SELECT",
                "enum": [
                  "RANGE_SELECT"
                ],
                "type": "string"
              },
              "options": {
                "description": "List of options to select.",
                "items": {
                  "$ref": "#/components/schemas/SingleSelectValue"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ],
        "description": "Study field to select a range.",
        "type": "object"
      },
      "ResourceLinkV1M1": {
        "description": "The link that can be used to access corresponding resources in advertising portal.",
        "properties": {
          "name": {
            "description": "The resource name.",
            "type": "string"
          },
          "url": {
            "description": "The resource url.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SingleSelectStudyField": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StudyField"
          },
          {
            "properties": {
              "defaultSelectedCode": {
                "description": "Option that is selected by default",
                "type": "integer"
              },
              "fieldType": {
                "default": "SINGLE_SELECT",
                "enum": [
                  "SINGLE_SELECT"
                ],
                "type": "string"
              },
              "options": {
                "description": "List of options to select. Only one selection allowed.",
                "items": {
                  "$ref": "#/components/schemas/SingleSelectValue"
                },
                "type": "array"
              }
            },
            "type": "object"
          }
        ],
        "description": "Study field model with one selection option."
      },
      "SingleSelectValue": {
        "description": "Represents a selectable value in a study field.",
        "properties": {
          "code": {
            "description": "The numeric identifier for this selectable value.",
            "type": "integer"
          },
          "label": {
            "description": "The human-readable text label for this selectable value.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "StudyField": {
        "description": "The basic model that all Study Fields to inherit.",
        "properties": {
          "fieldCode": {
            "description": "Represents code of the field.",
            "type": "string"
          },
          "fieldName": {
            "description": "Represents name of the field.",
            "type": "string"
          },
          "fieldType": {
            "description": "Identifier for specific study type.",
            "enum": [
              "BOOLEAN",
              "FREE_TEXT",
              "HELP_TEXT",
              "MULTI_SELECT",
              "NUMBER",
              "NUMBER_RANGE",
              "RANGE_SELECT",
              "SINGLE_SELECT"
            ],
            "type": "string"
          },
          "helpText": {
            "description": "Represents help text displayed for the field.",
            "type": "string"
          },
          "isRequired": {
            "description": "Whether or not this study field is required.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "StudyObjectiveV1": {
        "description": "Measurement category based on the purpose of the measurement.",
        "enum": [
          "CAMPAIGN_MEASUREMENT",
          "CAMPAIGN_PLANNING"
        ],
        "type": "string"
      },
      "StudyResponseV1": {
        "description": "Study response.",
        "properties": {
          "code": {
            "description": "An enumerated success or error code for machine use.",
            "type": "string"
          },
          "errors": {
            "items": {
              "$ref": "#/components/schemas/SubErrorV1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "index": {
            "description": "The index of the object in the request, starting from 1.",
            "format": "int32",
            "type": "integer"
          },
          "message": {
            "description": "A human-readable message of the code.",
            "type": "string"
          },
          "studyId": {
            "description": "The study canonical identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "StudyResponsesV1": {
        "description": "Studies response.",
        "properties": {
          "requestId": {
            "description": "Request Id that uniquely identifies your request.",
            "type": "string"
          },
          "responses": {
            "items": {
              "$ref": "#/components/schemas/StudyResponseV1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "StudyReviewRequestV1": {
        "description": "Review an study.",
        "properties": {
          "comment": {
            "description": "The approver's comment on why the study is approved/rejected.",
            "type": "string"
          },
          "rejectionReasons": {
            "deprecated": true,
            "description": "List of reasons for rejection, this will only be required if the status is REJECTED. This field is deprecated, use statusReasons instead.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "status": {
            "$ref": "#/components/schemas/StudyReviewStatusV1"
          },
          "statusReasons": {
            "description": "List of reasons for study status. For example, when study is marked REJECTED or INELIGIBLE, this field would be available.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "readOnly": true,
            "type": "array"
          },
          "studyId": {
            "description": "The study canonical identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "StudyReviewStatusV1": {
        "description": "The study review status. APPROVED studies will start delivering once reach the startDate.",
        "enum": [
          "APPROVED",
          "INFEASIBLE",
          "REJECTED"
        ],
        "type": "string"
      },
      "StudyStatusV1": {
        "description": "The study status. Only required if study is in DRAFT as part of study creation/update.",
        "enum": [
          "APPROVED",
          "CANCELLED",
          "DRAFT",
          "ENDED",
          "INFEASIBLE",
          "PENDING",
          "REJECTED",
          "RUNNING"
        ],
        "type": "string"
      },
      "StudySubmissionTypeV1": {
        "description": "The submission type for the creation and updating of studies. Currently, this submission type is supported for brand lift studies only.  This is an optional parameter in each of the request objects and its default value is `SUBMISSION` if not provided. A value of `SUBMISSION` indicates that a study should be submitted for approval. A value of `DRAFT` indicates that a study should be saved but not submitted.",
        "enum": [
          "DRAFT",
          "SUBMISSION"
        ],
        "type": "string",
        "writeOnly": true
      },
      "StudyTypeV1": {
        "description": "The study type.",
        "enum": [
          "BRAND_LIFT"
        ],
        "readOnly": true,
        "type": "string"
      },
      "StudyTypeV1M2": {
        "description": "The study type.",
        "enum": [
          "AUDIENCE_RESEARCH",
          "BRAND_LIFT",
          "CREATIVE_TESTING",
          "OMNICHANNEL_METRICS"
        ],
        "readOnly": true,
        "type": "string"
      },
      "SubErrorV1": {
        "description": "The sub error object.",
        "properties": {
          "errorType": {
            "type": "string"
          },
          "fieldName": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "errorType",
          "message"
        ],
        "type": "object"
      },
      "SurveyErrorV1": {
        "description": "The survey error object.",
        "properties": {
          "errorType": {
            "type": "string"
          },
          "fieldName": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "questionTemplateId": {
            "type": "string"
          }
        },
        "required": [
          "errorType",
          "message"
        ],
        "type": "object"
      },
      "SurveyQuestionCategoryRequirementV1M1": {
        "description": "The requirement for specific survey question category.",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/SurveyQuestionCategoryV1M1"
          },
          "maximumQuestions": {
            "description": "The maximum number of questions required for the question category.",
            "type": "integer"
          },
          "minimumQuestions": {
            "description": "The minimum number of questions required for the question category.",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "SurveyQuestionCategoryV1M1": {
        "description": "The survey question category.",
        "enum": [
          "BRAND_KPI",
          "CUSTOM",
          "WEIGHTING"
        ],
        "readOnly": true,
        "type": "string"
      },
      "SurveyQuestionGridQuestionResponseV1M1": {
        "description": "The grid question response object. Only applicable for SINGLE_SELECT_GRID type question.",
        "properties": {
          "columns": {
            "$ref": "#/components/schemas/SurveyQuestionPlaceholderCandidateV1"
          },
          "rows": {
            "$ref": "#/components/schemas/SurveyQuestionPlaceholderCandidateV1"
          }
        },
        "type": "object"
      },
      "SurveyQuestionObjectiveTypeV1": {
        "description": "The survey objective.",
        "enum": [
          "AD_RECALL",
          "ASSOCIATION",
          "ATTITUDES",
          "AWARENESS",
          "BEHAVIORS",
          "FAMILIARITY",
          "FAVORABILITY",
          "INTENT",
          "PREFERENCE"
        ],
        "readOnly": true,
        "type": "string"
      },
      "SurveyQuestionObjectiveTypeV1M1": {
        "description": "The survey objective.",
        "enum": [
          "AD_RECALL",
          "AGE",
          "AMAZON_SERVICE_USAGE",
          "ATTITUDES",
          "AWARENESS",
          "BEHAVIORS",
          "CHILDREN_IN_HOUSEHOLD",
          "CONSIDERATION",
          "EDUCATION",
          "ETHNICITY",
          "FAMILIARITY",
          "FAVORABILITY",
          "GENDER",
          "HOUSEHOLD_INCOME",
          "HOUSEHOLD_SIZE",
          "INTENT",
          "IN_MARKET_STATUS",
          "PREFERENCE",
          "PURCHASE_FREQUENCY",
          "PURCHASE_HISTORY",
          "PURCHASE_LOCATION",
          "TIME_ONLINE",
          "TV_MEDIA_CONSUMPTION",
          "UNAIDED_AWARENESS"
        ],
        "readOnly": true,
        "type": "string"
      },
      "SurveyQuestionPlaceholderAllowedRangeV1": {
        "description": "Allowed value range for placeholder.",
        "properties": {
          "maximumValue": {
            "description": "The maximum allowed value.",
            "format": "int32",
            "type": "integer"
          },
          "minimumValue": {
            "description": "The minimum allowed value.",
            "format": "int32",
            "type": "integer"
          },
          "parentField": {
            "description": "The field name that this range depends on. Will be empty if this range is the default range.",
            "type": "string"
          },
          "parentValue": {
            "description": "The field value that this range depends on. Will be empty if this range is the default range.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SurveyQuestionPlaceholderAllowedValueV1": {
        "description": "Allowed values for placeholder.",
        "properties": {
          "parentField": {
            "description": "The field name that this value list depends on. Will be empty if this is the default list.",
            "type": "string"
          },
          "parentValue": {
            "description": "The field value that this value list depend on. Will be empty if this is the default list.",
            "type": "string"
          },
          "values": {
            "description": "Allowed values for placeholder.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "SurveyQuestionPlaceholderCandidateV1": {
        "description": "The placeholder candidate in Survey question.",
        "properties": {
          "allowCustomValue": {
            "description": "Whether custom value is allowed for the placeholder.",
            "type": "boolean"
          },
          "allowedValueRanges": {
            "description": "Allowed value ranges for placeholder. Only applicable if the valueType is INTEGER.",
            "items": {
              "$ref": "#/components/schemas/SurveyQuestionPlaceholderAllowedRangeV1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "allowedValues": {
            "description": "Allowed values for placeholder. Will be empty if placeholder is free text field.",
            "items": {
              "$ref": "#/components/schemas/SurveyQuestionPlaceholderAllowedValueV1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "defaultValues": {
            "description": "Default values that will be appended to the values list regardless.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "fieldName": {
            "description": "The survey question placeholder field name.",
            "type": "string"
          },
          "inferredFields": {
            "description": "Where the placeholder values will be inferred from.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "maximumValueLength": {
            "description": "The maximum allowed character length for each individual placeholder value.",
            "type": "integer"
          },
          "minimumValueLength": {
            "description": "The minimum allowed character length for each individual placeholder value.",
            "type": "integer"
          },
          "valueType": {
            "$ref": "#/components/schemas/PlaceholderValueTypeV1"
          }
        },
        "type": "object"
      },
      "SurveyQuestionPlaceholderFieldValueV1": {
        "properties": {
          "isQualifying": {
            "description": "This is only required if the corresponding field is 'response', this will help to define if the response value will be counted as a positive one in the study report.",
            "type": "boolean"
          },
          "value": {
            "description": "The survey question placeholder field value.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SurveyQuestionPlaceholderV1": {
        "description": "The object specifying a placeholder in Survey question.",
        "properties": {
          "fieldName": {
            "description": "The survey question placeholder field name.",
            "type": "string"
          },
          "fieldValues": {
            "description": "The survey question placeholder field values.",
            "items": {
              "$ref": "#/components/schemas/SurveyQuestionPlaceholderFieldValueV1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "SurveyQuestionResponseV1M2": {
        "description": "The survey question response chosen by Survey audience.",
        "properties": {
          "asset": {
            "$ref": "#/components/schemas/AssetV1M2"
          },
          "responseType": {
            "description": "The type of response.",
            "enum": [
              "ASSET",
              "TEXT"
            ],
            "type": "string"
          },
          "responseValue": {
            "description": "The response text if the question response type is TEXT.",
            "type": "string"
          }
        }
      },
      "SurveyQuestionSubCategoryV1M1": {
        "description": "The survey question sub-category. Only applicable to certain categories",
        "enum": [
          "BEHAVIOR",
          "DEMOGRAPHIC",
          "PURCHASE_HISTORY"
        ],
        "readOnly": true,
        "type": "string"
      },
      "SurveyQuestionTemplateV1": {
        "description": "Survey question template for vendor product.",
        "properties": {
          "id": {
            "description": "The survey question template canonical Id.",
            "type": "string"
          },
          "locale": {
            "$ref": "#/components/schemas/MeasurementLocaleV1"
          },
          "maximumQualifyingResponses": {
            "description": "The maximum number of qualifying responses allowed for the question. This will be available if the qualifying responses are not pre-defined/inferred.",
            "type": "integer"
          },
          "maximumQuestionResponses": {
            "description": "The maximum number of responses allowed for the question. This will be available if the question responses are not pre-defined/inferred.",
            "type": "integer"
          },
          "minimumQualifyingResponses": {
            "description": "The minimum number of qualifying responses required for the question. This will be available if the qualifying responses are not pre-defined/inferred.",
            "type": "integer"
          },
          "minimumQuestionResponses": {
            "description": "The minimum number of responses required for the question. This will be available if the question responses are not pre-defined/inferred.",
            "type": "integer"
          },
          "objectiveType": {
            "$ref": "#/components/schemas/SurveyQuestionObjectiveTypeV1"
          },
          "placeholderCandidates": {
            "items": {
              "$ref": "#/components/schemas/SurveyQuestionPlaceholderCandidateV1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "qualifyingResponses": {
            "description": "The pre-defined qualifying survey question responses with placeholders, this will help to define which responses will be counted as positive ones in the study report.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "questionResponses": {
            "description": "The pre-defined survey question responses with placeholders.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "questionText": {
            "description": "The survey question text with placeholders.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/SurveyQuestionTypeV1"
          },
          "vendorProductId": {
            "description": "The associated vendor product id.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SurveyQuestionTemplateV1M1": {
        "description": "Survey question template for vendor product.",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/SurveyQuestionCategoryV1M1"
          },
          "gridQuestionResponse": {
            "$ref": "#/components/schemas/SurveyQuestionGridQuestionResponseV1M1"
          },
          "id": {
            "description": "The survey question template canonical Id.",
            "type": "string"
          },
          "locale": {
            "$ref": "#/components/schemas/MeasurementLocaleV1"
          },
          "maximumQualifyingResponses": {
            "description": "The maximum number of qualifying responses allowed for the question. This will be available if the qualifying responses are not pre-defined/inferred.",
            "type": "integer"
          },
          "maximumQuestionResponses": {
            "description": "The maximum number of responses allowed for the question. This will be available if the question responses are not pre-defined/inferred.",
            "type": "integer"
          },
          "minimumQualifyingResponses": {
            "description": "The minimum number of qualifying responses required for the question. This will be available if the qualifying responses are not pre-defined/inferred.",
            "type": "integer"
          },
          "minimumQuestionResponses": {
            "description": "The minimum number of responses required for the question. This will be available if the question responses are not pre-defined/inferred.",
            "type": "integer"
          },
          "objectiveType": {
            "$ref": "#/components/schemas/SurveyQuestionObjectiveTypeV1M1"
          },
          "placeholderCandidates": {
            "items": {
              "$ref": "#/components/schemas/SurveyQuestionPlaceholderCandidateV1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "priority": {
            "description": "The priority of the question. If present this will determine the ordering of questions in a survey. The check will be enforced when a survey is created/updated. Lower number indicates higher priority.",
            "type": "integer"
          },
          "qualifyingResponses": {
            "description": "The pre-defined qualifying survey question responses with placeholders, this will help to define which responses will be counted as positive ones in the study report.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "questionResponses": {
            "description": "The pre-defined survey question responses with placeholders.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "questionText": {
            "description": "The survey question text with placeholders.",
            "type": "string"
          },
          "subCategory": {
            "$ref": "#/components/schemas/SurveyQuestionSubCategoryV1M1"
          },
          "type": {
            "$ref": "#/components/schemas/SurveyQuestionTypeV1M1"
          },
          "vendorProductId": {
            "description": "The associated vendor product id.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SurveyQuestionTypeV1": {
        "description": "The survey question type. SINGLE_SELECT question will allow customers to choose only one response, MULTI_SELECT question will allow customers to choose multiple responses, RATING will allow customers to choose a rating on a scale (e.g. 1 to 5), FREE_TEXT will allow customers to provide a free formed question text, SINGLE_ASSET_SELECT will allow customers to choose an asset as the response.",
        "enum": [
          "FREE_TEXT",
          "MULTI_SELECT",
          "RATING",
          "SINGLE_ASSET_SELECT",
          "SINGLE_SELECT"
        ],
        "readOnly": true,
        "type": "string"
      },
      "SurveyQuestionTypeV1M1": {
        "description": "The survey question type. SINGLE_SELECT question will allow customers to choose only one response, MULTI_SELECT question will allow customers to choose multiple responses, RATING will allow customers to choose a rating on a scale (e.g. 1 to 5), FREE_TEXT will allow customers to provide a free formed question text.",
        "enum": [
          "FREE_TEXT",
          "MULTI_SELECT",
          "RATING",
          "SINGLE_SELECT",
          "SINGLE_SELECT_GRID"
        ],
        "readOnly": true,
        "type": "string"
      },
      "SurveyResponseResultV1": {
        "description": "The rate of response for each response in Survey question.",
        "properties": {
          "adExposedGroupResponseRate": {
            "description": "The percent of people in ad exposed group choosing this response.",
            "format": "double",
            "type": "number"
          },
          "controlGroupResponseRate": {
            "description": "The percent of people in control group choosing this response.",
            "format": "double",
            "type": "number"
          },
          "isQualifyingResponse": {
            "description": "Is the response a qualifying response. Used in calculating Brand Lift.",
            "type": "boolean"
          },
          "marginOfError": {
            "description": "The percentage of margin of error for this response.",
            "type": "number"
          },
          "questionObjective": {
            "$ref": "#/components/schemas/SurveyQuestionObjectiveTypeV1"
          },
          "questionResponse": {
            "description": "The response choosen by Survey audience.",
            "type": "string"
          },
          "questionSequence": {
            "description": "Sequence number of the question in the Survey.",
            "type": "number"
          },
          "questionText": {
            "description": "Text of the Survey question.",
            "type": "string"
          },
          "responseRate": {
            "description": "The percentage of people choosing this response.",
            "format": "double",
            "type": "number"
          },
          "segmentType": {
            "description": "The segment type to which this response data belongs to.",
            "enum": [
              "AGE",
              "AUDIENCES",
              "CHANNEL",
              "FREQUENCY",
              "GENDER",
              "HOUSEHOLD_INCOME",
              "OVERALL"
            ],
            "type": "string"
          },
          "segmentValue": {
            "description": "The segment value to which this response data belongs to. Would be corresponding to the above segmentType field.",
            "type": "string"
          },
          "statisticalSignificance": {
            "description": "The significance percentage for the response data in this segment.",
            "format": "double",
            "type": "number"
          }
        }
      },
      "SurveyResponseResultV1M1": {
        "description": "The rate of response for each response in Survey question.",
        "properties": {
          "adExposedGroupResponseRate": {
            "description": "The percent of people in ad exposed group choosing this response.",
            "type": "number"
          },
          "controlGroupResponseRate": {
            "description": "The percent of people in control group choosing this response.",
            "type": "number"
          },
          "isQualifyingResponse": {
            "description": "Is the response a qualifying response. Used in calculating Brand Lift.",
            "type": "boolean"
          },
          "questionObjective": {
            "$ref": "#/components/schemas/SurveyQuestionObjectiveTypeV1M1"
          },
          "questionResponse": {
            "description": "The response choosen by Survey audience.",
            "type": "string"
          },
          "questionSequence": {
            "description": "Sequence number of the question in the Survey.",
            "type": "number"
          },
          "questionText": {
            "description": "Text of the Survey question.",
            "type": "string"
          },
          "responseRate": {
            "description": "The percentage of people choosing this response.",
            "type": "number"
          },
          "segmentType": {
            "description": "The segment type to which this response data belongs to.",
            "enum": [
              "AGE",
              "AUDIENCES",
              "CHANNEL",
              "FREQUENCY",
              "GENDER",
              "HOUSEHOLD_INCOME",
              "OVERALL"
            ],
            "type": "string"
          },
          "segmentValue": {
            "description": "The segment value to which this response data belongs to. Would be corresponding to the above segmentType field.",
            "type": "string"
          },
          "statisticalSignificance": {
            "description": "The significance percentage for the response data in this segment.",
            "type": "number"
          }
        }
      },
      "SurveyResponseResultV1M2": {
        "description": "The rate of response for each response in Survey question.",
        "properties": {
          "adExposedGroupResponseRate": {
            "description": "The percent of people in ad exposed group choosing this response.",
            "format": "double",
            "type": "number"
          },
          "controlGroupResponseRate": {
            "description": "The percent of people in control group choosing this response.",
            "format": "double",
            "type": "number"
          },
          "isQualifyingResponse": {
            "description": "Is the response a qualifying response. Used in calculating Brand Lift.",
            "type": "boolean"
          },
          "marginOfError": {
            "description": "The percentage of margin of error for this response.",
            "type": "number"
          },
          "questionAsset": {
            "$ref": "#/components/schemas/AssetV1M2"
          },
          "questionObjective": {
            "$ref": "#/components/schemas/SurveyQuestionObjectiveTypeV1"
          },
          "questionResponse": {
            "$ref": "#/components/schemas/SurveyQuestionResponseV1M2"
          },
          "questionSequence": {
            "description": "Sequence number of the question in the Survey.",
            "type": "number"
          },
          "questionText": {
            "description": "Text of the Survey question.",
            "type": "string"
          },
          "responseRate": {
            "description": "The percentage of people choosing this response.",
            "format": "double",
            "type": "number"
          },
          "segmentType": {
            "description": "The segment type to which this response data belongs to.",
            "enum": [
              "AGE",
              "AUDIENCES",
              "CHANNEL",
              "FREQUENCY",
              "GENDER",
              "HOUSEHOLD_INCOME",
              "OVERALL"
            ],
            "type": "string"
          },
          "segmentValue": {
            "description": "The segment value to which this response data belongs to. Would be corresponding to the above segmentType field.",
            "type": "string"
          },
          "statisticalSignificance": {
            "description": "The significance percentage for the response data in this segment.",
            "format": "double",
            "type": "number"
          }
        }
      },
      "SurveyResponseV1": {
        "description": "Survey response.",
        "properties": {
          "code": {
            "description": "An enumerated success or error code for machine use.",
            "type": "string"
          },
          "errors": {
            "items": {
              "$ref": "#/components/schemas/SurveyErrorV1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "index": {
            "description": "The index of the object in the request, starting from 1.",
            "format": "int32",
            "type": "integer"
          },
          "message": {
            "description": "A human-readable message of the code.",
            "type": "string"
          },
          "surveyId": {
            "description": "The survey canonical identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SurveyResponsesV1": {
        "description": "Surveys response.",
        "properties": {
          "requestId": {
            "description": "Request Id that uniquely identifies your request.",
            "type": "string"
          },
          "responses": {
            "items": {
              "$ref": "#/components/schemas/SurveyResponseV1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "SurveyStatusV1": {
        "description": "The survey status. Only required if the survey is in DRAFT. Created survey will be in AVAILABLE status by default and will only be in IN_USE status if it's associated with a study.",
        "enum": [
          "AVAILABLE",
          "DRAFT",
          "IN_USE"
        ],
        "type": "string"
      },
      "SurveyV1": {
        "description": "The measurement survey.",
        "properties": {
          "customQuestions": {
            "deprecated": true,
            "description": "A list of custom survey questions.",
            "items": {
              "$ref": "#/components/schemas/CustomSurveyQuestionV1"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "id": {
            "description": "The survey canonical identifier. Immutable field. This is required for update.",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/SurveyStatusV1"
          },
          "studyId": {
            "description": "The associated study identifier. Survey needs to be created prior to the study creation.",
            "readOnly": true,
            "type": "string"
          },
          "templatedQuestions": {
            "description": "A list of templated survey questions.",
            "items": {
              "$ref": "#/components/schemas/TemplatedSurveyQuestionV1"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "vendorProductId": {
            "description": "The vendor product canonical identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "SurveyV1M1": {
        "description": "The measurement survey.",
        "properties": {
          "customQuestions": {
            "deprecated": true,
            "description": "A list of custom survey questions.",
            "items": {
              "$ref": "#/components/schemas/CustomSurveyQuestionV1"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "id": {
            "description": "The survey canonical identifier. Immutable field. This is required for update.",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/SurveyStatusV1"
          },
          "studyId": {
            "description": "The associated study identifier. Survey needs to be created prior to the study creation.",
            "readOnly": true,
            "type": "string"
          },
          "templatedQuestions": {
            "description": "A list of templated survey questions.",
            "items": {
              "$ref": "#/components/schemas/TemplatedSurveyQuestionV1M1"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "vendorProductId": {
            "description": "The vendor product canonical identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TemplatedSurveyQuestionV1": {
        "description": "The templated measurement survey question.",
        "properties": {
          "id": {
            "description": "The survey question template canonical identifier.",
            "type": "string"
          },
          "placeholders": {
            "description": "List of question placeholders",
            "items": {
              "$ref": "#/components/schemas/SurveyQuestionPlaceholderV1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "TemplatedSurveyQuestionV1M1": {
        "description": "The templated measurement survey question.",
        "properties": {
          "gridQuestionResponse": {
            "$ref": "#/components/schemas/GridQuestionResponsesV1M1"
          },
          "id": {
            "description": "The survey question template canonical identifier.",
            "type": "string"
          },
          "placeholders": {
            "description": "List of question placeholders",
            "items": {
              "$ref": "#/components/schemas/SurveyQuestionPlaceholderV1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "UpdateDSPAudienceResearchStudyV1M2": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseStudyV1M2"
          },
          {
            "$ref": "#/components/schemas/DSPCampaignPlanningMetadataV1M2"
          },
          {
            "$ref": "#/components/schemas/DSPAudienceResearchMetadataV1M2"
          }
        ],
        "description": "Update DSP AUDIENCE_RESEARCH study object.",
        "type": "object"
      },
      "UpdateDSPCreativeTestingStudyV1M2": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseStudyV1M2"
          },
          {
            "$ref": "#/components/schemas/DSPCampaignPlanningMetadataV1M2"
          },
          {
            "$ref": "#/components/schemas/DSPCreativeTestingMetadataV1M2"
          }
        ],
        "description": "Update DSP CREATIVE_TESTING study object.",
        "type": "object"
      },
      "VendorProductEligibilityV1": {
        "description": "The measurement eligibility details for a certain vendor product.",
        "properties": {
          "issues": {
            "description": "A list of issues will be provided if the status is INELIGIBLE or ELIGIBLE_WITH_WARNING.",
            "items": {
              "$ref": "#/components/schemas/EligibilityIssueV1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "status": {
            "$ref": "#/components/schemas/EligibilityStatusV1"
          },
          "vendorProductId": {
            "description": "vendor product canonical identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "VendorProductEligibilityV1M2": {
        "description": "The measurement eligibility details for a certain vendor product.",
        "properties": {
          "issues": {
            "description": "A list of issues will be provided if the status is INELIGIBLE or ELIGIBLE_WITH_WARNING.",
            "items": {
              "$ref": "#/components/schemas/EligibilityIssueV1M2"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "status": {
            "$ref": "#/components/schemas/EligibilityStatusV1"
          },
          "vendorProductId": {
            "description": "vendor product canonical identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "VendorProductPolicyV1": {
        "description": "The policy rules will be enforced at vendor product level.",
        "properties": {
          "benchMarkCategoryRequired": {
            "description": "Whether or not the benchMark category is required for measurement setup.",
            "type": "boolean"
          },
          "customQuestionAllowed": {
            "description": "Whether custom survey questions are allowed.",
            "type": "boolean"
          },
          "externalReferenceIdRequired": {
            "description": "Whether or not the vendor assigned external reference identifier is required for measurement setup.",
            "type": "boolean"
          },
          "leadTime": {
            "description": "Days required for measurement configuration. It is recommended that the startDate of the campaign has sufficient padding to accommodate this lead time, but measurement can begin after the campaign start date in some cases.",
            "type": "integer"
          },
          "maximumOrders": {
            "description": "The maximum number of order allowed for the product.",
            "type": "integer"
          },
          "maximumPeerNames": {
            "description": "The maximum number of peer names required for the product.",
            "type": "integer"
          },
          "maximumStudyLength": {
            "description": "The maximum required length/duration of the study in days.",
            "type": "integer"
          },
          "maximumSurveyQuestions": {
            "description": "The maximum number of survey questions required for the product.",
            "type": "integer"
          },
          "minimumOrders": {
            "description": "The maximum number of orders required for the product.",
            "type": "integer"
          },
          "minimumPeerNames": {
            "description": "The minimum number of peer names required for the product.",
            "type": "integer"
          },
          "minimumStudyLength": {
            "description": "The minimum required length/duration of the study in days.",
            "type": "integer"
          },
          "minimumSurveyQuestions": {
            "description": "The minimum number of survey questions required for the product.",
            "type": "integer"
          },
          "requiredQuestionObjectives": {
            "description": "The required question objectives that need to be included as part of the survey.",
            "items": {
              "$ref": "#/components/schemas/SurveyQuestionObjectiveTypeV1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "supportedGoals": {
            "items": {
              "$ref": "#/components/schemas/MeasurementGoalV1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "supportedMarketplaces": {
            "items": {
              "$ref": "#/components/schemas/MeasurementMarketplaceV1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "vendorApprovalRequired": {
            "description": "Whether or not the vendor requires an additional sign off process to fully qualify for study.",
            "type": "boolean"
          },
          "vendorProductId": {
            "description": "vendor product canonical identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "VendorProductPolicyV1M1": {
        "description": "The policy rules will be enforced at vendor product level.",
        "properties": {
          "benchMarkCategoryRequired": {
            "description": "Whether or not the benchMark category is required for measurement setup.",
            "type": "boolean"
          },
          "customQuestionAllowed": {
            "description": "Whether custom survey questions are allowed.",
            "type": "boolean"
          },
          "externalReferenceIdRequired": {
            "description": "Whether or not the vendor assigned external reference identifier is required for measurement setup.",
            "type": "boolean"
          },
          "leadTime": {
            "description": "Days required for measurement configuration. It is recommended that the startDate of the campaign has sufficient padding to accommodate this lead time, but measurement can begin after the campaign start date in some cases.",
            "type": "integer"
          },
          "maximumOrders": {
            "description": "The maximum number of order allowed for the product.",
            "type": "integer"
          },
          "maximumPeerNames": {
            "description": "The maximum number of peer names required for the product.",
            "type": "integer"
          },
          "maximumStudyLength": {
            "description": "The maximum required length/duration of the study in days.",
            "type": "integer"
          },
          "maximumSurveyQuestions": {
            "description": "The maximum number of survey questions required for the product.",
            "type": "integer"
          },
          "minimumOrders": {
            "description": "The maximum number of orders required for the product.",
            "type": "integer"
          },
          "minimumPeerNames": {
            "description": "The minimum number of peer names required for the product.",
            "type": "integer"
          },
          "minimumStudyLength": {
            "description": "The minimum required length/duration of the study in days.",
            "type": "integer"
          },
          "minimumSurveyQuestions": {
            "description": "The minimum number of survey questions required for the product.",
            "type": "integer"
          },
          "requiredQuestionCategories": {
            "description": "The requirements for survey question categories.",
            "items": {
              "$ref": "#/components/schemas/SurveyQuestionCategoryRequirementV1M1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "requiredQuestionObjectives": {
            "description": "The required question objectives that need to be included as part of the survey.",
            "items": {
              "$ref": "#/components/schemas/SurveyQuestionObjectiveTypeV1M1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "supportedGoals": {
            "items": {
              "$ref": "#/components/schemas/MeasurementGoalV1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "supportedMarketplaces": {
            "items": {
              "$ref": "#/components/schemas/MeasurementMarketplaceV1"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "supportedVerbs": {
            "description": "List of supported verbs that can be used in survey questions.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "vendorApprovalRequired": {
            "description": "Whether or not the vendor requires an additional sign off process to fully qualify for study.",
            "type": "boolean"
          },
          "vendorProductId": {
            "description": "vendor product canonical identifier.",
            "type": "string"
          },
          "verbRequired": {
            "description": "Whether or not a verb is required for measurement setup. It will be used in applicable survey questions to construct the question text.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "VendorProductRequestV1": {
        "description": "The request object to fetch measurement vendor products.",
        "properties": {
          "adTypeFilters": {
            "description": "AdType filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "items": {
              "$ref": "#/components/schemas/AdTypeV1"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "fundingTypeFilters": {
            "description": "FundingType filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "items": {
              "$ref": "#/components/schemas/FundingTypeV1"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "objectiveTypeFilters": {
            "description": "StudyObjective filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "items": {
              "$ref": "#/components/schemas/StudyObjectiveV1"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "studyTypeFilters": {
            "description": "StudyType filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "items": {
              "$ref": "#/components/schemas/StudyTypeV1"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "vendorProductIdFilters": {
            "description": "VendorProduct identifier filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "vendorTypeFilters": {
            "description": "VendorType filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "items": {
              "$ref": "#/components/schemas/VendorTypeV1"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "VendorProductRequestV1M1": {
        "description": "The request object to fetch measurement vendor products.",
        "properties": {
          "adTypeFilters": {
            "description": "AdType filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "items": {
              "$ref": "#/components/schemas/AdTypeV1"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "fundingTypeFilters": {
            "description": "FundingType filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "items": {
              "$ref": "#/components/schemas/FundingTypeV1M1"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "objectiveTypeFilters": {
            "description": "StudyObjective filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "items": {
              "$ref": "#/components/schemas/StudyObjectiveV1"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "studyTypeFilters": {
            "description": "StudyType filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "items": {
              "$ref": "#/components/schemas/StudyTypeV1"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "vendorProductIdFilters": {
            "description": "VendorProduct identifier filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "vendorTypeFilters": {
            "description": "VendorType filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "items": {
              "$ref": "#/components/schemas/VendorTypeV1M1"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          }
        },
        "type": "object"
      },
      "VendorProductTypeV1": {
        "description": "The measurement vendor product type.",
        "enum": [
          "SHOPPER_PANEL"
        ],
        "readOnly": true,
        "type": "string"
      },
      "VendorProductTypeV1M1": {
        "description": "The measurement vendor product type.",
        "enum": [
          "BRAND_LIFT_INSIGHTS",
          "DASH",
          "DIGITAL_BRAND_EFFECT",
          "DYNATA",
          "EXPANDED_VIEW_LITE",
          "LUCID",
          "MACROMILL",
          "SHOPPER_PANEL",
          "UPWAVE"
        ],
        "readOnly": true,
        "type": "string"
      },
      "VendorProductTypeV1M2": {
        "description": "The measurement vendor product type.",
        "enum": [
          "OMNICHANNEL_METRICS",
          "SHOPPER_PANEL",
          "SHOPPER_PANEL_AUDIENCE_RESEARCH",
          "SHOPPER_PANEL_COMPARISON_CREATIVE_TESTING"
        ],
        "readOnly": true,
        "type": "string"
      },
      "VendorProductTypeV1M3": {
        "description": "The measurement vendor product type.",
        "enum": [
          "BRAND_LIFT_INSIGHTS",
          "DASH",
          "DIGITAL_BRAND_EFFECT",
          "DYNATA",
          "EXPANDED_VIEW_LITE",
          "LUCID",
          "MACROMILL",
          "OMNICHANNEL_METRICS",
          "SHOPPER_PANEL",
          "UPWAVE"
        ],
        "readOnly": true,
        "type": "string"
      },
      "VendorProductV1": {
        "description": "The measurement vendor product.",
        "properties": {
          "adType": {
            "$ref": "#/components/schemas/AdTypeV1"
          },
          "fundingType": {
            "$ref": "#/components/schemas/FundingTypeV1"
          },
          "id": {
            "description": "The vendor product identifier.",
            "readOnly": true,
            "type": "string"
          },
          "objective": {
            "$ref": "#/components/schemas/StudyObjectiveV1"
          },
          "studyType": {
            "$ref": "#/components/schemas/StudyTypeV1"
          },
          "vendorProductType": {
            "$ref": "#/components/schemas/VendorProductTypeV1"
          },
          "vendorType": {
            "$ref": "#/components/schemas/VendorTypeV1"
          }
        },
        "type": "object"
      },
      "VendorProductV1M1": {
        "description": "The measurement vendor product.",
        "properties": {
          "adType": {
            "$ref": "#/components/schemas/AdTypeV1"
          },
          "displayName": {
            "description": "The vendor product display name.",
            "readOnly": true,
            "type": "string"
          },
          "fundingType": {
            "$ref": "#/components/schemas/FundingTypeV1M1"
          },
          "id": {
            "description": "The vendor product identifier.",
            "readOnly": true,
            "type": "string"
          },
          "objective": {
            "$ref": "#/components/schemas/StudyObjectiveV1"
          },
          "studyType": {
            "$ref": "#/components/schemas/StudyTypeV1"
          },
          "vendorProductType": {
            "$ref": "#/components/schemas/VendorProductTypeV1M1"
          },
          "vendorType": {
            "$ref": "#/components/schemas/VendorTypeV1M1"
          }
        },
        "type": "object"
      },
      "VendorTypeV1": {
        "description": "The measurement vendor type, each study type will have different supported vendors.",
        "enum": [
          "AMAZON"
        ],
        "readOnly": true,
        "type": "string"
      },
      "VendorTypeV1M1": {
        "description": "The measurement vendor type, each study type will have different supported vendors.",
        "enum": [
          "AMAZON",
          "DYNATA",
          "KANTAR",
          "LUCID",
          "MACROMILL",
          "NIELSEN",
          "UPWAVE"
        ],
        "readOnly": true,
        "type": "string"
      },
      "VendorTypeV1M2": {
        "description": "The measurement vendor type, each study type will have different supported vendors.",
        "enum": [
          "AMAZON",
          "OMNICHANNEL_METRICS"
        ],
        "readOnly": true,
        "type": "string"
      },
      "VendorTypeV1M3": {
        "description": "The measurement vendor type, each study type will have different supported vendors.",
        "enum": [
          "AMAZON",
          "DYNATA",
          "KANTAR",
          "LUCID",
          "MACROMILL",
          "NIELSEN",
          "OMNICHANNEL_METRICS",
          "UPWAVE"
        ],
        "readOnly": true,
        "type": "string"
      }
    },
    "securitySchemes": {}
  },
  "info": {
    "description": "Measurement management.",
    "title": "Measurement",
    "version": "3.0"
  },
  "openapi": "3.0.1",
  "paths": {
    "/dsp/measurement/eligibility/audienceResearch": {
      "post": {
        "description": "Checks the DSP AUDIENCE_RESEARCH study type eligibility status against vendor products.\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"campaign_view\"]",
        "operationId": "CheckDSPAudienceResearchEligibility",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "$ref": "#/components/parameters/advertiserIdHeader"
          },
          {
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "schema": {
              "default": 10,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.measurementeligibility.v1.2+json": {
              "schema": {
                "$ref": "#/components/schemas/DSPAudienceResearchEligibilityRequestV1M2"
              }
            }
          },
          "description": "The DSP audience research study eligibility request object."
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/EligibilityResponseV1M2"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Bad Request or request body is not matching with input model."
          },
          "401": {
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unauthenticated request."
          },
          "403": {
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Forbidden - Request failed because user is not authorized to access a resource."
          },
          "404": {
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user."
          },
          "415": {
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unsupported Media Type - Version not supported."
          },
          "429": {
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Too Many Requests - Request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41s"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "summary": "Checks the DSP AUDIENCE_RESEARCH study type eligibility against vendor products.",
        "tags": [
          "Measurement"
        ]
      }
    },
    "/dsp/measurement/eligibility/brandLift": {
      "post": {
        "description": "Checks the DSP BRAND_LIFT study type eligibility status against vendor products.\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"campaign_view\"]",
        "operationId": "CheckDSPBrandLiftEligibility",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/advertiserIdHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "schema": {
              "default": 10,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.measurementeligibility.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/DSPBrandLiftEligibilityRequestV1"
              }
            },
            "application/vnd.measurementeligibility.v1.1+json": {
              "schema": {
                "$ref": "#/components/schemas/DSPBrandLiftEligibilityRequestV1M1"
              }
            }
          },
          "description": "The DSP brand lift eligibility request object."
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.measurementeligibility.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/EligibilityResponseV1"
                }
              },
              "application/vnd.measurementeligibility.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/EligibilityResponseV1"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/vnd.measurementeligibility.v1+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementeligibility.v1.1+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Bad Request or request body is not matching with input model."
          },
          "401": {
            "content": {
              "application/vnd.measurementeligibility.v1+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementeligibility.v1.1+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unauthenticated request."
          },
          "403": {
            "content": {
              "application/vnd.measurementeligibility.v1+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementeligibility.v1.1+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Forbidden - Request failed because user is not authorized to access a resource."
          },
          "404": {
            "content": {
              "application/vnd.measurementeligibility.v1+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementeligibility.v1.1+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user."
          },
          "415": {
            "content": {
              "application/vnd.measurementeligibility.v1+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementeligibility.v1.1+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unsupported Media Type - Version not supported."
          },
          "429": {
            "content": {
              "application/vnd.measurementeligibility.v1+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementeligibility.v1.1+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Too Many Requests - Request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.measurementeligibility.v1+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41s"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementeligibility.v1.1+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41s"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "summary": "Checks the DSP BRAND_LIFT study type eligibility against vendor products.",
        "tags": [
          "Measurement"
        ]
      }
    },
    "/dsp/measurement/eligibility/creativeTesting": {
      "post": {
        "description": "Checks the DSP CREATIVE_TESTING study type eligibility status against vendor products.\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"campaign_view\"]",
        "operationId": "CheckDSPCreativeTestingEligibility",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "$ref": "#/components/parameters/advertiserIdHeader"
          },
          {
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "schema": {
              "default": 10,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.measurementeligibility.v1.2+json": {
              "schema": {
                "$ref": "#/components/schemas/DSPCreativeTestingEligibilityRequestV1M2"
              }
            }
          },
          "description": "The DSP creative testing study eligibility request object."
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/EligibilityResponseV1M2"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Bad Request or request body is not matching with input model."
          },
          "401": {
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unauthenticated request."
          },
          "403": {
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Forbidden - Request failed because user is not authorized to access a resource."
          },
          "404": {
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user."
          },
          "415": {
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unsupported Media Type - Version not supported."
          },
          "429": {
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Too Many Requests - Request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41s"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "summary": "Checks the DSP CREATIVE_TESTING study type eligibility against vendor products.",
        "tags": [
          "Measurement"
        ]
      }
    },
    "/dsp/measurement/eligibility/omnichannelMetrics": {
      "post": {
        "description": "Checks the DSP OMNICHANNEL_METRICS study type eligibility status against vendor products.\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"campaign_view\"]",
        "operationId": "CheckDSPOmnichannelMetricsEligibility",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "$ref": "#/components/parameters/advertiserIdHeader"
          },
          {
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "schema": {
              "default": 10,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.measurementeligibility.v1.2+json": {
              "schema": {
                "$ref": "#/components/schemas/DSPOmnichannelMetricsEligibilityRequestV1M2"
              }
            },
            "application/vnd.measurementeligibility.v1.3+json": {
              "schema": {
                "$ref": "#/components/schemas/DSPOmnichannelMetricsEligibilityRequestV1M3"
              }
            }
          },
          "description": "The DSP omnichannel metrics eligibility request object."
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/EligibilityResponseV1M2"
                }
              },
              "application/vnd.measurementeligibility.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/EligibilityResponseV1M2"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementeligibility.v1.3+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Bad Request or request body is not matching with input model."
          },
          "401": {
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementeligibility.v1.3+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unauthenticated request."
          },
          "403": {
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementeligibility.v1.3+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Forbidden - Request failed because user is not authorized to access a resource."
          },
          "404": {
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementeligibility.v1.3+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user."
          },
          "415": {
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementeligibility.v1.3+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unsupported Media Type - Version not supported."
          },
          "429": {
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementeligibility.v1.3+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Too Many Requests - Request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41s"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementeligibility.v1.3+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41s"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "summary": "Checks the DSP OMNICHANNEL_METRICS study type eligibility against vendor products.",
        "tags": [
          "Measurement"
        ]
      }
    },
    "/dsp/measurement/studies/audienceResearch": {
      "get": {
        "description": "Gets one or more DSP AUDIENCE_RESEARCH studies with requested study identifiers or an advertiser identifier.\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"campaign_view\"]",
        "operationId": "GetDSPAudienceResearchStudies",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "$ref": "#/components/parameters/advertiserIdHeader"
          },
          {
            "description": "Study canonical identifier to filter with. Either one of studyIds or advertiserId should be provided.",
            "explode": false,
            "in": "query",
            "name": "studyIds",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "maxItems": 50,
              "minItems": 1,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "The advertiser canonical identifier. Either one of studyIds or advertiserId should be provided.",
            "in": "query",
            "name": "advertiserId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "schema": {
              "default": 10,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedDSPAudienceResearchStudiesV1M2"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Bad Request or request body is not matching with input model."
          },
          "401": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unauthenticated request."
          },
          "403": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Forbidden - Request failed because user is not authorized to access a resource."
          },
          "404": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user."
          },
          "415": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unsupported Media Type - Version not supported."
          },
          "429": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Too Many Requests - Request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "summary": "Gets one or more DSP AUDIENCE_RESEARCH studies with requested study identifiers or an advertiser identifier.",
        "tags": [
          "Measurement"
        ]
      },
      "post": {
        "description": "Create new DSP AUDIENCE_RESEARCH study.\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"campaign_view\"]",
        "operationId": "CreateDSPAudienceResearchStudy",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "$ref": "#/components/parameters/advertiserIdHeader"
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.studymanagement.v1.2+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDSPAudienceResearchStudyV1M2"
              }
            }
          },
          "description": "Create object for DSP AUDIENCE_RESEARCH study."
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/DSPAudienceResearchStudyV1M2"
                }
              }
            },
            "description": "Success."
          },
          "400": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Bad request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Bad request."
          },
          "401": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unauthenticated request."
          },
          "403": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Forbidden - Request failed because user is not authorized to access a resource."
          },
          "404": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user."
          },
          "415": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unsupported Media Type - Version not supported."
          },
          "429": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Too Many Requests - Request was rate-limited. Retry later."
          }
        },
        "summary": "Create new DSP AUDIENCE_RESEARCH study.",
        "tags": [
          "Measurement"
        ]
      }
    },
    "/dsp/measurement/studies/audienceResearch/{studyId}": {
      "put": {
        "description": "Update DSP AUDIENCE_RESEARCH study. This will be a full update.\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"campaign_view\"]",
        "operationId": "UpdateDSPAudienceResearchStudy",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "$ref": "#/components/parameters/advertiserIdHeader"
          },
          {
            "description": "The canonical identifier that represents a unique study.",
            "in": "path",
            "name": "studyId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.studymanagement.v1.2+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDSPAudienceResearchStudyV1M2"
              }
            }
          },
          "description": "Update object for DSP AUDIENCE_RESEARCH study."
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/DSPAudienceResearchStudyV1M2"
                }
              }
            },
            "description": "Success."
          },
          "400": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Bad request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Bad request."
          },
          "401": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unauthenticated request."
          },
          "403": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Forbidden - Request failed because user is not authorized to access a resource."
          },
          "404": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user."
          },
          "415": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unsupported Media Type - Version not supported."
          },
          "429": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Too Many Requests - Request was rate-limited. Retry later."
          }
        },
        "summary": "Update DSP AUDIENCE_RESEARCH study. This will be a full update.",
        "tags": [
          "Measurement"
        ]
      }
    },
    "/dsp/measurement/studies/audienceResearch/{studyId}/result": {
      "get": {
        "description": "Get result of a DSP AUDIENCE_RESEARCH study. Returns 200 successful response if json resource is requested in Accept header. Returns a 307 Temporary Redirect response if any of the file types is requested and response includes a location header with the value set to an AWS S3 path where the result is located. The path expires after 60 seconds.\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"campaign_view\"]",
        "operationId": "GetDSPAudienceResearchStudyResult",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "$ref": "#/components/parameters/advertiserIdHeader"
          },
          {
            "description": "The version(s) of the requested resource. Available version(s) - `application/vnd.measurementresult.v1.2+json`, `text/vnd.measurementresult.v1.2+csv`.",
            "in": "header",
            "name": "Accept",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The canonical identifier that represents a unique study.",
            "in": "path",
            "name": "studyId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceResearchStudyResultV1M2"
                }
              }
            },
            "description": "Successful operation."
          },
          "307": {
            "description": "Successful operation for downloading result file.",
            "headers": {
              "Location": {
                "description": "Redirect URI with S3 file location containing result data.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Bad Request or request body is not matching with input model."
          },
          "401": {
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unauthenticated request."
          },
          "403": {
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Forbidden - Request failed because user is not authorized to access a resource."
          },
          "404": {
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user."
          },
          "415": {
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unsupported Media Type - Version not supported."
          },
          "429": {
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Too Many Requests - Request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "summary": "Get result of a DSP AUDIENCE_RESEARCH study.",
        "tags": [
          "Measurement"
        ]
      }
    },
    "/dsp/measurement/studies/brandLift": {
      "get": {
        "description": "Gets one or more DSP BRAND_LIFT studies with requested study identifiers or an advertiser identifier.\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"campaign_view\"]",
        "operationId": "GetDSPBrandLiftStudies",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/advertiserIdHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "description": "Study canonical identifier to filter with. Either one of studyIdFilters or advertiserId should be provided.",
            "explode": false,
            "in": "query",
            "name": "studyIdFilters",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "maxItems": 50,
              "minItems": 1,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "The advertiser canonical identifier. Either one of studyIdFilters or advertiserId should be provided.",
            "in": "query",
            "name": "advertiserId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "schema": {
              "default": 10,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedDSPBrandLiftStudiesV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedDSPBrandLiftStudiesV1M1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedDSPBrandLiftStudiesV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedDSPBrandLiftStudiesV1M1"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Bad Request or request body is not matching with input model."
          },
          "401": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unauthenticated request."
          },
          "403": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Forbidden - Request failed because user is not authorized to access a resource."
          },
          "404": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user."
          },
          "415": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unsupported Media Type - Version not supported."
          },
          "429": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Too Many Requests - Request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "summary": "Gets one or more DSP BRAND_LIFT studies with requested study identifiers or an advertiser identifier.",
        "tags": [
          "Measurement"
        ]
      },
      "post": {
        "description": "Create new DSP BRAND_LIFT studies.\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"campaign_view\"]",
        "operationId": "CreateDSPBrandLiftStudies",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/advertiserIdHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.studymanagement.v1+json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/DSPBrandLiftStudyV1"
                },
                "maxItems": 1,
                "minItems": 1,
                "type": "array"
              }
            },
            "application/vnd.studymanagement.v1.1+json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/DSPBrandLiftStudyV1M1"
                },
                "maxItems": 1,
                "minItems": 1,
                "type": "array"
              }
            },
            "application/vnd.studymanagement.v1.2+json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/DSPBrandLiftStudyV1"
                },
                "maxItems": 1,
                "minItems": 1,
                "type": "array"
              }
            },
            "application/vnd.studymanagement.v1.3+json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/DSPBrandLiftStudyV1M1"
                },
                "maxItems": 1,
                "minItems": 1,
                "type": "array"
              }
            }
          },
          "description": "An array of study objects. For each object, specify required fields and their values. Maximum length of the array is 1."
        },
        "responses": {
          "207": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyResponsesV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyResponsesV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyResponsesV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyResponsesV1"
                }
              }
            },
            "description": "Multi-status."
          },
          "401": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unauthenticated request."
          },
          "403": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Forbidden - Request failed because user is not authorized to access a resource."
          },
          "404": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user."
          },
          "415": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unsupported Media Type - Version not supported."
          },
          "422": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Study Eligibility Failed",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Study Eligibility Failed",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Study Eligibility Failed",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Study Eligibility Failed",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unprocessable Entity - The syntax of the request is correct, but the server was unable to process the contained instructions."
          },
          "429": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Too Many Requests - Request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "summary": "Create new DSP BRAND_LIFT studies.",
        "tags": [
          "Measurement"
        ]
      },
      "put": {
        "description": "Update DSP BRAND_LIFT studies. This will be a full update.\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"campaign_view\"]",
        "operationId": "UpdateDSPBrandLiftStudies",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/advertiserIdHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.studymanagement.v1+json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/DSPBrandLiftStudyV1"
                },
                "maxItems": 1,
                "minItems": 1,
                "type": "array"
              }
            },
            "application/vnd.studymanagement.v1.1+json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/DSPBrandLiftStudyV1M1"
                },
                "maxItems": 1,
                "minItems": 1,
                "type": "array"
              }
            },
            "application/vnd.studymanagement.v1.2+json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/DSPBrandLiftStudyV1"
                },
                "maxItems": 1,
                "minItems": 1,
                "type": "array"
              }
            },
            "application/vnd.studymanagement.v1.3+json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/DSPBrandLiftStudyV1M1"
                },
                "maxItems": 1,
                "minItems": 1,
                "type": "array"
              }
            }
          },
          "description": "An array of measurement objects. For each object, specify required fields and their values. Maximum length of the array is 1."
        },
        "responses": {
          "207": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyResponsesV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyResponsesV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyResponsesV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyResponsesV1"
                }
              }
            },
            "description": "Multi-status."
          },
          "401": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unauthenticated request."
          },
          "403": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Forbidden - Request failed because user is not authorized to access a resource."
          },
          "404": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user."
          },
          "415": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unsupported Media Type - Version not supported."
          },
          "422": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Study Eligibility Failed",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Study Eligibility Failed",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Study Eligibility Failed",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Study Eligibility Failed",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unprocessable Entity - The syntax of the request is correct, but the server was unable to process the contained instructions."
          },
          "429": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Too Many Requests - Request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "summary": "Update DSP BRAND_LIFT studies. This will be a full update.",
        "tags": [
          "Measurement"
        ]
      }
    },
    "/dsp/measurement/studies/creativeTesting": {
      "get": {
        "description": "Gets one or more DSP CREATIVE_TESTING studies with requested study identifiers or an advertiser identifier.\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"campaign_view\"]",
        "operationId": "GetDSPCreativeTestingStudies",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "$ref": "#/components/parameters/advertiserIdHeader"
          },
          {
            "description": "Study canonical identifier to filter with. Either one of studyIds or advertiserId should be provided.",
            "explode": false,
            "in": "query",
            "name": "studyIds",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "maxItems": 50,
              "minItems": 1,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "The advertiser canonical identifier. Either one of studyIds or advertiserId should be provided.",
            "in": "query",
            "name": "advertiserId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "schema": {
              "default": 10,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedDSPCreativeTestingStudiesV1M2"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Bad Request or request body is not matching with input model."
          },
          "401": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unauthenticated request."
          },
          "403": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Forbidden - Request failed because user is not authorized to access a resource."
          },
          "404": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user."
          },
          "415": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unsupported Media Type - Version not supported."
          },
          "429": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Too Many Requests - Request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "summary": "Gets one or more DSP CREATIVE_TESTING studies with requested study identifiers or an advertiser identifier.",
        "tags": [
          "Measurement"
        ]
      },
      "post": {
        "description": "Create new DSP CREATIVE_TESTING study.\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"campaign_view\"]",
        "operationId": "CreateDSPCreativeTestingStudy",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "$ref": "#/components/parameters/advertiserIdHeader"
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.studymanagement.v1.2+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDSPCreativeTestingStudyV1M2"
              }
            }
          },
          "description": "Create object for DSP CREATIVE_TESTING study."
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/DSPCreativeTestingStudyV1M2"
                }
              }
            },
            "description": "Success."
          },
          "400": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Bad request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Bad request."
          },
          "401": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unauthenticated request."
          },
          "403": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Forbidden - Request failed because user is not authorized to access a resource."
          },
          "404": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user."
          },
          "415": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unsupported Media Type - Version not supported."
          },
          "429": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Too Many Requests - Request was rate-limited. Retry later."
          }
        },
        "summary": "Create new DSP CREATIVE_TESTING study.",
        "tags": [
          "Measurement"
        ]
      }
    },
    "/dsp/measurement/studies/creativeTesting/{studyId}": {
      "put": {
        "description": "Update DSP CREATIVE_TESTING study. This will be a full update.\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"campaign_view\"]",
        "operationId": "UpdateDSPCreativeTestingStudy",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "$ref": "#/components/parameters/advertiserIdHeader"
          },
          {
            "description": "The canonical identifier that represents a unique study.",
            "in": "path",
            "name": "studyId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.studymanagement.v1.2+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDSPCreativeTestingStudyV1M2"
              }
            }
          },
          "description": "Update object for DSP CREATIVE_TESTING study."
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/DSPCreativeTestingStudyV1M2"
                }
              }
            },
            "description": "Success."
          },
          "400": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Bad request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Bad request."
          },
          "401": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unauthenticated request."
          },
          "403": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Forbidden - Request failed because user is not authorized to access a resource."
          },
          "404": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user."
          },
          "415": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unsupported Media Type - Version not supported."
          },
          "429": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Too Many Requests - Request was rate-limited. Retry later."
          }
        },
        "summary": "Update DSP CREATIVE_TESTING study. This will be a full update.",
        "tags": [
          "Measurement"
        ]
      }
    },
    "/dsp/measurement/studies/creativeTesting/{studyId}/result": {
      "get": {
        "description": "Get result of a DSP CREATIVE_TESTING study. Returns 200 successful response if json resource is requested in Accept header. Returns a 307 Temporary Redirect response if any of the file types is requested and response includes a location header with the value set to an AWS S3 path where the result is located. The path expires after 60 seconds.\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"campaign_view\"]",
        "operationId": "GetDSPCreativeTestingStudyResult",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "$ref": "#/components/parameters/advertiserIdHeader"
          },
          {
            "description": "The version(s) of the requested resource. Available version(s) - `application/vnd.measurementresult.v1.2+json`, `text/vnd.measurementresult.v1.2+csv`.",
            "in": "header",
            "name": "Accept",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The canonical identifier that represents a unique study.",
            "in": "path",
            "name": "studyId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreativeTestingStudyResultV1M2"
                }
              }
            },
            "description": "Successful operation."
          },
          "307": {
            "description": "Successful operation for downloading result file.",
            "headers": {
              "Location": {
                "description": "Redirect URI with S3 file location containing result data.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Bad Request or request body is not matching with input model."
          },
          "401": {
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unauthenticated request."
          },
          "403": {
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Forbidden - Request failed because user is not authorized to access a resource."
          },
          "404": {
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user."
          },
          "415": {
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unsupported Media Type - Version not supported."
          },
          "429": {
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Too Many Requests - Request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "summary": "Get result of a DSP CREATIVE_TESTING study.",
        "tags": [
          "Measurement"
        ]
      }
    },
    "/dsp/measurement/studies/omnichannelMetrics": {
      "get": {
        "description": "Gets one or more DSP OMNICHANNEL_METRICS studies with requested study identifiers or an advertiser identifier.\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"campaign_view\"]",
        "operationId": "GetDSPOmnichannelMetricsStudies",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "$ref": "#/components/parameters/advertiserIdHeader"
          },
          {
            "description": "Study canonical identifier to filter with. Either one of studyIds or advertiserId should be provided.",
            "explode": false,
            "in": "query",
            "name": "studyIds",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "maxItems": 50,
              "minItems": 1,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "The advertiser canonical identifier. Either one of studyIdFilters or advertiserId should be provided.",
            "in": "query",
            "name": "advertiserId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "schema": {
              "default": 10,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedDSPOmnichannelMetricsStudiesV1M2"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedDSPOmnichannelMetricsStudiesV1M3"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Bad Request or request body is not matching with input model."
          },
          "401": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unauthenticated request."
          },
          "403": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Forbidden - Request failed because user is not authorized to access a resource."
          },
          "404": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user."
          },
          "415": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unsupported Media Type - Version not supported."
          },
          "429": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Too Many Requests - Request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "summary": "Gets one or more DSP OMNICHANNEL_METRICS studies with requested study identifiers or an advertiser identifier.",
        "tags": [
          "Measurement"
        ]
      },
      "post": {
        "description": "Create new DSP OMNICHANNEL_METRICS studies.\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"campaign_edit\"]",
        "operationId": "CreateDSPOmnichannelMetricsStudies",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "$ref": "#/components/parameters/advertiserIdHeader"
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.studymanagement.v1.2+json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/DSPOmnichannelMetricsStudyV1M2"
                },
                "maxItems": 1,
                "minItems": 1,
                "type": "array"
              }
            },
            "application/vnd.studymanagement.v1.3+json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/DSPOmnichannelMetricsStudyV1M3"
                },
                "maxItems": 1,
                "minItems": 1,
                "type": "array"
              }
            }
          },
          "description": "An array of study objects. For each object, specify required fields and their values. Maximum length of the array is 1."
        },
        "responses": {
          "207": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyResponsesV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyResponsesV1"
                }
              }
            },
            "description": "Multi-status."
          },
          "401": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unauthenticated request."
          },
          "403": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Forbidden - Request failed because user is not authorized to access a resource."
          },
          "404": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user."
          },
          "415": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unsupported Media Type - Version not supported."
          },
          "429": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Too Many Requests - Request was rate-limited. Retry later."
          }
        },
        "summary": "Create new DSP OMNICHANNEL_METRICS studies.",
        "tags": [
          "Measurement"
        ]
      },
      "put": {
        "description": "Update DSP OMNICHANNEL_METRICS studies. This will be a full update.\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"campaign_edit\"]",
        "operationId": "UpdateDSPOmnichannelMetricsStudies",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "$ref": "#/components/parameters/advertiserIdHeader"
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.studymanagement.v1.2+json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/DSPOmnichannelMetricsStudyV1M2"
                },
                "maxItems": 1,
                "minItems": 1,
                "type": "array"
              }
            },
            "application/vnd.studymanagement.v1.3+json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/DSPOmnichannelMetricsStudyV1M3"
                },
                "maxItems": 1,
                "minItems": 1,
                "type": "array"
              }
            }
          },
          "description": "An array of measurement objects. For each object, specify required fields and their values. Maximum length of the array is 1."
        },
        "responses": {
          "207": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyResponsesV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyResponsesV1"
                }
              }
            },
            "description": "Multi-status."
          },
          "401": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unauthenticated request."
          },
          "403": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Forbidden - Request failed because user is not authorized to access a resource."
          },
          "404": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user."
          },
          "415": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unsupported Media Type - Version not supported."
          },
          "429": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Too Many Requests - Request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "summary": "Update DSP OMNICHANNEL_METRICS studies. This will be a full update.",
        "tags": [
          "Measurement"
        ]
      }
    },
    "/dsp/measurement/studies/omnichannelMetrics/{studyId}/result": {
      "get": {
        "description": "Get result of a DSP OMNICHANNEL_METRICS study. Returns a 307 Temporary Redirect response if any of the file types is requested and response includes a location header with the value set to an AWS S3 path where the result is located. The path expires after 60 seconds. Accept header does not support json for OMNICHANNEL_METRICS study type.\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"campaign_view\"]",
        "operationId": "GetDSPOmnichannelMetricsStudyResult",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "$ref": "#/components/parameters/advertiserIdHeader"
          },
          {
            "description": "The version(s) of the requested resource. Available version(s) - `text/vnd.measurementresult.v1+xlsx`",
            "in": "header",
            "name": "Accept",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The canonical identifier that represents a unique study.",
            "in": "path",
            "name": "studyId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "307": {
            "description": "Successful operation for downloading result file.",
            "headers": {
              "Location": {
                "description": "Redirect URI with S3 file location containing result data.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementresult.v1.3+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Bad Request or request body is not matching with input model."
          },
          "401": {
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementresult.v1.3+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unauthenticated request."
          },
          "403": {
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementresult.v1.3+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Forbidden - Request failed because user is not authorized to access a resource."
          },
          "404": {
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementresult.v1.3+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user."
          },
          "415": {
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementresult.v1.3+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unsupported Media Type - Version not supported."
          },
          "429": {
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementresult.v1.3+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Too Many Requests - Request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementresult.v1.3+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "summary": "Get result of a DSP OMNICHANNEL_METRICS study.",
        "tags": [
          "Measurement"
        ]
      }
    },
    "/measurement/planning/eligibility": {
      "post": {
        "description": "Checks eligibility against all vendor products.\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"campaign_view\"]",
        "operationId": "CheckPlanningEligibility",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/advertiserIdHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "schema": {
              "default": 10,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.measurementeligibility.v1.1+json": {
              "schema": {
                "$ref": "#/components/schemas/PlanningEligibilityRequestV1M3"
              }
            },
            "application/vnd.measurementeligibility.v1.3+json": {
              "schema": {
                "$ref": "#/components/schemas/PlanningEligibilityRequestV1M3"
              }
            }
          },
          "description": "Fetch measurement vendor products request object."
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.measurementeligibility.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanningEligibilityResponseV1M3"
                }
              },
              "application/vnd.measurementeligibility.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanningEligibilityResponseV1M3"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/vnd.measurementeligibility.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementeligibility.v1.3+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Bad Request or request body is not matching with input model."
          },
          "401": {
            "content": {
              "application/vnd.measurementeligibility.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementeligibility.v1.3+json": {
                "example": {
                  "message": "Unauthenticated Request.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unauthenticated request."
          },
          "403": {
            "content": {
              "application/vnd.measurementeligibility.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementeligibility.v1.3+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed."
                    }
                  ],
                  "message": "Unauthorized Access.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Forbidden - Request failed because user is not authorized to access a resource."
          },
          "404": {
            "content": {
              "application/vnd.measurementeligibility.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementeligibility.v1.3+json": {
                "example": {
                  "message": "Resource Not Found.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user."
          },
          "415": {
            "content": {
              "application/vnd.measurementeligibility.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementeligibility.v1.3+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unsupported Media Type - Version not supported."
          },
          "429": {
            "content": {
              "application/vnd.measurementeligibility.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementeligibility.v1.3+json": {
                "example": {
                  "message": "Too Many Requests.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Too Many Requests - Request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.measurementeligibility.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementeligibility.v1.3+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "summary": "Checks eligibility against all vendor products.",
        "tags": [
          "Measurement"
        ]
      }
    },
    "/measurement/studies": {
      "delete": {
        "description": "Cancel existing studies.\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"campaign_view\"]",
        "operationId": "CancelMeasurementStudies",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/advertiserIdHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "description": "Study canonical identifiers to cancel.",
            "explode": false,
            "in": "query",
            "name": "studyIds",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "maxItems": 1,
              "minItems": 1,
              "type": "array"
            },
            "style": "form"
          }
        ],
        "responses": {
          "207": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyResponsesV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyResponsesV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyResponsesV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyResponsesV1"
                }
              }
            },
            "description": "Multi-status."
          },
          "400": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Bad Request or request body is not matching with input model."
          },
          "401": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unauthenticated request."
          },
          "403": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Forbidden - Request failed because user is not authorized to access a resource."
          },
          "404": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user."
          },
          "415": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unsupported Media Type - Version not supported."
          },
          "429": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Too Many Requests - Request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "summary": "Cancel existing studies. Once a study is cancelled it can not be resumed again.",
        "tags": [
          "Measurement"
        ]
      },
      "get": {
        "description": "Gets base study objects given a list of studyIds or a list of advertiserIds.\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"campaign_view\"]",
        "operationId": "GetStudies",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/advertiserIdHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "description": "Study canonical identifier to filter with. Either one of studyIds or advertiserId should be provided.",
            "explode": false,
            "in": "query",
            "name": "studyIds",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "maxItems": 50,
              "minItems": 1,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "The advertiser canonical identifier. Either one of studyIds or advertiserId should be provided.",
            "in": "query",
            "name": "advertiserId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "schema": {
              "default": 10,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBaseStudiesV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBaseStudiesV1M1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBaseStudiesV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBaseStudiesV1M1"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Bad Request or request body is not matching with input model."
          },
          "401": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unauthenticated request."
          },
          "403": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Forbidden - Request failed because user is not authorized to access a resource."
          },
          "404": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user."
          },
          "415": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unsupported Media Type - Version not supported."
          },
          "429": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Too Many Requests - Request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "summary": "Gets base study objects given a list of studyIds or a list of advertiserIds.",
        "tags": [
          "Measurement"
        ]
      }
    },
    "/measurement/studies/brandLift/{studyId}/result": {
      "get": {
        "description": "Get result of a DSP BRAND_LIFT study. Returns 200 successful response if json resource is requested in Accept header. Returns a 307 Temporary Redirect response if any of the file types is requested and response includes a location header with the value set to an AWS S3 path where the result is located. The path expires after 60 seconds.\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"campaign_view\"]",
        "operationId": "GetDSPBrandLiftStudyResult",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/advertiserIdHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "description": "The version(s) of the requested resource. Available version(s) - `application/vnd.measurementresult.v1+json`, `application/vnd.measurementresult.v1.1+json`, `text/vnd.measurementresult.v1+csv`",
            "in": "header",
            "name": "Accept",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The canonical identifier that represents a unique study.",
            "in": "path",
            "name": "studyId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.measurementresult.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandLiftStudyResultV1"
                }
              },
              "application/vnd.measurementresult.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandLiftStudyResultV1M1"
                }
              }
            },
            "description": "Successful operation."
          },
          "307": {
            "description": "Successful operation for downloading result file.",
            "headers": {
              "Location": {
                "description": "Redirect URI with S3 file location containing result data.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/vnd.measurementresult.v1+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementresult.v1.1+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Bad Request or request body is not matching with input model."
          },
          "401": {
            "content": {
              "application/vnd.measurementresult.v1+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementresult.v1.1+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unauthenticated request."
          },
          "403": {
            "content": {
              "application/vnd.measurementresult.v1+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementresult.v1.1+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Forbidden - Request failed because user is not authorized to access a resource."
          },
          "404": {
            "content": {
              "application/vnd.measurementresult.v1+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementresult.v1.1+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user."
          },
          "415": {
            "content": {
              "application/vnd.measurementresult.v1+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementresult.v1.1+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unsupported Media Type - Version not supported."
          },
          "429": {
            "content": {
              "application/vnd.measurementresult.v1+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementresult.v1.1+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Too Many Requests - Request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.measurementresult.v1+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementresult.v1.1+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "summary": "Get result of a DSP BRAND_LIFT study.",
        "tags": [
          "Measurement"
        ]
      }
    },
    "/measurement/studies/surveys": {
      "get": {
        "description": "Gets one or more study surveys with requested survey identifiers or a study identifier.\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"campaign_view\"]",
        "operationId": "GetSurveys",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/advertiserIdHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "description": "Survey canonical identifier to filter with. Either one of surveyIds or studyId should be provided.",
            "explode": false,
            "in": "query",
            "name": "surveyIds",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "maxItems": 50,
              "minItems": 1,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "A study canonical identifier. Either one of surveyIds or studyId should be provided.",
            "in": "query",
            "name": "studyId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "schema": {
              "default": 10,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedSurveysV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedSurveysV1M1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedSurveysV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedSurveysV1M1"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Bad Request or request body is not matching with input model."
          },
          "401": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unauthenticated request."
          },
          "403": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Forbidden - Request failed because user is not authorized to access a resource."
          },
          "404": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user."
          },
          "415": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unsupported Media Type - Version not supported."
          },
          "429": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Too Many Requests - Request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "summary": "Gets one or more study surveys with requested survey identifiers or a study identifier.",
        "tags": [
          "Measurement"
        ]
      },
      "post": {
        "description": "Create new study surveys.\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"campaign_view\"]",
        "operationId": "CreateSurveys",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/advertiserIdHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.studymanagement.v1+json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/SurveyV1"
                },
                "maxItems": 1,
                "minItems": 1,
                "type": "array"
              }
            },
            "application/vnd.studymanagement.v1.1+json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/SurveyV1M1"
                },
                "maxItems": 1,
                "minItems": 1,
                "type": "array"
              }
            },
            "application/vnd.studymanagement.v1.2+json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/SurveyV1"
                },
                "maxItems": 1,
                "minItems": 1,
                "type": "array"
              }
            },
            "application/vnd.studymanagement.v1.3+json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/SurveyV1M1"
                },
                "maxItems": 1,
                "minItems": 1,
                "type": "array"
              }
            }
          },
          "description": "An array of measurement objects. For each object, specify required fields and their values. Maximum length of the array is 1."
        },
        "responses": {
          "207": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyResponsesV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyResponsesV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyResponsesV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyResponsesV1"
                }
              }
            },
            "description": "Multi-status."
          },
          "401": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unauthenticated request."
          },
          "403": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Forbidden - Request failed because user is not authorized to access a resource."
          },
          "404": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user."
          },
          "415": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unsupported Media Type - Version not supported."
          },
          "429": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Too Many Requests - Request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "summary": "Create new study surveys.",
        "tags": [
          "Measurement"
        ]
      },
      "put": {
        "description": "Update measurement surveys. This will be a full update.\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"campaign_view\"]",
        "operationId": "UpdateSurveys",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/advertiserIdHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.studymanagement.v1+json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/SurveyV1"
                },
                "maxItems": 1,
                "minItems": 1,
                "type": "array"
              }
            },
            "application/vnd.studymanagement.v1.1+json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/SurveyV1M1"
                },
                "maxItems": 1,
                "minItems": 1,
                "type": "array"
              }
            },
            "application/vnd.studymanagement.v1.2+json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/SurveyV1"
                },
                "maxItems": 1,
                "minItems": 1,
                "type": "array"
              }
            },
            "application/vnd.studymanagement.v1.3+json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/SurveyV1M1"
                },
                "maxItems": 1,
                "minItems": 1,
                "type": "array"
              }
            }
          },
          "description": "An array of survey objects. For each object, specify required fields and their values. Maximum length of the array is 1."
        },
        "responses": {
          "207": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyResponsesV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyResponsesV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyResponsesV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyResponsesV1"
                }
              }
            },
            "description": "Multi-status."
          },
          "401": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unauthenticated request."
          },
          "403": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Forbidden - Request failed because user is not authorized to access a resource."
          },
          "404": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user."
          },
          "415": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unsupported Media Type - Version not supported."
          },
          "429": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Too Many Requests - Request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.studymanagement.v1+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.1+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "summary": "Update measurement surveys. This will be a full update.",
        "tags": [
          "Measurement"
        ]
      }
    },
    "/measurement/vendorProducts/list": {
      "post": {
        "description": "Lists the supported measurement vendors products.\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"campaign_view\"]",
        "operationId": "vendorProduct",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "$ref": "#/components/parameters/advertiserIdHeader"
          },
          {
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "in": "query",
            "name": "nextToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "schema": {
              "default": 10,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.measurementvendor.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/VendorProductRequestV1"
              }
            },
            "application/vnd.measurementvendor.v1.1+json": {
              "schema": {
                "$ref": "#/components/schemas/VendorProductRequestV1M1"
              }
            }
          },
          "description": "Fetch measurement vendor products request object."
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.measurementvendor.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedVendorProductsV1"
                }
              },
              "application/vnd.measurementvendor.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedVendorProductsV1M1"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/vnd.measurementvendor.v1+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementvendor.v1.1+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Bad Request or request body is not matching with input model."
          },
          "401": {
            "content": {
              "application/vnd.measurementvendor.v1+json": {
                "example": {
                  "message": "Unauthenticated Request.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementvendor.v1.1+json": {
                "example": {
                  "message": "Unauthenticated Request.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unauthenticated request."
          },
          "403": {
            "content": {
              "application/vnd.measurementvendor.v1+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed."
                    }
                  ],
                  "message": "Unauthorized Access.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementvendor.v1.1+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed."
                    }
                  ],
                  "message": "Unauthorized Access.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Forbidden - Request failed because user is not authorized to access a resource."
          },
          "404": {
            "content": {
              "application/vnd.measurementvendor.v1+json": {
                "example": {
                  "message": "Resource Not Found.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementvendor.v1.1+json": {
                "example": {
                  "message": "Resource Not Found.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user."
          },
          "415": {
            "content": {
              "application/vnd.measurementvendor.v1+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementvendor.v1.1+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unsupported Media Type - Version not supported."
          },
          "429": {
            "content": {
              "application/vnd.measurementvendor.v1+json": {
                "example": {
                  "message": "Too Many Requests.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementvendor.v1.1+json": {
                "example": {
                  "message": "Too Many Requests.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Too Many Requests - Request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.measurementvendor.v1+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementvendor.v1.1+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "summary": "Lists the supported measurement vendor products.",
        "tags": [
          "Measurement"
        ]
      }
    },
    "/measurement/vendorProducts/omnichannelMetrics/brands/list": {
      "post": {
        "description": "Search for brands to be used in the OMNICHANNEL_METRICS vendor product.\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"campaign_view\"]",
        "operationId": "omnichannelMetricsBrandSearch",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "$ref": "#/components/parameters/advertiserIdHeader"
          },
          {
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "in": "query",
            "name": "nextToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sets the maximum number of brands in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "schema": {
              "default": 10,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.ocmbrands.v1.2+json": {
              "schema": {
                "$ref": "#/components/schemas/OmnichannelMetricsBrandSearchRequestV1M2"
              }
            },
            "application/vnd.ocmbrands.v1.3+json": {
              "schema": {
                "$ref": "#/components/schemas/OmnichannelMetricsBrandSearchRequestV1M2"
              }
            }
          },
          "description": "Fetch measurement vendor products request object."
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.ocmbrands.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedOmnichannelMetricsBrandsV1M2"
                }
              },
              "application/vnd.ocmbrands.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedOmnichannelMetricsBrandsV1M2"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/vnd.ocmbrands.v1.2+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.ocmbrands.v1.3+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Bad Request or request body is not matching with input model."
          },
          "401": {
            "content": {
              "application/vnd.ocmbrands.v1.2+json": {
                "example": {
                  "message": "Unauthenticated Request.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.ocmbrands.v1.3+json": {
                "example": {
                  "message": "Unauthenticated Request.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unauthenticated request."
          },
          "403": {
            "content": {
              "application/vnd.ocmbrands.v1.2+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed."
                    }
                  ],
                  "message": "Unauthorized Access.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.ocmbrands.v1.3+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed."
                    }
                  ],
                  "message": "Unauthorized Access.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Forbidden - Request failed because user is not authorized to access a resource."
          },
          "404": {
            "content": {
              "application/vnd.ocmbrands.v1.2+json": {
                "example": {
                  "message": "Resource Not Found.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.ocmbrands.v1.3+json": {
                "example": {
                  "message": "Resource Not Found.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user."
          },
          "415": {
            "content": {
              "application/vnd.ocmbrands.v1.2+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.ocmbrands.v1.3+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unsupported Media Type - Version not supported."
          },
          "429": {
            "content": {
              "application/vnd.ocmbrands.v1.2+json": {
                "example": {
                  "message": "Too Many Requests.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.ocmbrands.v1.3+json": {
                "example": {
                  "message": "Too Many Requests.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Too Many Requests - Request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.ocmbrands.v1.2+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.ocmbrands.v1.3+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "summary": "Search for brands to be used in the OMNICHANNEL_METRICS vendor product.",
        "tags": [
          "Measurement"
        ]
      }
    },
    "/measurement/vendorProducts/policies": {
      "get": {
        "description": "Gets the policies for the specific vendor product(s).\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"campaign_view\"]",
        "operationId": "vendorProductPolicy",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/advertiserIdHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "description": "Vendor product canonical identifier to filter with.",
            "explode": false,
            "in": "query",
            "name": "vendorProductIds",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "maxItems": 50,
              "minItems": 1,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "schema": {
              "default": 10,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.measurementvendor.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedVendorProductPoliciesV1"
                }
              },
              "application/vnd.measurementvendor.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedVendorProductPoliciesV1M1"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/vnd.measurementvendor.v1+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementvendor.v1.1+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Bad Request or request body is not matching with input model."
          },
          "401": {
            "content": {
              "application/vnd.measurementvendor.v1+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementvendor.v1.1+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unauthenticated request."
          },
          "403": {
            "content": {
              "application/vnd.measurementvendor.v1+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementvendor.v1.1+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Forbidden - Request failed because user is not authorized to access a resource."
          },
          "404": {
            "content": {
              "application/vnd.measurementvendor.v1+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementvendor.v1.1+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user."
          },
          "415": {
            "content": {
              "application/vnd.measurementvendor.v1+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementvendor.v1.1+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unsupported Media Type - Version not supported."
          },
          "429": {
            "content": {
              "application/vnd.measurementvendor.v1+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementvendor.v1.1+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Too Many Requests - Request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.measurementvendor.v1+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementvendor.v1.1+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "summary": "Gets the policies for the specific vendor product(s).",
        "tags": [
          "Measurement"
        ]
      }
    },
    "/measurement/vendorProducts/surveyQuestionTemplates": {
      "get": {
        "description": "Gets the survey question templates for the specific vendor product(s).\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"campaign_view\"]",
        "operationId": "vendorProductSurveyQuestionTemplates",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/advertiserIdHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "description": "Vendor product canonical identifier to filter with.",
            "explode": false,
            "in": "query",
            "name": "vendorProductIds",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "maxItems": 50,
              "minItems": 1,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Vendor product survey question template identifier to filter with.",
            "explode": false,
            "in": "query",
            "name": "surveyQuestionTemplateIds",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "maxItems": 50,
              "minItems": 1,
              "type": "array"
            },
            "style": "form"
          },
          {
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "in": "query",
            "name": "nextToken",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "in": "query",
            "name": "maxResults",
            "required": false,
            "schema": {
              "default": 10,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.measurementvendor.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedSurveyQuestionTemplatesV1"
                }
              },
              "application/vnd.measurementvendor.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedSurveyQuestionTemplatesV1M1"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/vnd.measurementvendor.v1+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementvendor.v1.1+json": {
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Bad Request or request body is not matching with input model."
          },
          "401": {
            "content": {
              "application/vnd.measurementvendor.v1+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementvendor.v1.1+json": {
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unauthenticated request."
          },
          "403": {
            "content": {
              "application/vnd.measurementvendor.v1+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementvendor.v1.1+json": {
                "example": {
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ],
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Forbidden - Request failed because user is not authorized to access a resource."
          },
          "404": {
            "content": {
              "application/vnd.measurementvendor.v1+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementvendor.v1.1+json": {
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user."
          },
          "415": {
            "content": {
              "application/vnd.measurementvendor.v1+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementvendor.v1.1+json": {
                "example": {
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource.",
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Unsupported Media Type - Version not supported."
          },
          "429": {
            "content": {
              "application/vnd.measurementvendor.v1+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementvendor.v1.1+json": {
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Too Many Requests - Request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.measurementvendor.v1+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              },
              "application/vnd.measurementvendor.v1.1+json": {
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "summary": "Gets the survey question templates for the specific vendor product(s).",
        "tags": [
          "Measurement"
        ]
      }
    }
  }
}