{
  "components": {
    "callbacks": {},
    "examples": {},
    "headers": {},
    "links": {},
    "parameters": {},
    "requestBodies": {},
    "responses": {},
    "schemas": {
      "AmcpLinkAddConnectionV1RequestContent": {
        "description": "Add Connection request.",
        "properties": {
          "amcAccountId": {
            "description": "AMC Account identifier to connect.",
            "type": "string"
          },
          "amcAccountMarketplaceId": {
            "description": "Connected AMC Account Marketplace identifier.",
            "type": "string"
          },
          "amcInstanceId": {
            "description": "AMC Instance identifier to connect.",
            "type": "string"
          },
          "connectionId": {
            "description": "An unique identifier for the connection. This will be auto-generated if not provided in the request.",
            "type": "string"
          },
          "dspAdvertiserId": {
            "description": "DSP Advertiser identifier to connect.",
            "type": "string"
          },
          "dspProfileId": {
            "description": "DSP Profile identifier.",
            "type": "string"
          },
          "isDefault": {
            "description": "Flag indicating if this is the Default Connection for this Customer who is creating the Connection. The system will ensure to have at least 1 default connection.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "AmcpLinkAddConnectionV1ResponseContent": {
        "description": "Add Connection response.",
        "properties": {
          "connectionId": {
            "description": "Identifier of the connection that was created.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AmcpLinkAddConnectionV2RequestContent": {
        "description": "Add Connection request.",
        "properties": {
          "amcAccountId": {
            "description": "AMC Account identifier to connect.",
            "type": "string"
          },
          "amcAccountMarketplaceId": {
            "description": "Connected AMC Account Marketplace identifier.",
            "type": "string"
          },
          "amcInstanceId": {
            "description": "AMC Instance identifier to connect.",
            "type": "string"
          },
          "connectionId": {
            "description": "An unique identifier for the connection. This will be auto-generated if not provided in the request.",
            "type": "string"
          },
          "dspAdvertiserId": {
            "description": "DSP Advertiser identifier to connect.",
            "type": "string"
          },
          "dspProfileId": {
            "description": "DSP Profile identifier.",
            "type": "string"
          },
          "isDefault": {
            "description": "Flag indicating if this is the Default Connection for this Customer who is creating the Connection. The system will ensure to have at least 1 default connection.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "AmcpLinkAddConnectionV2ResponseContent": {
        "description": "Add Connection response.",
        "properties": {
          "connectionId": {
            "description": "Identifier of the connection that was created.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AmcpLinkAmcAccount": {
        "description": "AMC Account details.",
        "properties": {
          "accountId": {
            "description": "AMC Account identifier.",
            "type": "string"
          },
          "accountName": {
            "description": "AMC Account name.",
            "type": "string"
          },
          "marketplaceId": {
            "description": "Obfuscated Marketplace Id.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AmcpLinkAmcDataSource": {
        "description": "Details of Advertising products that feeds data to an AMC Instance.",
        "properties": {
          "id": {
            "description": "Identifier of the entity.",
            "type": "string"
          },
          "name": {
            "description": "Name of the entity.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AmcpLinkAmcInstance": {
        "description": "AMC Instance details.",
        "properties": {
          "accountId": {
            "description": "AMC Account identifier.",
            "type": "string"
          },
          "accountName": {
            "description": "AMC Account name.",
            "type": "string"
          },
          "creationDateTime": {
            "description": "Creation DateTime.",
            "format": "date-time",
            "type": "string"
          },
          "creationStatus": {
            "description": "Creation status of the AMC instance.",
            "type": "string"
          },
          "dspAdvertisers": {
            "description": "List of DSP Advertisers feeding to this AMC Instance.",
            "items": {
              "$ref": "#/components/schemas/AmcpLinkAmcDataSource"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "instanceId": {
            "description": "AMC Instance identifier.",
            "type": "string"
          },
          "instanceName": {
            "description": "AMC Instance name.",
            "type": "string"
          },
          "marketplaceId": {
            "description": "Obfuscated Marketplace Id.",
            "type": "string"
          },
          "sizmek": {
            "description": "List of Sizmek Ad Suites feeding to this AMC Instance.",
            "items": {
              "$ref": "#/components/schemas/AmcpLinkAmcDataSource"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "sponsoredAds": {
            "description": "List of Sponsored Ads feeding to this AMC Instance.",
            "items": {
              "$ref": "#/components/schemas/AmcpLinkAmcDataSource"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "AmcpLinkBadRequestExceptionResponseContent": {
        "description": "Bad Request.",
        "properties": {
          "message": {
            "description": "Error message.",
            "type": "string"
          },
          "requestId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AmcpLinkBatchListConnectionsRequestContent": {
        "description": "Request to get connections between the Partner and Advertiser.",
        "properties": {
          "connectionIds": {
            "description": "List of connection IDs.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "AmcpLinkBatchListConnectionsResponseContent": {
        "description": "List of Partner Connections with an Advertiser's AMC Instances and DSP Advertisers.",
        "properties": {
          "connections": {
            "description": "List of Partner Connection.",
            "items": {
              "$ref": "#/components/schemas/AmcpLinkConnection"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "AmcpLinkConnection": {
        "description": "Partner Connection Detail.",
        "properties": {
          "amcAccountId": {
            "description": "Connected AMC Account identifier.",
            "type": "string"
          },
          "amcAccountMarketplaceId": {
            "description": "Connected AMC Account Marketplace identifier.",
            "type": "string"
          },
          "amcAccountName": {
            "description": "Connected AMC Account Name.",
            "type": "string"
          },
          "amcInstanceId": {
            "description": "Connected AMC Instance identifier.",
            "type": "string"
          },
          "amcInstanceName": {
            "description": "Connected AMC Instance Name.",
            "type": "string"
          },
          "clientId": {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "type": "string"
          },
          "connectionId": {
            "description": "Unique identifier of the connection.",
            "type": "string"
          },
          "creationDateTime": {
            "description": "Timestamp for record creation.",
            "format": "date-time",
            "type": "string"
          },
          "customerId": {
            "description": "Id of the Customer.",
            "type": "string"
          },
          "dataUploadAwsAccountId": {
            "description": "DataUploadAwsId Associated with the connectionId",
            "type": "string"
          },
          "dspAdvertiserCountryCode": {
            "description": "Connected DSP Advertiser Country Code.",
            "type": "string"
          },
          "dspAdvertiserId": {
            "description": "Connected DSP Advertiser identifier.",
            "type": "string"
          },
          "dspAdvertiserMarketplaceId": {
            "description": "Connected DSP Advertiser MarketplaceId.",
            "type": "string"
          },
          "dspAdvertiserName": {
            "description": "Connected DSP Advertiser Name.",
            "type": "string"
          },
          "dspAdvertiserRegion": {
            "description": "Connected DSP Advertiser Retail Region.",
            "type": "string"
          },
          "dspProfileId": {
            "description": "DSP Advertiser identifier.",
            "type": "string"
          },
          "isDefault": {
            "description": "Is Default Connection.",
            "type": "boolean"
          },
          "modifiedDateTime": {
            "description": "Timestamp for record modification.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AmcpLinkDspAdvertiser": {
        "description": "DSP Advertiser details.",
        "properties": {
          "accountId": {
            "description": "Account Identifier for sellers and vendors. Note that this value is not unique and may be the same across marketplace.",
            "type": "string"
          },
          "accountName": {
            "description": "Advertiser Account Name.",
            "type": "string"
          },
          "accountType": {
            "description": "The seller and vendor account types are associated with Sponsored Ads APIs. The agency account type is associated with DSP and Data Provider APIs.",
            "type": "string"
          },
          "countryCode": {
            "description": "Country Code.",
            "type": "string"
          },
          "dspAdvertiserId": {
            "description": "The DSP Advertiser identifier.",
            "type": "string"
          },
          "dspAdvertiserName": {
            "description": "The DSP Advertiser name.",
            "type": "string"
          },
          "marketplaceId": {
            "description": "The identifier of the marketplace to which the account is associated.",
            "type": "string"
          },
          "profileId": {
            "description": "Advertiser Profile Id.",
            "type": "number"
          }
        },
        "type": "object"
      },
      "AmcpLinkForbiddenRequestExceptionResponseContent": {
        "description": "Forbidden. The request failed because the user does not have access to the specified resource.",
        "properties": {
          "message": {
            "description": "Error message.",
            "type": "string"
          },
          "requestId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AmcpLinkGetConnectionsV1ResponseContent": {
        "description": "List of Partner Connections with an Advertiser's AMC Instances and DSP Advertisers.",
        "properties": {
          "connections": {
            "description": "List of Partner Connection.",
            "items": {
              "$ref": "#/components/schemas/AmcpLinkConnection"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "AmcpLinkGetConnectionsV2ResponseContent": {
        "description": "List of Partner Connections with an Advertiser's AMC Instances and DSP Advertisers.",
        "properties": {
          "connections": {
            "description": "List of Partner Connection.",
            "items": {
              "$ref": "#/components/schemas/AmcpLinkConnection"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "AmcpLinkGetTermsV1ResponseContent": {
        "description": "Get Terms response.",
        "properties": {
          "agreementContent": {
            "description": "The terms and conditions agreement content.",
            "type": "string"
          },
          "agreementToken": {
            "description": "The terms and conditions agreement token. Required to accept an agreement.",
            "type": "string"
          },
          "hasAccepted": {
            "description": "Flag indicating whether the Customer has accepted the AMC Terms and Conditions.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "AmcpLinkGetTermsV2ResponseContent": {
        "description": "Get Terms response.",
        "properties": {
          "agreementContent": {
            "description": "The terms and conditions agreement content.",
            "type": "string"
          },
          "agreementToken": {
            "description": "The terms and conditions agreement token. Required to accept an agreement.",
            "type": "string"
          },
          "hasAccepted": {
            "description": "Flag indicating whether the Customer has accepted the AMC Terms and Conditions.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "AmcpLinkListAmcAccountsResponseContent": {
        "description": "List of AMC Accounts.",
        "properties": {
          "amcAccounts": {
            "description": "List of AMC Accounts.",
            "items": {
              "$ref": "#/components/schemas/AmcpLinkAmcAccount"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "description": "Optional. Token to use in subsequent request to retrieve next page of results. Null if all results have been returned.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AmcpLinkListAmcInstancesResponseContent": {
        "description": "List of AMC Instances.",
        "properties": {
          "amcInstances": {
            "description": "List of AMC Instances.",
            "items": {
              "$ref": "#/components/schemas/AmcpLinkAmcInstance"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "description": "Optional. Token to use in subsequent request to retrieve next page of results. Null if all results have been returned.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AmcpLinkListDspAdvertisersResponseContent": {
        "description": "List of DSP Advertisers. Limited to 100 results.",
        "properties": {
          "dspAdvertisers": {
            "description": "List of DSP advertisers.",
            "items": {
              "$ref": "#/components/schemas/AmcpLinkDspAdvertiser"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "description": "Optional. Token to use in subsequent request to retrieve next page of results. Null if all results have been returned.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AmcpLinkResourceNotFoundExceptionResponseContent": {
        "description": "Not Found. The requested resource does not exist or is not visible for the user.",
        "properties": {
          "message": {
            "description": "Error message.",
            "type": "string"
          },
          "requestId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AmcpLinkServerExceptionResponseContent": {
        "description": "Internal server error. Retry later. Contact support if this response persists.",
        "properties": {
          "message": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AmcpLinkSetTermsAcceptanceV1RequestContent": {
        "description": "Set Terms Acceptance request.",
        "properties": {
          "agreementToken": {
            "description": "The terms and conditions agreement token.",
            "type": "string"
          },
          "hasAccepted": {
            "description": "Flag indicating whether the Customer has accepted the AMC Terms and Conditions. Submitting true will set the customer as having accepted the terms and conditions.",
            "type": "boolean"
          }
        },
        "required": [
          "agreementToken",
          "hasAccepted"
        ],
        "type": "object"
      },
      "AmcpLinkSetTermsAcceptanceV2RequestContent": {
        "description": "Set Terms Acceptance request.",
        "properties": {
          "agreementToken": {
            "description": "The terms and conditions agreement token.",
            "type": "string"
          },
          "hasAccepted": {
            "description": "Flag indicating whether the Customer has accepted the AMC Terms and Conditions. Submitting true will set the customer as having accepted the terms and conditions.",
            "type": "boolean"
          }
        },
        "required": [
          "agreementToken",
          "hasAccepted"
        ],
        "type": "object"
      },
      "AmcpLinkTooManyRequestsExceptionResponseContent": {
        "description": "Too Many Requests. The request was rate-limited. Retry later.",
        "properties": {
          "message": {
            "description": "Error message.",
            "type": "string"
          },
          "requestId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AmcpLinkUnauthorizedRequestExceptionResponseContent": {
        "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
        "properties": {
          "message": {
            "description": "Error message.",
            "type": "string"
          },
          "requestId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AmznConsent": {
        "properties": {
          "amznAdStorage": {
            "$ref": "#/components/schemas/ConsentEnums"
          },
          "amznUserData": {
            "$ref": "#/components/schemas/ConsentEnums"
          }
        },
        "type": "object"
      },
      "AudienceFee": {
        "properties": {
          "cpmCents": {
            "description": "Cost per thousand impressions (CPM) in cents. For example, $1.00 = 100 cents.",
            "type": "number"
          },
          "currency": {
            "$ref": "#/components/schemas/currency"
          }
        },
        "required": [
          "cpmCents",
          "currency"
        ],
        "type": "object"
      },
      "AudienceMetadata": {
        "properties": {
          "audienceFees": {
            "description": "A list of currency keys and costs per impressions (CPM)",
            "items": {
              "$ref": "#/components/schemas/AudienceFee"
            },
            "maxItems": 13,
            "minItems": 1,
            "type": "array"
          },
          "externalAudienceId": {
            "description": "The user-defined audience identifier.",
            "type": "string"
          },
          "ttl": {
            "description": "Time-to-live in seconds. The amount of time the record is associated with the audience.",
            "maximum": 34300800,
            "minimum": 0,
            "type": "number"
          }
        },
        "required": [
          "externalAudienceId"
        ],
        "type": "object"
      },
      "AudienceMetadataUpdate": {
        "properties": {
          "audienceFees": {
            "description": "A list of currency keys and costs per impressions (CPM)",
            "items": {
              "$ref": "#/components/schemas/AudienceFee"
            },
            "maxItems": 13,
            "minItems": 1,
            "type": "array"
          },
          "ttl": {
            "description": "Time-to-live in seconds. The amount of time the record is associated with the audience.",
            "maximum": 34300800,
            "minimum": 0,
            "type": "number"
          }
        },
        "type": "object"
      },
      "AudienceMetadataWithAudienceSize": {
        "properties": {
          "audienceFees": {
            "description": "A list of currency keys and costs per impressions (CPM)",
            "items": {
              "$ref": "#/components/schemas/AudienceFee"
            },
            "maxItems": 13,
            "minItems": 1,
            "type": "array"
          },
          "audienceSize": {
            "$ref": "#/components/schemas/AudienceSize"
          },
          "externalAudienceId": {
            "description": "The user-defined audience identifier.",
            "type": "string"
          },
          "ttl": {
            "description": "Time-to-live in seconds. The amount of time the record is associated with the audience.",
            "maximum": 34300800,
            "minimum": 0,
            "type": "number"
          }
        },
        "required": [
          "externalAudienceId"
        ],
        "type": "object"
      },
      "AudienceSize": {
        "properties": {
          "dspAudienceSize": {
            "description": "The count of records in DSP audience.",
            "type": "number"
          },
          "idResolutionCount": {
            "description": "The number of matched records during id resolution.",
            "type": "number"
          },
          "receivedRecordSize": {
            "description": "The number of records received by ADSP.",
            "type": "number"
          }
        },
        "type": "object"
      },
      "Consent": {
        "properties": {
          "amzn": {
            "$ref": "#/components/schemas/AmznConsent"
          },
          "gpp": {
            "description": "A field to hold a 'Global Privacy Platform (GPP)' string. Optional.",
            "type": "string"
          },
          "tcf": {
            "description": "A field to hold the 'Transparency and Consent Framework (TCF)' string. Optional.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ConsentEnums": {
        "enum": [
          "DENIED",
          "GRANTED",
          "NOT_APPLICABLE",
          "UNKNOWN"
        ],
        "type": "string"
      },
      "CountryCode": {
        "description": "Country Code. Two letter ISO 3166-1 alpha-2",
        "enum": [
          "AD",
          "AE",
          "AF",
          "AG",
          "AI",
          "AL",
          "AM",
          "AN",
          "AO",
          "AQ",
          "AR",
          "AS",
          "AT",
          "AU",
          "AW",
          "AX",
          "AZ",
          "BA",
          "BB",
          "BD",
          "BE",
          "BF",
          "BG",
          "BH",
          "BI",
          "BJ",
          "BL",
          "BM",
          "BN",
          "BO",
          "BQ",
          "BR",
          "BS",
          "BT",
          "BV",
          "BW",
          "BY",
          "BZ",
          "CA",
          "CC",
          "CD",
          "CF",
          "CG",
          "CH",
          "CI",
          "CK",
          "CL",
          "CM",
          "CN",
          "CO",
          "CR",
          "CU",
          "CV",
          "CW",
          "CX",
          "CY",
          "CZ",
          "DE",
          "DJ",
          "DK",
          "DM",
          "DO",
          "DZ",
          "EC",
          "EE",
          "EG",
          "EH",
          "ER",
          "ES",
          "ET",
          "FI",
          "FJ",
          "FK",
          "FM",
          "FO",
          "FR",
          "GA",
          "GB",
          "GD",
          "GE",
          "GF",
          "GG",
          "GH",
          "GI",
          "GL",
          "GM",
          "GN",
          "GP",
          "GQ",
          "GR",
          "GS",
          "GT",
          "GU",
          "GW",
          "GY",
          "HK",
          "HM",
          "HN",
          "HR",
          "HT",
          "HU",
          "ID",
          "IE",
          "IL",
          "IM",
          "IN",
          "IO",
          "IQ",
          "IR",
          "IS",
          "IT",
          "JE",
          "JM",
          "JO",
          "JP",
          "KE",
          "KG",
          "KH",
          "KI",
          "KM",
          "KN",
          "KP",
          "KR",
          "KW",
          "KY",
          "KZ",
          "LA",
          "LB",
          "LC",
          "LI",
          "LK",
          "LR",
          "LS",
          "LT",
          "LU",
          "LV",
          "LY",
          "MA",
          "MC",
          "MD",
          "ME",
          "MF",
          "MG",
          "MH",
          "MK",
          "ML",
          "MM",
          "MN",
          "MO",
          "MP",
          "MQ",
          "MR",
          "MS",
          "MT",
          "MU",
          "MV",
          "MW",
          "MX",
          "MY",
          "MZ",
          "NA",
          "NC",
          "NE",
          "NF",
          "NG",
          "NI",
          "NL",
          "NO",
          "NP",
          "NR",
          "NU",
          "NZ",
          "OM",
          "PA",
          "PE",
          "PF",
          "PG",
          "PH",
          "PK",
          "PL",
          "PM",
          "PN",
          "PR",
          "PS",
          "PT",
          "PW",
          "PY",
          "QA",
          "RE",
          "RO",
          "RS",
          "RU",
          "RW",
          "SA",
          "SB",
          "SC",
          "SD",
          "SE",
          "SG",
          "SH",
          "SI",
          "SJ",
          "SK",
          "SL",
          "SM",
          "SN",
          "SO",
          "SR",
          "SS",
          "ST",
          "SV",
          "SX",
          "SY",
          "SZ",
          "TC",
          "TD",
          "TF",
          "TG",
          "TH",
          "TJ",
          "TK",
          "TL",
          "TM",
          "TN",
          "TO",
          "TR",
          "TT",
          "TV",
          "TW",
          "TZ",
          "UA",
          "UG",
          "UM",
          "UNKNOWN",
          "US",
          "UY",
          "UZ",
          "VA",
          "VC",
          "VE",
          "VG",
          "VI",
          "VN",
          "VU",
          "WF",
          "WS",
          "XK",
          "YE",
          "YT",
          "ZA",
          "ZM",
          "ZW"
        ],
        "type": "string"
      },
      "CreateAudienceBatchMetadataRequestContent": {
        "properties": {
          "records": {
            "items": {
              "$ref": "#/components/schemas/MetadataPayloadObj"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          }
        },
        "required": [
          "records"
        ],
        "type": "object"
      },
      "CreateAudienceBatchMetadataResponseContent": {
        "properties": {
          "jobRequestId": {
            "description": "Unique identifier for job request generated at the server side when an audience is created. When `POST` method is invoked to create audience metadata, a unique identifier is returned.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateAudienceMetadataV1RequestContent": {
        "properties": {
          "countryCode": {
            "$ref": "#/components/schemas/CountryCode"
          },
          "description": {
            "description": "The audience description. Must be an alphanumeric, non-null string between 0 to 1000 characters in length.",
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/AudienceMetadata"
          },
          "name": {
            "description": "The audience name. Must be an alphanumeric string between 10 to 128 characters in length.",
            "maxLength": 128,
            "minLength": 10,
            "type": "string"
          },
          "targetResource": {
            "$ref": "#/components/schemas/TargetResourceMetadata"
          },
          "targetResourceId": {
            "$ref": "#/components/schemas/TargetResourceMetadata"
          }
        },
        "required": [
          "description",
          "metadata",
          "name"
        ],
        "type": "object"
      },
      "CreateAudienceMetadataV1ResponseContent": {
        "properties": {
          "audienceId": {
            "description": "A number value representing the Amazon audience identifier. This is the identifier that is returned during audience creation.",
            "type": "number"
          },
          "externalAudienceId": {
            "description": "The user-defined audience identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateAudienceMetadataV2RequestContent": {
        "properties": {
          "countryCode": {
            "$ref": "#/components/schemas/CountryCode"
          },
          "description": {
            "description": "The audience description. Must be an alphanumeric, non-null string between 0 to 1000 characters in length.",
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/AudienceMetadata"
          },
          "name": {
            "description": "The audience name. Must be an alphanumeric string between 10 to 128 characters in length.",
            "maxLength": 128,
            "minLength": 10,
            "type": "string"
          },
          "targetResource": {
            "$ref": "#/components/schemas/TargetResourceMetadata"
          }
        },
        "required": [
          "description",
          "metadata",
          "name",
          "targetResource"
        ],
        "type": "object"
      },
      "CreateAudienceMetadataV2ResponseContent": {
        "properties": {
          "audienceId": {
            "description": "A number value representing the Amazon audience identifier. This is the identifier that is returned during audience creation.",
            "type": "number"
          },
          "externalAudienceId": {
            "description": "The user-defined audience identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DataCollaborationClientFaultExceptionResponseContent": {
        "description": "Bad Request.",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DataCollaborationClientThrottlingExceptionResponseContent": {
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DataCollaborationInternalServerFaultExceptionResponseContent": {
        "description": "Internal server error.",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DataCollaborationJobNotFoundExceptionResponseContent": {
        "description": "The requested job was not found.",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DataCollaborationNotImplementedServerExceptionResponseContent": {
        "description": "Not implemented server exception.",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Geo": {
        "properties": {
          "countryCode": {
            "$ref": "#/components/schemas/CountryCode"
          },
          "ipAddress": {
            "description": "A String value holding an ipAddress used to determine country for members in this audience. Optional.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetAudienceBatchMetadataResponseContent": {
        "properties": {
          "jobRequestId": {
            "description": "Unique identifier for job request generated at the server side when an audience is created. When `POST` method is invoked to create audience metadata, a unique identifier is returned.",
            "type": "string"
          },
          "jobState": {
            "$ref": "#/components/schemas/jobState"
          },
          "successful": {
            "description": "List of successful jobs",
            "items": {
              "$ref": "#/components/schemas/GetAudienceBatchMetadataResponseSuccessItem"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "unsuccessful": {
            "description": "List of unsuccessful jobs",
            "items": {
              "$ref": "#/components/schemas/GetAudienceBatchMetadataResponseErrorItem"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "GetAudienceBatchMetadataResponseErrorItem": {
        "properties": {
          "countryCode": {
            "description": "A String value representing ISO 3166-1 alpha-2 country code for the members in this audience. Optional.",
            "type": "string"
          },
          "description": {
            "description": "A human-readable description of the error.",
            "type": "string"
          },
          "externalAudienceId": {
            "description": "The user-defined audience identifier.",
            "type": "string"
          },
          "name": {
            "description": "The audience name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetAudienceBatchMetadataResponseSuccessItem": {
        "properties": {
          "audienceId": {
            "description": "A number value representing the Amazon audience identifier. This is the identifier that is returned during audience creation.",
            "type": "number"
          },
          "externalAudienceId": {
            "description": "The user-defined audience identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetAudienceMetadataV1ResponseContent": {
        "properties": {
          "advertiserId": {
            "description": "An identifier for a targeted resource.",
            "type": "number"
          },
          "audienceId": {
            "description": "A number value representing the Amazon audience identifier. This is the identifier that is returned during audience creation.",
            "type": "number"
          },
          "countryCode": {
            "description": "A String value representing ISO 3166-1 alpha-2 country code for the members in this audience. Optional.",
            "type": "string"
          },
          "description": {
            "description": "The audience description. Must be an alphanumeric, non-null string between 0 to 1000 characters in length.",
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/AudienceMetadataWithAudienceSize"
          },
          "name": {
            "description": "The audience name. Must be an alphanumeric string between 10 to 128 characters in length.",
            "maxLength": 128,
            "minLength": 10,
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetAudienceMetadataV2ResponseContent": {
        "properties": {
          "advertiserId": {
            "description": "An identifier for a targeted resource.",
            "type": "number"
          },
          "audienceId": {
            "description": "A number value representing the Amazon audience identifier. This is the identifier that is returned during audience creation.",
            "type": "number"
          },
          "countryCode": {
            "description": "A String value representing ISO 3166-1 alpha-2 country code for the members in this audience. Optional.",
            "type": "string"
          },
          "description": {
            "description": "The audience description. Must be an alphanumeric, non-null string between 0 to 1000 characters in length.",
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/AudienceMetadataWithAudienceSize"
          },
          "name": {
            "description": "The audience name. Must be an alphanumeric string between 10 to 128 characters in length.",
            "maxLength": 128,
            "minLength": 10,
            "type": "string"
          }
        },
        "type": "object"
      },
      "HashedPIIObj": {
        "properties": {
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "postal": {
            "type": "string"
          },
          "state": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ManageAudienceStatusResponseErrorItem": {
        "properties": {
          "audienceId": {
            "description": "An integer value representing the Amazon audience identifier. This is the identifier that is returned during audience creation.",
            "type": "string"
          },
          "error": {
            "description": "Error message describing what happened",
            "type": "string"
          },
          "externalId": {
            "description": "The user-defined audience identifier.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ManageAudienceStatusResponseSuccessSet": {
        "properties": {
          "recordsProcessedRate": {
            "description": "Percent of records submitted that were successfully processed without errors.",
            "type": "number"
          }
        },
        "type": "object"
      },
      "ManageAudienceStatusV1ResponseContent": {
        "properties": {
          "audienceSize": {
            "$ref": "#/components/schemas/AudienceSize"
          },
          "invalidRecords": {
            "items": {
              "$ref": "#/components/schemas/ManageAudienceStatusResponseErrorItem"
            },
            "maxItems": 10000,
            "minItems": 0,
            "type": "array"
          },
          "jobRequestId": {
            "type": "string"
          },
          "jobState": {
            "$ref": "#/components/schemas/jobState"
          },
          "successful": {
            "$ref": "#/components/schemas/ManageAudienceStatusResponseSuccessSet"
          }
        },
        "type": "object"
      },
      "ManageAudienceStatusV2ResponseContent": {
        "properties": {
          "audienceSize": {
            "$ref": "#/components/schemas/AudienceSize"
          },
          "invalidRecords": {
            "items": {
              "$ref": "#/components/schemas/ManageAudienceStatusResponseErrorItem"
            },
            "maxItems": 10000,
            "minItems": 0,
            "type": "array"
          },
          "jobRequestId": {
            "type": "string"
          },
          "jobState": {
            "$ref": "#/components/schemas/jobState"
          },
          "successful": {
            "$ref": "#/components/schemas/ManageAudienceStatusResponseSuccessSet"
          }
        },
        "type": "object"
      },
      "ManageAudienceV1RequestContent": {
        "properties": {
          "audienceId": {
            "description": "An number value representing the Amazon audience identifier. This is the identifier that is returned during audience creation.",
            "type": "number"
          },
          "records": {
            "items": {
              "$ref": "#/components/schemas/PayloadObj"
            },
            "maxItems": 10000,
            "minItems": 1,
            "type": "array"
          },
          "targetResource": {
            "$ref": "#/components/schemas/TargetResourceRecords"
          }
        },
        "required": [
          "audienceId",
          "records"
        ],
        "type": "object"
      },
      "ManageAudienceV1ResponseContent": {
        "properties": {
          "jobRequestId": {
            "description": "Unique identifier for job request generated at the server side when an audience records are uploaded . When `POST` method is invoked to upload audience records, a unique identifier is returned.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ManageAudienceV2RequestContent": {
        "properties": {
          "audienceId": {
            "description": "An number value representing the Amazon audience identifier. This is the identifier that is returned during audience creation.",
            "type": "number"
          },
          "records": {
            "items": {
              "$ref": "#/components/schemas/PayloadObj"
            },
            "maxItems": 10000,
            "minItems": 1,
            "type": "array"
          },
          "targetResource": {
            "$ref": "#/components/schemas/TargetResourceRecords"
          }
        },
        "required": [
          "audienceId",
          "records"
        ],
        "type": "object"
      },
      "ManageAudienceV2ResponseContent": {
        "properties": {
          "jobRequestId": {
            "description": "Unique identifier for job request generated at the server side when an audience records are uploaded . When `POST` method is invoked to upload audience records, a unique identifier is returned.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "MeasurementObj": {
        "type": "object"
      },
      "MetadataPayloadObj": {
        "properties": {
          "countryCode": {
            "description": "A String value representing ISO 3166-1 alpha-2 country code for the members in this audience. Optional.",
            "type": "string"
          },
          "description": {
            "description": "The audience description. Must be an alphanumeric, non-null string between 0 to 1000 characters in length.",
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/AudienceMetadata"
          },
          "name": {
            "description": "The audience name. Must be an alphanumeric string between 10 to 128 characters in length.",
            "maxLength": 128,
            "minLength": 10,
            "type": "string"
          },
          "targetResource": {
            "$ref": "#/components/schemas/TargetResourceMetadata"
          },
          "targetResourceId": {
            "$ref": "#/components/schemas/TargetResourceMetadata"
          }
        },
        "required": [
          "description",
          "metadata",
          "name"
        ],
        "type": "object"
      },
      "PayloadObj": {
        "properties": {
          "action": {
            "$ref": "#/components/schemas/action"
          },
          "countryCode": {
            "description": "A String value representing ISO 3166-1 alpha-2 country code for the members in this audience. Optional.",
            "type": "string"
          },
          "externalUserId": {
            "description": "This is an external user identifier defined by data providers.",
            "pattern": "^[0-9a-zA-Z\\-\\_]{1,128}$",
            "type": "string"
          },
          "hashedPII": {
            "description": "List of hashed personally-identifiable information records to be matched with Amazon identities for future use. All inputs must be properly normalized and SHA-256 hashed.",
            "items": {
              "$ref": "#/components/schemas/HashedPIIObj"
            },
            "maxItems": 100,
            "minItems": 1,
            "type": "array"
          },
          "measurements": {
            "$ref": "#/components/schemas/MeasurementObj"
          },
          "userConsent": {
            "$ref": "#/components/schemas/UserConsent"
          }
        },
        "required": [
          "action",
          "externalUserId",
          "hashedPII"
        ],
        "type": "object"
      },
      "TargetResourceMetadata": {
        "description": "The identifier of the target resource. It can either be a connectionId or advertiserId.",
        "oneOf": [
          {
            "properties": {
              "connectionId": {
                "type": "string"
              }
            },
            "required": [
              "connectionId"
            ],
            "title": "connectionId",
            "type": "object"
          },
          {
            "properties": {
              "advertiserId": {
                "type": "number"
              }
            },
            "required": [
              "advertiserId"
            ],
            "title": "advertiserId",
            "type": "object"
          }
        ]
      },
      "TargetResourceRecords": {
        "description": "Record upload information",
        "properties": {
          "connectionId": {
            "description": "Connection between Partner and Advertiser. If blank or not provided then the default active connection is used.",
            "type": "string"
          },
          "targetTypes": {
            "description": "List of included upload paths.  AMC is always included in this by default",
            "items": {
              "$ref": "#/components/schemas/targetType"
            },
            "maxItems": 1,
            "minItems": 0,
            "type": "array",
            "uniqueItems": true
          }
        },
        "required": [
          "connectionId"
        ],
        "type": "object"
      },
      "UpdateAudienceMetadataV1RequestContent": {
        "properties": {
          "description": {
            "description": "The audience description. Must be an alphanumeric, non-null string between 0 to 1000 characters in length.",
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/AudienceMetadataUpdate"
          }
        },
        "type": "object"
      },
      "UpdateAudienceMetadataV1ResponseContent": {
        "properties": {
          "advertiserId": {
            "description": "An identifier for a targeted resource.",
            "type": "number"
          },
          "audienceId": {
            "description": "A number value representing the Amazon audience identifier. This is the identifier that is returned during audience creation.",
            "type": "number"
          },
          "description": {
            "description": "The audience description. Must be an alphanumeric, non-null string between 0 to 1000 characters in length.",
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/AudienceMetadata"
          },
          "name": {
            "description": "The audience name. Must be an alphanumeric string between 10 to 128 characters in length.",
            "maxLength": 128,
            "minLength": 10,
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateAudienceMetadataV2RequestContent": {
        "properties": {
          "description": {
            "description": "The audience description. Must be an alphanumeric, non-null string between 0 to 1000 characters in length.",
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/AudienceMetadataUpdate"
          }
        },
        "type": "object"
      },
      "UpdateAudienceMetadataV2ResponseContent": {
        "properties": {
          "advertiserId": {
            "description": "An identifier for a targeted resource.",
            "type": "number"
          },
          "audienceId": {
            "description": "A number value representing the Amazon audience identifier. This is the identifier that is returned during audience creation.",
            "type": "number"
          },
          "description": {
            "description": "The audience description. Must be an alphanumeric, non-null string between 0 to 1000 characters in length.",
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/AudienceMetadata"
          },
          "name": {
            "description": "The audience name. Must be an alphanumeric string between 10 to 128 characters in length.",
            "maxLength": 128,
            "minLength": 10,
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserConsent": {
        "properties": {
          "consent": {
            "$ref": "#/components/schemas/Consent"
          },
          "geo": {
            "$ref": "#/components/schemas/Geo"
          }
        },
        "type": "object"
      },
      "action": {
        "enum": [
          "CREATE",
          "DELETE"
        ],
        "type": "string"
      },
      "currency": {
        "enum": [
          "AED",
          "AUD",
          "CAD",
          "CNY",
          "EUR",
          "GBP",
          "INR",
          "JPY",
          "MXN",
          "SAR",
          "SEK",
          "TRY",
          "USD"
        ],
        "type": "string"
      },
      "jobState": {
        "enum": [
          "COMPLETED",
          "FAILED",
          "PARTIALLYSUCCEEDED",
          "PENDING",
          "SUCCEEDED"
        ],
        "type": "string"
      },
      "targetType": {
        "description": "This specifies one or more targets.",
        "enum": [
          "DSP"
        ],
        "type": "string"
      }
    },
    "securitySchemes": {}
  },
  "info": {
    "description": "The Advertiser audience API allows you to create advertiser first-party audiences in AMC and Amazon demand-side platform (Amazon DSP) by allowing you to create an audience segment, and stream your audience members into AMC and Amazon DSP.",
    "title": "Advertiser audiences",
    "version": "3.0"
  },
  "openapi": "3.0.1",
  "paths": {
    "/amc/audiences/connections": {
      "delete": {
        "description": "Delete a connection between the Partner and Advertiser's AMC Instances and/or DSP Advertisers.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "AmcpLinkRemoveConnectionV2",
        "parameters": [
          {
            "description": "Connection Id to remove. If blank or empty then all the Connections of the given Advertiser with the Partner will be removed.",
            "in": "query",
            "name": "connectionId",
            "schema": {
              "description": "Connection Id to remove. If blank or empty then all the Connections of the given Advertiser with the Partner will be removed.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Operation is successful."
          },
          "400": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkBadRequestExceptionResponseContent"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkUnauthorizedRequestExceptionResponseContent"
                }
              }
            },
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation."
          },
          "403": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkForbiddenRequestExceptionResponseContent"
                }
              }
            },
            "description": "Forbidden. The request failed because the user does not have access to the specified resource."
          },
          "404": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkResourceNotFoundExceptionResponseContent"
                }
              }
            },
            "description": "Not Found. The requested resource does not exist or is not visible for the user."
          },
          "429": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkTooManyRequestsExceptionResponseContent"
                }
              }
            },
            "description": "Too Many Requests. The request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkServerExceptionResponseContent"
                }
              }
            },
            "description": "Internal server error. Retry later. Contact support if this response persists."
          }
        },
        "summary": "Delete a connection between the Partner and Advertiser's AMC Instances and/or DSP Advertisers.",
        "tags": [
          "Connections"
        ]
      },
      "get": {
        "description": "Get a list of connections between the Partner and Advertiser's AMC Instances & DSP Advertisers.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "AmcpLinkGetConnectionsV2",
        "parameters": [
          {
            "description": "The identifier of the connection to get. If blank or not provided then all active connections created by the Advertiser Customer for this Partner will be listed.",
            "in": "query",
            "name": "connectionId",
            "schema": {
              "description": "The identifier of the connection to get. If blank or not provided then all active connections created by the Advertiser Customer for this Partner will be listed.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of the default connection. If True then only default connection is returned otherwise all.",
            "in": "query",
            "name": "isDefault",
            "schema": {
              "description": "The identifier of the default connection. If True then only default connection is returned otherwise all.",
              "type": "boolean"
            }
          },
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkGetConnectionsV2ResponseContent"
                }
              }
            },
            "description": "Operation is successful."
          },
          "400": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkBadRequestExceptionResponseContent"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkUnauthorizedRequestExceptionResponseContent"
                }
              }
            },
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation."
          },
          "403": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkForbiddenRequestExceptionResponseContent"
                }
              }
            },
            "description": "Forbidden. The request failed because the user does not have access to the specified resource."
          },
          "404": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkResourceNotFoundExceptionResponseContent"
                }
              }
            },
            "description": "Not Found. The requested resource does not exist or is not visible for the user."
          },
          "429": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkTooManyRequestsExceptionResponseContent"
                }
              }
            },
            "description": "Too Many Requests. The request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkServerExceptionResponseContent"
                }
              }
            },
            "description": "Internal server error. Retry later. Contact support if this response persists."
          }
        },
        "summary": "Get a list of connections between the Partner and Advertiser's AMC Instances & DSP Advertisers.",
        "tags": [
          "Connections"
        ]
      },
      "post": {
        "description": "Create a new connection between the Partner and Advertiser's AMC Instances and/or DSP Advertisers.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "AmcpLinkAddConnectionV2",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.amcaudiencesconnections.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/AmcpLinkAddConnectionV2RequestContent"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkAddConnectionV2ResponseContent"
                }
              }
            },
            "description": "Operation is successful."
          },
          "400": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkBadRequestExceptionResponseContent"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkUnauthorizedRequestExceptionResponseContent"
                }
              }
            },
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation."
          },
          "403": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkForbiddenRequestExceptionResponseContent"
                }
              }
            },
            "description": "Forbidden. The request failed because the user does not have access to the specified resource."
          },
          "429": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkTooManyRequestsExceptionResponseContent"
                }
              }
            },
            "description": "Too Many Requests. The request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkServerExceptionResponseContent"
                }
              }
            },
            "description": "Internal server error. Retry later. Contact support if this response persists."
          }
        },
        "summary": "Create a new connection between the Partner and Advertiser's AMC Instances and/or DSP Advertisers.",
        "tags": [
          "Connections"
        ]
      }
    },
    "/amc/audiences/connections/terms": {
      "get": {
        "description": "Get the Customer's AMC Terms and Conditions acceptance.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "AmcpLinkGetTermsV2",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkGetTermsV2ResponseContent"
                }
              }
            },
            "description": "Operation is successful."
          },
          "401": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkUnauthorizedRequestExceptionResponseContent"
                }
              }
            },
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation."
          },
          "403": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkForbiddenRequestExceptionResponseContent"
                }
              }
            },
            "description": "Forbidden. The request failed because the user does not have access to the specified resource."
          },
          "404": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkResourceNotFoundExceptionResponseContent"
                }
              }
            },
            "description": "Not Found. The requested resource does not exist or is not visible for the user."
          },
          "429": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkTooManyRequestsExceptionResponseContent"
                }
              }
            },
            "description": "Too Many Requests. The request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkServerExceptionResponseContent"
                }
              }
            },
            "description": "Internal server error. Retry later. Contact support if this response persists."
          }
        },
        "summary": "Get the Customer's AMC Terms and Conditions acceptance.",
        "tags": [
          "Terms"
        ]
      },
      "patch": {
        "description": "Set the Customer's AMC Terms and Conditions acceptance.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "AmcpLinkSetTermsAcceptanceV2",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.amcaudiencesconnections.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/AmcpLinkSetTermsAcceptanceV2RequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Operation is successful."
          },
          "400": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkBadRequestExceptionResponseContent"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkUnauthorizedRequestExceptionResponseContent"
                }
              }
            },
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation."
          },
          "403": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkForbiddenRequestExceptionResponseContent"
                }
              }
            },
            "description": "Forbidden. The request failed because the user does not have access to the specified resource."
          },
          "404": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkResourceNotFoundExceptionResponseContent"
                }
              }
            },
            "description": "Not Found. The requested resource does not exist or is not visible for the user."
          },
          "429": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkTooManyRequestsExceptionResponseContent"
                }
              }
            },
            "description": "Too Many Requests. The request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkServerExceptionResponseContent"
                }
              }
            },
            "description": "Internal server error. Retry later. Contact support if this response persists."
          }
        },
        "summary": "Set the Customer's AMC Terms and Conditions acceptance.",
        "tags": [
          "Terms"
        ]
      }
    },
    "/amc/audiences/metadata": {
      "post": {
        "description": "Create a new Advertiser Audience Metadata.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "CreateAudienceMetadataV2",
        "parameters": [
          {
            "description": "The identifier of a client associated with a 'Login with Amazon' account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a 'Login with Amazon' account.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.amcaudiences.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAudienceMetadataV2RequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.amcaudiences.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAudienceMetadataV2ResponseContent"
                }
              }
            },
            "description": "CreateAudienceMetadataV2 201 response"
          },
          "400": {
            "content": {
              "application/vnd.amcaudiences.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataCollaborationClientFaultExceptionResponseContent"
                }
              }
            },
            "description": "Bad Request- one ore more request parameters are invalid."
          },
          "429": {
            "content": {
              "application/vnd.amcaudiences.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataCollaborationClientThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "The client exceeded the allowed number of requests."
          },
          "500": {
            "content": {
              "application/vnd.amcaudiences.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataCollaborationInternalServerFaultExceptionResponseContent"
                }
              }
            },
            "description": "Internal server error."
          }
        },
        "summary": "Create a new Advertiser Audience Metadata.",
        "tags": [
          "Audience Metadata"
        ]
      }
    },
    "/amc/audiences/metadata/{audienceId}": {
      "get": {
        "description": "Get an Advertiser Audience Metadata using AudienceId.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "GetAudienceMetadataV2",
        "parameters": [
          {
            "description": "A number value representing the Amazon audience identifier. This is the identifier that is returned during audience creation.",
            "in": "path",
            "name": "audienceId",
            "required": true,
            "schema": {
              "description": "A number value representing the Amazon audience identifier. This is the identifier that is returned during audience creation.",
              "type": "number"
            }
          },
          {
            "description": "The identifier of a client associated with a 'Login with Amazon' account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a 'Login with Amazon' account.",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.amcaudiences.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAudienceMetadataV2ResponseContent"
                }
              }
            },
            "description": "Successfully retrieved the status."
          },
          "400": {
            "content": {
              "application/vnd.amcaudiences.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataCollaborationClientFaultExceptionResponseContent"
                }
              }
            },
            "description": "Bad Request- one ore more request parameters are invalid."
          },
          "404": {
            "content": {
              "application/vnd.amcaudiences.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataCollaborationJobNotFoundExceptionResponseContent"
                }
              }
            },
            "description": "The requested job not found."
          },
          "429": {
            "content": {
              "application/vnd.amcaudiences.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataCollaborationClientThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "The client exceeded the allowed number of requests."
          },
          "500": {
            "content": {
              "application/vnd.amcaudiences.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataCollaborationInternalServerFaultExceptionResponseContent"
                }
              }
            },
            "description": "Internal server error."
          }
        },
        "summary": "Get an Advertiser Audience Metadata using AudienceId.",
        "tags": [
          "Audience Metadata"
        ]
      },
      "put": {
        "description": "Update an existing Advertiser Audience Metadata.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "UpdateAudienceMetadataV2",
        "parameters": [
          {
            "description": "A number value representing the Amazon audience identifier. This is the identifier that is returned during audience creation.",
            "in": "path",
            "name": "audienceId",
            "required": true,
            "schema": {
              "description": "A number value representing the Amazon audience identifier. This is the identifier that is returned during audience creation.",
              "type": "number"
            }
          },
          {
            "description": "The identifier of a client associated with a 'Login with Amazon' account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a 'Login with Amazon' account.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.amcaudiences.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAudienceMetadataV2RequestContent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.amcaudiences.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAudienceMetadataV2ResponseContent"
                }
              }
            },
            "description": "UpdateAudienceMetadataV2 200 response"
          },
          "400": {
            "content": {
              "application/vnd.amcaudiences.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataCollaborationClientFaultExceptionResponseContent"
                }
              }
            },
            "description": "Bad Request- one ore more request parameters are invalid."
          },
          "404": {
            "content": {
              "application/vnd.amcaudiences.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataCollaborationJobNotFoundExceptionResponseContent"
                }
              }
            },
            "description": "The requested job not found."
          },
          "429": {
            "content": {
              "application/vnd.amcaudiences.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataCollaborationClientThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "The client exceeded the allowed number of requests."
          },
          "500": {
            "content": {
              "application/vnd.amcaudiences.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataCollaborationInternalServerFaultExceptionResponseContent"
                }
              }
            },
            "description": "Internal server error."
          }
        },
        "summary": "Update an existing Advertiser Audience Metadata.",
        "tags": [
          "Audience Metadata"
        ]
      }
    },
    "/amc/audiences/records": {
      "post": {
        "description": "Manage Advertiser audiences by adding or removing members from an Audience.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "ManageAudienceV2",
        "parameters": [
          {
            "description": "The identifier of a client associated with a 'Login with Amazon' account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a 'Login with Amazon' account.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.amcaudiences.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/ManageAudienceV2RequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/vnd.amcaudiences.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ManageAudienceV2ResponseContent"
                }
              }
            },
            "description": "The requested job is accepted."
          },
          "400": {
            "content": {
              "application/vnd.amcaudiences.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataCollaborationClientFaultExceptionResponseContent"
                }
              }
            },
            "description": "Bad Request- one ore more request parameters are invalid."
          },
          "429": {
            "content": {
              "application/vnd.amcaudiences.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataCollaborationClientThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "The client exceeded the allowed number of requests."
          },
          "500": {
            "content": {
              "application/vnd.amcaudiences.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataCollaborationInternalServerFaultExceptionResponseContent"
                }
              }
            },
            "description": "Internal server error."
          },
          "501": {
            "content": {
              "application/vnd.amcaudiences.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataCollaborationNotImplementedServerExceptionResponseContent"
                }
              }
            },
            "description": "DataCollaborationNotImplementedServerException 501 response"
          }
        },
        "summary": "Manage Advertiser audiences by adding or removing members from an Audience.",
        "tags": [
          "Audience Records"
        ]
      }
    },
    "/amc/audiences/records/{jobRequestId}": {
      "get": {
        "description": "Get the status of a manage audience members request.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "ManageAudienceStatusV2",
        "parameters": [
          {
            "description": "Unique identifier for job request generated at the server side when an audience records are uploaded . When `POST` method is invoked to upload audience records, a unique identifier is returned.",
            "in": "path",
            "name": "jobRequestId",
            "required": true,
            "schema": {
              "description": "Unique identifier for job request generated at the server side when an audience records are uploaded . When `POST` method is invoked to upload audience records, a unique identifier is returned.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a client associated with a 'Login with Amazon' account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a 'Login with Amazon' account.",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.amcaudiences.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ManageAudienceStatusV2ResponseContent"
                }
              }
            },
            "description": "Successfully retrieved the status."
          },
          "400": {
            "content": {
              "application/vnd.amcaudiences.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataCollaborationClientFaultExceptionResponseContent"
                }
              }
            },
            "description": "Bad Request- one ore more request parameters are invalid."
          },
          "404": {
            "content": {
              "application/vnd.amcaudiences.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataCollaborationJobNotFoundExceptionResponseContent"
                }
              }
            },
            "description": "The requested job not found."
          },
          "429": {
            "content": {
              "application/vnd.amcaudiences.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataCollaborationClientThrottlingExceptionResponseContent"
                }
              }
            },
            "description": "The client exceeded the allowed number of requests."
          },
          "500": {
            "content": {
              "application/vnd.amcaudiences.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DataCollaborationInternalServerFaultExceptionResponseContent"
                }
              }
            },
            "description": "Internal server error."
          }
        },
        "summary": "Get the status of a manage audience members request.",
        "tags": [
          "Audience Records"
        ]
      }
    }
  }
}