{
  "components": {
    "callbacks": {},
    "examples": {},
    "headers": {},
    "links": {},
    "parameters": {},
    "requestBodies": {},
    "responses": {},
    "schemas": {
      "AcrCollaboration": {
        "description": "ACR collaboration metadata",
        "properties": {
          "description": {
            "description": "ACR collaboration description.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the ACR collaboration.",
            "type": "string"
          },
          "name": {
            "description": "ACR collaboration display name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AcrCustomerPartner": {
        "description": "Metadata about a customer partner in a collaboration",
        "properties": {
          "abilities": {
            "description": "The list of abilities the customer partner can have in a collaboration.",
            "items": {
              "enum": [
                "CAN_RECEIVE_RESULTS"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "awsAccountId": {
            "description": "The member's AWS account ID.",
            "type": "string"
          },
          "displayName": {
            "description": "The member's display name.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Advertiser": {
        "description": "Details about an advertiser",
        "properties": {
          "configuredAdvertiserTypes": {
            "description": "The type of ad configured for this advertiser",
            "items": {
              "enum": [
                "DISPLAY",
                "SAS",
                "SPONSORED_BRANDS",
                "SPONSORED_PRODUCTS"
              ],
              "type": "string"
            },
            "maxItems": 4,
            "minItems": 0,
            "type": "array"
          },
          "id": {
            "description": "Depending on the value for advertiserType, this contains the CFID of a DSP, entity Id for a Sponsored Ads, or advertiser Id for a SAS advertiser.",
            "type": "string"
          },
          "marketplaceId": {
            "description": "For Sponsored Ads and SAS advertisers, this contains the corresponding marketplaceId, for DSP advertisers this will be null.",
            "type": "string"
          },
          "name": {
            "description": "Depending on the value for advertiserType, this contains either the DSP, Sponsored Ads, or SAS advertiser name.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/AdvertiserType"
          }
        },
        "required": [
          "id",
          "name",
          "type"
        ],
        "type": "object"
      },
      "AdvertiserType": {
        "description": "The advertiser type values",
        "enum": [
          "DISPLAY",
          "SAS",
          "SPONSORED_ADS"
        ],
        "type": "string"
      },
      "AmcAdvertiserIdentifier": {
        "description": "Identifying properties of an advertiser.",
        "properties": {
          "id": {
            "description": "Depending on the value for advertiserType, this contains the CFID of a DSP, entity Id for a Sponsored Ads, or advertiser Id for a SAS advertiser.",
            "type": "string"
          },
          "marketplaceId": {
            "description": "For Sponsored Ads and SAS advertisers, this contains the corresponding marketplaceId. This will be null for DSP advertisers.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/AdvertiserType"
          }
        },
        "required": [
          "id",
          "type"
        ],
        "type": "object"
      },
      "AmcAdvertiserUpdate": {
        "properties": {
          "advertisersToAdd": {
            "description": "List of advertiser identifiers to be added to the instance.",
            "items": {
              "$ref": "#/components/schemas/AmcAdvertiserIdentifier"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          },
          "advertisersToRemove": {
            "description": "List of advertiser identifiers to be deleted from the instance",
            "items": {
              "$ref": "#/components/schemas/AmcAdvertiserIdentifier"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          },
          "status": {
            "$ref": "#/components/schemas/AmcAdvertiserUpdateStatus"
          },
          "updateId": {
            "description": "Identifier of the advertiser update request. It's numeric and increasing from each request",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AmcAdvertiserUpdateLite": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/AmcAdvertiserUpdateStatus"
          },
          "updateId": {
            "description": "Identifier of the advertiser update request. It's numeric and increasing from each request",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "AmcAdvertiserUpdateStatus": {
        "description": "The status of an advertiser update request.",
        "enum": [
          "COMPLETED",
          "PENDING",
          "REJECTED",
          "UPDATING"
        ],
        "type": "string"
      },
      "AmcCreateAdvertiserUpdateRequest": {
        "properties": {
          "advertisersToAdd": {
            "description": "List of advertiser identifiers. This is the list of advertisers which should be added for the given instance.",
            "items": {
              "$ref": "#/components/schemas/AmcAdvertiserIdentifier"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          },
          "advertisersToRemove": {
            "description": "List of advertiser identifiers. This is the list of advertisers which should be deleted for the given instance.",
            "items": {
              "$ref": "#/components/schemas/AmcAdvertiserIdentifier"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "AmcCreateAdvertiserUpdateResponse": {
        "properties": {
          "advertiserUpdate": {
            "$ref": "#/components/schemas/AmcAdvertiserUpdate"
          }
        },
        "required": [
          "advertiserUpdate"
        ],
        "type": "object"
      },
      "AmcCreateInstanceRequest": {
        "properties": {
          "acrBacked": {
            "description": "Boolean flag to indicate whether the instance will be a collaboration instance (leveraging AWS Clean Rooms). Set to 'True' for a collaboration instance.",
            "type": "boolean"
          },
          "acrCustomerPartners": {
            "description": "The list of customer partners that will be added to the collaboration in an instance backed by AWS Clean Rooms (ACR).",
            "items": {
              "$ref": "#/components/schemas/AcrCustomerPartner"
            },
            "maxItems": 2,
            "minItems": 0,
            "type": "array"
          },
          "advertiserName": {
            "description": "The advertiser name associated with the AMC instance. Only numbers, english letters and spaces are allowed and size between 3 and 50 characters",
            "type": "string"
          },
          "awsAccountId": {
            "description": "Customer-owned AWS account ID associated with the AMC instance from which the customer will upload data. It is optional and only required if the customer will be uploading data. It can be changed at a later time.",
            "type": "string"
          },
          "idempotencyToken": {
            "description": "Optional token used to signal that the create operation should be idempotent. If supplied, subsequent requests with the same token and request parameters will produce the same results as the initial request. The size of the token should be between 1 and 36 characters. The token will be expired in 10 minutes after creation",
            "type": "string"
          },
          "instanceName": {
            "description": "Human-readable AMC instance identifier. Only numbers, english letters and spaces are allowed and size between 3 and 50 characters",
            "type": "string"
          },
          "s3BucketName": {
            "description": "The name of the S3 bucket associated with the AMC instance. This bucket will contain reporting workflow output.",
            "type": "string"
          }
        },
        "required": [
          "instanceName"
        ],
        "type": "object"
      },
      "AmcCreateInstanceResponse": {
        "properties": {
          "instance": {
            "$ref": "#/components/schemas/Instance"
          }
        },
        "type": "object"
      },
      "AmcDeleteInstanceResponse": {
        "description": "Empty response object denoting successful deletion of an instance.",
        "type": "object"
      },
      "AmcGetAdvertiserUpdateResponse": {
        "properties": {
          "advertiserUpdate": {
            "$ref": "#/components/schemas/AmcAdvertiserUpdate"
          }
        },
        "required": [
          "advertiserUpdate"
        ],
        "type": "object"
      },
      "AmcListAdvertiserUpdatesResponse": {
        "properties": {
          "advertiserUpdates": {
            "description": "List of advertiser updates.",
            "items": {
              "$ref": "#/components/schemas/AmcAdvertiserUpdateLite"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "description": "Optional. Token to use in subsequent request to retrieve next page of results. Null if all results have been returned.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AmcUpdateAdvertiserUpdateRequest": {
        "properties": {
          "status": {
            "description": "The status to which the advertiser update request will be updated.",
            "enum": [
              "CANCELLED"
            ],
            "type": "string"
          }
        },
        "required": [
          "status"
        ],
        "type": "object"
      },
      "AmcUpdateAdvertiserUpdateResponse": {
        "properties": {
          "advertiserUpdate": {
            "$ref": "#/components/schemas/AmcAdvertiserUpdate"
          }
        },
        "required": [
          "advertiserUpdate"
        ],
        "type": "object"
      },
      "AmcUpdateInstanceRequest": {
        "properties": {
          "advertiserName": {
            "description": "The advertiser name associated with the AMC instance.",
            "type": "string"
          },
          "awsAccountId": {
            "description": "The 12-digit AWS account ID which owns the S3 bucket associated with the instance.",
            "type": "string"
          },
          "instanceName": {
            "description": "Human-readable AMC instance identifier.",
            "type": "string"
          },
          "s3BucketName": {
            "description": "The name of the S3 bucket associated with the AMC instance. This bucket will contain reporting workflow output.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AmcUpdateInstanceResponse": {
        "properties": {
          "instance": {
            "$ref": "#/components/schemas/Instance"
          }
        },
        "type": "object"
      },
      "AmcpLinkAddConnectionV1RequestContent": {
        "description": "Add Connection request.",
        "properties": {
          "amcAccountId": {
            "description": "AMC Account identifier to connect.",
            "type": "string"
          },
          "amcAccountMarketplaceId": {
            "description": "Connected AMC Account Marketplace identifier.",
            "type": "string"
          },
          "amcInstanceId": {
            "description": "AMC Instance identifier to connect.",
            "type": "string"
          },
          "connectionId": {
            "description": "An unique identifier for the connection. This will be auto-generated if not provided in the request.",
            "type": "string"
          },
          "dspAdvertiserId": {
            "description": "DSP Advertiser identifier to connect.",
            "type": "string"
          },
          "dspProfileId": {
            "description": "DSP Profile identifier.",
            "type": "string"
          },
          "isDefault": {
            "description": "Flag indicating if this is the Default Connection for this Customer who is creating the Connection. The system will ensure to have at least 1 default connection.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "AmcpLinkAddConnectionV1ResponseContent": {
        "description": "Add Connection response.",
        "properties": {
          "connectionId": {
            "description": "Identifier of the connection that was created.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AmcpLinkAddConnectionV2RequestContent": {
        "description": "Add Connection request.",
        "properties": {
          "amcAccountId": {
            "description": "AMC Account identifier to connect.",
            "type": "string"
          },
          "amcAccountMarketplaceId": {
            "description": "Connected AMC Account Marketplace identifier.",
            "type": "string"
          },
          "amcInstanceId": {
            "description": "AMC Instance identifier to connect.",
            "type": "string"
          },
          "connectionId": {
            "description": "An unique identifier for the connection. This will be auto-generated if not provided in the request.",
            "type": "string"
          },
          "dspAdvertiserId": {
            "description": "DSP Advertiser identifier to connect.",
            "type": "string"
          },
          "dspProfileId": {
            "description": "DSP Profile identifier.",
            "type": "string"
          },
          "isDefault": {
            "description": "Flag indicating if this is the Default Connection for this Customer who is creating the Connection. The system will ensure to have at least 1 default connection.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "AmcpLinkAddConnectionV2ResponseContent": {
        "description": "Add Connection response.",
        "properties": {
          "connectionId": {
            "description": "Identifier of the connection that was created.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AmcpLinkAmcAccount": {
        "description": "AMC Account details.",
        "properties": {
          "accountId": {
            "description": "AMC Account identifier.",
            "type": "string"
          },
          "accountName": {
            "description": "AMC Account name.",
            "type": "string"
          },
          "marketplaceId": {
            "description": "Obfuscated Marketplace Id.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AmcpLinkAmcDataSource": {
        "description": "Details of Advertising products that feeds data to an AMC Instance.",
        "properties": {
          "id": {
            "description": "Identifier of the entity.",
            "type": "string"
          },
          "name": {
            "description": "Name of the entity.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AmcpLinkAmcInstance": {
        "description": "AMC Instance details.",
        "properties": {
          "accountId": {
            "description": "AMC Account identifier.",
            "type": "string"
          },
          "accountName": {
            "description": "AMC Account name.",
            "type": "string"
          },
          "creationDateTime": {
            "description": "Creation DateTime.",
            "format": "date-time",
            "type": "string"
          },
          "creationStatus": {
            "description": "Creation status of the AMC instance.",
            "type": "string"
          },
          "dspAdvertisers": {
            "description": "List of DSP Advertisers feeding to this AMC Instance.",
            "items": {
              "$ref": "#/components/schemas/AmcpLinkAmcDataSource"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "instanceId": {
            "description": "AMC Instance identifier.",
            "type": "string"
          },
          "instanceName": {
            "description": "AMC Instance name.",
            "type": "string"
          },
          "marketplaceId": {
            "description": "Obfuscated Marketplace Id.",
            "type": "string"
          },
          "sizmek": {
            "description": "List of Sizmek Ad Suites feeding to this AMC Instance.",
            "items": {
              "$ref": "#/components/schemas/AmcpLinkAmcDataSource"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "sponsoredAds": {
            "description": "List of Sponsored Ads feeding to this AMC Instance.",
            "items": {
              "$ref": "#/components/schemas/AmcpLinkAmcDataSource"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "AmcpLinkBadRequestExceptionResponseContent": {
        "description": "Bad Request.",
        "properties": {
          "message": {
            "description": "Error message.",
            "type": "string"
          },
          "requestId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AmcpLinkBatchListConnectionsRequestContent": {
        "description": "Request to get connections between the Partner and Advertiser.",
        "properties": {
          "connectionIds": {
            "description": "List of connection IDs.",
            "items": {
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "AmcpLinkBatchListConnectionsResponseContent": {
        "description": "List of Partner Connections with an Advertiser's AMC Instances and DSP Advertisers.",
        "properties": {
          "connections": {
            "description": "List of Partner Connection.",
            "items": {
              "$ref": "#/components/schemas/AmcpLinkConnection"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "AmcpLinkConnection": {
        "description": "Partner Connection Detail.",
        "properties": {
          "amcAccountId": {
            "description": "Connected AMC Account identifier.",
            "type": "string"
          },
          "amcAccountMarketplaceId": {
            "description": "Connected AMC Account Marketplace identifier.",
            "type": "string"
          },
          "amcAccountName": {
            "description": "Connected AMC Account Name.",
            "type": "string"
          },
          "amcInstanceId": {
            "description": "Connected AMC Instance identifier.",
            "type": "string"
          },
          "amcInstanceName": {
            "description": "Connected AMC Instance Name.",
            "type": "string"
          },
          "clientId": {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "type": "string"
          },
          "connectionId": {
            "description": "Unique identifier of the connection.",
            "type": "string"
          },
          "creationDateTime": {
            "description": "Timestamp for record creation.",
            "format": "date-time",
            "type": "string"
          },
          "customerId": {
            "description": "Id of the Customer.",
            "type": "string"
          },
          "dataUploadAwsAccountId": {
            "description": "DataUploadAwsId Associated with the connectionId",
            "type": "string"
          },
          "dspAdvertiserCountryCode": {
            "description": "Connected DSP Advertiser Country Code.",
            "type": "string"
          },
          "dspAdvertiserId": {
            "description": "Connected DSP Advertiser identifier.",
            "type": "string"
          },
          "dspAdvertiserMarketplaceId": {
            "description": "Connected DSP Advertiser MarketplaceId.",
            "type": "string"
          },
          "dspAdvertiserName": {
            "description": "Connected DSP Advertiser Name.",
            "type": "string"
          },
          "dspAdvertiserRegion": {
            "description": "Connected DSP Advertiser Retail Region.",
            "type": "string"
          },
          "dspProfileId": {
            "description": "DSP Advertiser identifier.",
            "type": "string"
          },
          "isDefault": {
            "description": "Is Default Connection.",
            "type": "boolean"
          },
          "modifiedDateTime": {
            "description": "Timestamp for record modification.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AmcpLinkDspAdvertiser": {
        "description": "DSP Advertiser details.",
        "properties": {
          "accountId": {
            "description": "Account Identifier for sellers and vendors. Note that this value is not unique and may be the same across marketplace.",
            "type": "string"
          },
          "accountName": {
            "description": "Advertiser Account Name.",
            "type": "string"
          },
          "accountType": {
            "description": "The seller and vendor account types are associated with Sponsored Ads APIs. The agency account type is associated with DSP and Data Provider APIs.",
            "type": "string"
          },
          "countryCode": {
            "description": "Country Code.",
            "type": "string"
          },
          "dspAdvertiserId": {
            "description": "The DSP Advertiser identifier.",
            "type": "string"
          },
          "dspAdvertiserName": {
            "description": "The DSP Advertiser name.",
            "type": "string"
          },
          "marketplaceId": {
            "description": "The identifier of the marketplace to which the account is associated.",
            "type": "string"
          },
          "profileId": {
            "description": "Advertiser Profile Id.",
            "type": "number"
          }
        },
        "type": "object"
      },
      "AmcpLinkForbiddenRequestExceptionResponseContent": {
        "description": "Forbidden. The request failed because the user does not have access to the specified resource.",
        "properties": {
          "message": {
            "description": "Error message.",
            "type": "string"
          },
          "requestId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AmcpLinkGetConnectionsV1ResponseContent": {
        "description": "List of Partner Connections with an Advertiser's AMC Instances and DSP Advertisers.",
        "properties": {
          "connections": {
            "description": "List of Partner Connection.",
            "items": {
              "$ref": "#/components/schemas/AmcpLinkConnection"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "AmcpLinkGetConnectionsV2ResponseContent": {
        "description": "List of Partner Connections with an Advertiser's AMC Instances and DSP Advertisers.",
        "properties": {
          "connections": {
            "description": "List of Partner Connection.",
            "items": {
              "$ref": "#/components/schemas/AmcpLinkConnection"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "AmcpLinkGetTermsV1ResponseContent": {
        "description": "Get Terms response.",
        "properties": {
          "agreementContent": {
            "description": "The terms and conditions agreement content.",
            "type": "string"
          },
          "agreementToken": {
            "description": "The terms and conditions agreement token. Required to accept an agreement.",
            "type": "string"
          },
          "hasAccepted": {
            "description": "Flag indicating whether the Customer has accepted the AMC Terms and Conditions.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "AmcpLinkGetTermsV2ResponseContent": {
        "description": "Get Terms response.",
        "properties": {
          "agreementContent": {
            "description": "The terms and conditions agreement content.",
            "type": "string"
          },
          "agreementToken": {
            "description": "The terms and conditions agreement token. Required to accept an agreement.",
            "type": "string"
          },
          "hasAccepted": {
            "description": "Flag indicating whether the Customer has accepted the AMC Terms and Conditions.",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "AmcpLinkListAmcAccountsResponseContent": {
        "description": "List of AMC Accounts.",
        "properties": {
          "amcAccounts": {
            "description": "List of AMC Accounts.",
            "items": {
              "$ref": "#/components/schemas/AmcpLinkAmcAccount"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "description": "Optional. Token to use in subsequent request to retrieve next page of results. Null if all results have been returned.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AmcpLinkListAmcInstancesResponseContent": {
        "description": "List of AMC Instances.",
        "properties": {
          "amcInstances": {
            "description": "List of AMC Instances.",
            "items": {
              "$ref": "#/components/schemas/AmcpLinkAmcInstance"
            },
            "maxItems": 10,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "description": "Optional. Token to use in subsequent request to retrieve next page of results. Null if all results have been returned.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AmcpLinkListDspAdvertisersResponseContent": {
        "description": "List of DSP Advertisers. Limited to 100 results.",
        "properties": {
          "dspAdvertisers": {
            "description": "List of DSP advertisers.",
            "items": {
              "$ref": "#/components/schemas/AmcpLinkDspAdvertiser"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "description": "Optional. Token to use in subsequent request to retrieve next page of results. Null if all results have been returned.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AmcpLinkResourceNotFoundExceptionResponseContent": {
        "description": "Not Found. The requested resource does not exist or is not visible for the user.",
        "properties": {
          "message": {
            "description": "Error message.",
            "type": "string"
          },
          "requestId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AmcpLinkServerExceptionResponseContent": {
        "description": "Internal server error. Retry later. Contact support if this response persists.",
        "properties": {
          "message": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AmcpLinkSetTermsAcceptanceV1RequestContent": {
        "description": "Set Terms Acceptance request.",
        "properties": {
          "agreementToken": {
            "description": "The terms and conditions agreement token.",
            "type": "string"
          },
          "hasAccepted": {
            "description": "Flag indicating whether the Customer has accepted the AMC Terms and Conditions. Submitting true will set the customer as having accepted the terms and conditions.",
            "type": "boolean"
          }
        },
        "required": [
          "agreementToken",
          "hasAccepted"
        ],
        "type": "object"
      },
      "AmcpLinkSetTermsAcceptanceV2RequestContent": {
        "description": "Set Terms Acceptance request.",
        "properties": {
          "agreementToken": {
            "description": "The terms and conditions agreement token.",
            "type": "string"
          },
          "hasAccepted": {
            "description": "Flag indicating whether the Customer has accepted the AMC Terms and Conditions. Submitting true will set the customer as having accepted the terms and conditions.",
            "type": "boolean"
          }
        },
        "required": [
          "agreementToken",
          "hasAccepted"
        ],
        "type": "object"
      },
      "AmcpLinkTooManyRequestsExceptionResponseContent": {
        "description": "Too Many Requests. The request was rate-limited. Retry later.",
        "properties": {
          "message": {
            "description": "Error message.",
            "type": "string"
          },
          "requestId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AmcpLinkUnauthorizedRequestExceptionResponseContent": {
        "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
        "properties": {
          "message": {
            "description": "Error message.",
            "type": "string"
          },
          "requestId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "CollaborationIdMappingJob": {
        "description": "Metadata about the ID mapping job associated to an ID mapping table in the collaboration.",
        "properties": {
          "endTime": {
            "description": "The time the job execution ended.",
            "type": "string"
          },
          "errorDetails": {
            "description": "If the job failed, contains information about the error.",
            "type": "string"
          },
          "jobId": {
            "description": "Job unique identifier.",
            "type": "string"
          },
          "metrics": {
            "$ref": "#/components/schemas/CollaborationIdMappingJobMetrics"
          },
          "startTime": {
            "description": "The time the job execution started.",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/CollaborationIdMappingJobStatus"
          }
        },
        "type": "object"
      },
      "CollaborationIdMappingJobMetrics": {
        "description": "Job data record processing metrics.",
        "properties": {
          "inputRecords": {
            "description": "Number of input records.",
            "format": "int64",
            "type": "integer"
          },
          "recordsNotProcessed": {
            "description": "Number of records not processed.",
            "format": "int64",
            "type": "integer"
          },
          "totalMappedRecords": {
            "description": "Total number of mapped records.",
            "format": "int64",
            "type": "integer"
          },
          "totalMappedSourceRecords": {
            "description": "Total number of mapped records from the SOURCE.",
            "format": "int64",
            "type": "integer"
          },
          "totalMappedTargetRecords": {
            "description": "Total number of mapped records from the TARGET.",
            "format": "int64",
            "type": "integer"
          },
          "totalRecordsProcessed": {
            "description": "Total number of records processed.",
            "format": "int64",
            "type": "integer"
          },
          "uniqueRecordsLoaded": {
            "description": "Total number of unique mapped records.",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "CollaborationIdMappingJobStatus": {
        "description": "The status a job can be in.",
        "enum": [
          "FAILED",
          "QUEUED",
          "RUNNING",
          "SUCCEEDED",
          "UNKNOWN"
        ],
        "type": "string"
      },
      "CollaborationIdMappingJobSummary": {
        "description": "Summarized metadata of the ID mapping job associated to an ID mapping table in the collaboration.",
        "properties": {
          "endTime": {
            "description": "The time the job execution ended.",
            "type": "string"
          },
          "jobId": {
            "description": "Job unique identifier.",
            "type": "string"
          },
          "startTime": {
            "description": "The time the job execution started.",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/CollaborationIdMappingJobStatus"
          }
        },
        "type": "object"
      },
      "CollaborationIdMappingTable": {
        "description": "Metadata about a collaboration ID mapping table",
        "properties": {
          "arn": {
            "description": "The ARN of the table.",
            "type": "string"
          },
          "createTime": {
            "description": "Creation time of the table.",
            "type": "string"
          },
          "description": {
            "description": "The description of the table.",
            "type": "string"
          },
          "id": {
            "description": "Unique identifier of the table.",
            "type": "string"
          },
          "name": {
            "description": "The name of the table.",
            "type": "string"
          },
          "queryable": {
            "description": "Indicates if the table is queryable.",
            "type": "boolean"
          },
          "sourceAwsAccount": {
            "description": "The AWS account ID of the input SOURCE of the ID mapping table. The SOURCE is always the member who requested the creation of the table in AMC. This field is set only for ID mapping tables created via AMC APIs.",
            "type": "string"
          },
          "updateTime": {
            "description": "Last time the table was updated.",
            "type": "string"
          },
          "workflowArn": {
            "description": "The ARN of the id mapping workflow processing the data backing the table.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CollaborationIdNamespaceAssociation": {
        "description": "Metadata of the Id Namespace associated to the ACR collaboration",
        "properties": {
          "createTime": {
            "description": "The time when the association was created.",
            "type": "string"
          },
          "creatorAccountId": {
            "description": "The AWS account of the member that associated the ID namespace to the collaboration.",
            "type": "string"
          },
          "id": {
            "description": "Uniquely identifies the association between ID namespace and collaboration.",
            "type": "string"
          },
          "idNamespaceArn": {
            "description": "ID namespace unique resource identifier.",
            "type": "string"
          },
          "idNamespaceType": {
            "description": "The type of ID namespace.",
            "enum": [
              "SOURCE",
              "TARGET",
              "UNKNOWN"
            ],
            "type": "string"
          },
          "updateTime": {
            "description": "The last time the association was updated.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CollaborationMember": {
        "description": "Metadata about a collaboration member",
        "properties": {
          "accountId": {
            "description": "The member's AWS account ID.",
            "type": "string"
          },
          "displayName": {
            "description": "The member's display name.",
            "type": "string"
          },
          "membershipId": {
            "description": "Unique identifier of the member's membership in the collaboration.",
            "type": "string"
          },
          "status": {
            "description": "The current status of the member in the collaboration.",
            "enum": [
              "ACTIVE",
              "INVITED",
              "LEFT",
              "REMOVED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "CollaborationSummary": {
        "description": "ACR collaboration metadata",
        "properties": {
          "amcDataProviders": {
            "description": "The list of AMC managed members who contribute data in the collaboration.",
            "items": {
              "$ref": "#/components/schemas/CollaborationMember"
            },
            "type": "array"
          },
          "creator": {
            "$ref": "#/components/schemas/CollaborationMember"
          },
          "customer": {
            "$ref": "#/components/schemas/CollaborationMember"
          },
          "customerAcceptanceLink": {
            "description": "Deep link to the collaboration acceptance page in the customer's AWS account.",
            "type": "string"
          },
          "customerPartners": {
            "description": "The list of customer partners who contribute data in the collaboration.",
            "items": {
              "$ref": "#/components/schemas/CollaborationMember"
            },
            "type": "array"
          },
          "description": {
            "description": "The collaboration's description.",
            "type": "string"
          },
          "id": {
            "description": "The collaboration's unique identifier.",
            "type": "string"
          },
          "name": {
            "description": "The collaboration's display name.",
            "type": "string"
          },
          "querySubmitter": {
            "$ref": "#/components/schemas/CollaborationMember"
          },
          "resultsReceivers": {
            "description": "The list of members that are results receivers in the collaboration.",
            "items": {
              "$ref": "#/components/schemas/CollaborationMember"
            },
            "type": "array"
          },
          "status": {
            "description": "The current status of the collaboration.",
            "enum": [
              "ACTIVE",
              "DELETED",
              "IN_PROGRESS",
              "NOT_STARTED",
              "PENDING_ACCEPTANCE",
              "REJECTED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateCollaborationIdMappingTablePayload": {
        "description": "Input data to create an ID mapping table",
        "properties": {
          "idMappingTableName": {
            "description": "ID mapping table name.",
            "type": "string"
          },
          "sourceIdNamespaceArn": {
            "description": "Source ID namespace ARN.",
            "type": "string"
          }
        },
        "required": [
          "idMappingTableName",
          "sourceIdNamespaceArn"
        ],
        "type": "object"
      },
      "CreateCollaborationIdMappingTableResponse": {
        "properties": {
          "collaborationId": {
            "description": "Unique identifier of the collaboration the ID mapping table is part of.",
            "type": "string"
          },
          "idMappingTable": {
            "$ref": "#/components/schemas/CollaborationIdMappingTable"
          },
          "idMappingWorkflowJobId": {
            "description": "Unique identifier of the job started to populate the id mapping table. If AMC was not able to start the job, this field will be null and a tracking ID will be provided in the attribute queueTrackingId.",
            "type": "string"
          },
          "trackingId": {
            "description": "Unique identifier of a job tracking token in AMC. When this attribute is not null, it indicates an idMappingWorkflowJobId is not available at the time of the response. This identifier can be used to retrieve the idMappingWorkflowJobId at a later time when it is available.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateDataViewResponse": {
        "description": "Empty response object denoting successful creation of a data view.",
        "type": "object"
      },
      "CreateScheduleRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Schedule"
          },
          {
            "properties": {
              "marketplaceId": {
                "description": "The identifier of the marketplace associated with the account.",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "CreateScheduleResponse": {
        "description": "Empty response object denoting successful creation of a schedule.",
        "type": "object"
      },
      "CreateWorkflowExecutionRequest": {
        "properties": {
          "additionalAcrResultsReceivers": {
            "description": "AWS account IDs of additional customer-owned members which should receive the results of this execution through AWS Clean Rooms (ACR). The specified AWS accounts must be defined as members of the instance's ACR collaboration, and must have the 'receive results' member capability. Note that results will always be delivered to the primary customer-owned member of the collaboration - the account ID for that member should not be included in this list. Results will not be delivered to the specified additional members if any restrictions prevent them from receiving results - for example, if the workflow execution reads from an ACR customer-connected data set which does not define the additional member as an allowed results receiver, it will not receive results even if it's included in this list.",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "advertisers": {
            "description": "Optional - if specified, the execution will only read data for the provided advertisers. If not specified, the execution will read data for all advertisers queryable for the instance.",
            "items": {
              "$ref": "#/components/schemas/AmcAdvertiserIdentifier"
            },
            "type": "array"
          },
          "disableAggregationControls": {
            "description": "Optional - if true privacy controls will NOT be applied to the workflow. \nQuery output can still be retrieved when privacy protection is skipped if only requireSyntheticData is true.",
            "type": "boolean"
          },
          "dryRun": {
            "default": false,
            "description": "Optional - if true, the execution will be processed but not submitted to compute, at which point the execution will be marked as complete. This can be used to quickly validate workflow executions (e.g., the sqlQuery) without consuming quotas or compute resources. The workflow execution will not generate output results.\nIf false, the workflow execution will be submitted to compute, thereby running normally and generating output results. The default value, if no input is provided, is false.",
            "type": "boolean"
          },
          "maxCertifiedTime": {
            "description": "The maximum certified time that will be used for input data sets. This parameter can be used to execute a workflow against older versions of data. The use of this parameter is subject to the limitations that older versions of data may not be retained.",
            "type": "string"
          },
          "maxDimensionTime": {
            "description": "The maximum time window end that that will be used for dimension data sets. This parameter can be used to execute a workflow against older versions of dimension data. The required format is yyyy-MM-dd'T'HH:mm:ss (e.g. 2019-08-14T16:12:34).\nThe use of this parameter is subject to the limitations that:\n1. Older versions of dimension data may not be retained.\n2. This parameter cannot be specified to be earlier than the main time window end for the execution.",
            "type": "string"
          },
          "parameterValues": {
            "additionalProperties": {
              "type": "string"
            },
            "description": "Values to use for the parameters specified in the workflow.",
            "type": "object"
          },
          "requireSyntheticData": {
            "description": "Optional - if true the execution will only be allowed to use data sets that only contain synthetic data.",
            "type": "boolean"
          },
          "skipPublish": {
            "description": "Optional - if true the workflow will be run without writing out results.",
            "type": "boolean"
          },
          "timeWindowEnd": {
            "description": "Optional. Only used with a timeWindowType of EXPLICIT. The end of the time window for input data for the workflow execution. This is a nominal time window and not a guarantee that timestamps on any rows will be inside this window. If provided, must also provide a `timeWindowStart`. Required format is yyyy-MM-dd'T'HH:mm:ss.",
            "type": "string"
          },
          "timeWindowStart": {
            "description": "Optional. Only used with a timeWindowType of `EXPLICIT`. The start of the time window for input data for the workflow execution. This is a nominal time window and not a guarantee that timestamps on any rows will be inside this window. If provided, must also provide a `timeWindowEnd`. Required format is yyyy-MM-dd'T'HH:mm:ss.",
            "type": "string"
          },
          "timeWindowTimeZone": {
            "description": "Optional. The time zone of the specified time window. This applies to both time window start and end if specified for time window type `EXPLICIT` and to the determination of day and month boundaries for other time window types. If not specified, the UTC time zone will be used.",
            "type": "string"
          },
          "timeWindowType": {
            "description": "Optional. The type of time window to use to for specifying input data for the workflow execution. If not provided, the time window type of `MOST_RECENT_DAY` will be used. The following table lists available types:\n|Status Name|Description|\n|-----------|-----------|\n|EXPLICIT|The start and end of the time window must be explicitly provided in the request.|\n|MOST_RECENT_DAY|The time window will be the most recent 1-day window for which the instance is likely to have data, aligned to day boundaries.|\n|MOST_RECENT_WEEK|The time window will be the most recent 1-week window for which the instance is likely to have data, aligned to day boundaries.|\n|CURRENT_MONTH|The time window will be the start of the current month up to the most recent time for which the instance is likely to have data.|\n|PREVIOUS_MONTH|The time window will be the entire previous month.|\n|ALL|The time window will include all available data.|",
            "enum": [
              "ALL",
              "CURRENT_MONTH",
              "EXPLICIT",
              "MOST_RECENT_DAY",
              "MOST_RECENT_WEEK",
              "PREVIOUS_MONTH"
            ],
            "type": "string"
          },
          "workflow": {
            "$ref": "#/components/schemas/Workflow"
          },
          "workflowExecutionTimeoutSeconds": {
            "description": "Optional. If specified, limits the workflow query execution time to the specified number of seconds. The value is required to be at least 900 seconds (15 minutes). Unless configured otherwise, the maximum allowed timeout value is 86400 seconds (24 hours).",
            "type": "integer"
          },
          "workflowId": {
            "description": "The ID of the workflow to execute, if executing an existing workflow.\nRequired if a sqlQuery is not provided. Cannot be populated at the same time as sqlQuery.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CreateWorkflowExecutionResponse": {
        "properties": {
          "workflowExecution": {
            "$ref": "#/components/schemas/WorkflowExecution"
          }
        },
        "type": "object"
      },
      "CreateWorkflowResponse": {
        "description": "Empty response object denoting successful creation of a workflow.",
        "type": "object"
      },
      "DataSource": {
        "description": "Defines a type of data that may be used as a source for queries in workflows or data views. A data source has a flat schema defined by one or more columns. A data source may only be referenced directly in a query by the input data of a select operation or the second input data of a join operation.",
        "properties": {
          "columns": {
            "description": "List of data source columns.",
            "items": {
              "description": "Defines a column in a data source.",
              "properties": {
                "columnType": {
                  "description": "The type of a data source column. The following table lists available types:\n|Type Name|Description|\n|-----------|-----------|\n|METRIC|The column is a quantity or value rather than a dimension. In queries, metric columns are aggregated in `AggregateOperation`s. Typical examples include impressions and clicks.|\n|DIMENSION|The column is a characteristic rather than a quantity. In queries, dimension columns are used as group by keys in `AggregateOperation`s. Typical examples include `ad_id` and `campaign_id`.|",
                  "enum": [
                    "DIMENSION",
                    "METRIC"
                  ],
                  "type": "string"
                },
                "description": {
                  "description": "The human-readable description of what the column contains.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of the column.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "maxItems": 500,
            "minItems": 0,
            "type": "array"
          },
          "dataSourceId": {
            "description": "The identifier of the data source.",
            "type": "string"
          },
          "description": {
            "description": "The human-readable description of what the data source contains.",
            "type": "string"
          },
          "outputChannels": {
            "description": "The possible channels for retrieving workflow execution output in this instance with information about whether or not it's possible to retrieve the output of workflow executions that read from this data source through the channel and if not, why. Note that this property is populated with all possible output channels for the instance - to determine if output is available through a given channel for workflow executions that read from this data source, see the `outputAvailable` property of the channel.",
            "items": {
              "$ref": "#/components/schemas/DataSourceOutputChannel"
            },
            "type": "array"
          },
          "owner": {
            "description": "The owner of a data source. The following table lists available owners:\n|Type Name|Description|\n|-----------|-----------|\n|AMAZON|The data source is owned by Amazon.|\n|CUSTOMER|The data source is owned by an external entity.|",
            "enum": [
              "AMAZON",
              "CUSTOMER"
            ],
            "type": "string"
          },
          "provider": {
            "description": "The provider of the data source.",
            "enum": [
              "ADVERTISER_DATA_UPLOAD",
              "AMAZON"
            ],
            "type": "string"
          },
          "tags": {
            "description": "List of human-readable tags associated with a data source.",
            "items": {
              "description": "Defines a tag associated with a data source.",
              "properties": {
                "description": {
                  "description": "The human-readable description of the data source tag.",
                  "type": "string"
                },
                "subtext": {
                  "description": "Field denoting the ad product relevant to the data source (e.g., \"Amazon DSP\").",
                  "type": "string"
                },
                "title": {
                  "description": "The title of the data source tag.",
                  "type": "string"
                },
                "type": {
                  "description": "The type of a data source tag.",
                  "enum": [
                    "DEPRECATED",
                    "NEW",
                    "RENAMED"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "DataSourceColumnDataType": {
        "type": "object"
      },
      "DataSourceExpandedDataType": {
        "type": "object"
      },
      "DataSourceOutputChannel": {
        "description": "Contains information about a channel for retrieving workflow execution output in an instance and information about whether or not the output of executions that read from this data source can be retrieved through this channel and if not, why.",
        "properties": {
          "channel": {
            "$ref": "#/components/schemas/OutputChannel",
            "description": "The channel for receiving output."
          },
          "outputAvailable": {
            "description": "True if output would be available through this channel for a workflow execution that read from this data source, barring execution-level restrictions.",
            "type": "boolean"
          },
          "outputUnavailableReason": {
            "description": "If output cannot be retrieved through this channel (i.e. `outputAvailable` is false), contains a description of why not. Otherwise, is null.",
            "type": "string"
          }
        },
        "required": [
          "channel",
          "outputAvailable"
        ],
        "type": "object"
      },
      "DataSourceSimpleDataType": {
        "enum": [
          "BINARY",
          "BOOLEAN",
          "BYTE",
          "CALENDAR_INTERVAL",
          "DATE",
          "DECIMAL",
          "DOUBLE",
          "FLOAT",
          "INTEGER",
          "LONG",
          "SHORT",
          "STRING",
          "TIMESTAMP"
        ],
        "type": "string"
      },
      "DataView": {
        "description": "Data views define a non-materialized view resulting from a query on one or more data sets or data views on an Amazon Marketing Cloud (AMC) instance. Data views can be queried in workflows or other data views.",
        "properties": {
          "columns": {
            "description": "The output columns of the data view query.",
            "items": {
              "description": "AMC dataView column.",
              "properties": {
                "columnType": {
                  "description": "The type of a data source column. The following table lists available types:\n|Type Name|Description|\n|-----------|-----------|\n|METRIC|The column is a quantity or value rather than a dimension. In queries, metric columns are aggregated in `AggregateOperation`s. Typical examples include impressions and clicks.|\n|DIMENSION|The column is a characteristic rather than a quantity. In queries, dimension columns are used as group by keys in `AggregateOperation`s. Typical examples include `ad_id` and `campaign_id`.|",
                  "enum": [
                    "DIMENSION",
                    "METRIC"
                  ],
                  "type": "string"
                },
                "description": {
                  "description": "The human-readable description of what the column contains.",
                  "type": "string"
                },
                "isDiscoverable": {
                  "description": "False if the data view should not appear when listing in the schema explorer. Null values are assumed to be discoverable. This does not have any effect on what kinds of workflows can reference the data source. Does not affect which data views are returned when listing data *views* - only those returned when listing data *sources*.",
                  "type": "boolean"
                },
                "isMainEventTime": {
                  "description": "Flag indicating if this is a main event time. True if this column contains the time of the main event that each row represents, in UTC.",
                  "type": "boolean"
                },
                "name": {
                  "description": "The name of the column.",
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "dataViewId": {
            "description": "The unique identifier of the dataView. Used in your workflows to query the data view. Alphanumeric characters, must be all lowercase, can contain underscores. Cannot contain spaces.",
            "type": "string"
          },
          "description": {
            "description": "The human-readable description of the data view.",
            "type": "string"
          },
          "filterMainEventTimeToWindow": {
            "description": "If true, the workflow engine will automatically filter rows in this data view to those whose main event time (as defined by the [DataViewColumn.isMainEventTime] == true column) is within the time window that the data set is queried for.",
            "type": "boolean"
          },
          "inputSchema": {
            "description": "The root for resolving references to data sources in the [sqlQuery]. For example, if an [inputSchema] of *dsp* was provided, a reference to *impressions* would resolve to a data source whose full data source ID was *dsp.impressions*.",
            "type": "string"
          },
          "isDiscoverable": {
            "description": "False if the data view should not appear when listing in the schema explorer. If not provided the view will be discoverable. This does not have any effect on what kinds of workflows can reference the data source. Does not affect which data views are returned when listing data *views* - only those returned when listing data *sources*.",
            "type": "boolean"
          },
          "sqlQuery": {
            "description": "The SQL query that produces the data exposed by the view.",
            "type": "string"
          }
        },
        "required": [
          "columns",
          "dataViewId",
          "sqlQuery"
        ],
        "type": "object"
      },
      "DataViewColumnDataType": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/DataSourceSimpleDataType"
          },
          {
            "$ref": "#/components/schemas/DataSourceExpandedDataType"
          }
        ]
      },
      "DeleteCollaborationIdMappingTableResponse": {
        "type": "object"
      },
      "DeleteDataViewResponse": {
        "description": "Empty response object denoting successful deletion of a data view.",
        "type": "object"
      },
      "DeleteScheduleResponse": {
        "description": "Empty response object denoting successful deletion of a schedule.",
        "type": "object"
      },
      "DeleteWorkflowExecutionResponse": {
        "description": "Empty response object denoting successful deletion of a workflow execution.",
        "type": "object"
      },
      "DeleteWorkflowResponse": {
        "description": "Empty response object denoting successful deletion of a workflow.",
        "type": "object"
      },
      "Error": {
        "description": "The error response object.",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetCollaborationIdMappingJobForTrackingIdResponse": {
        "properties": {
          "idMappingJobId": {
            "description": "Unique identifier of the ID mapping workflow job linked to the tracking ID provided in the request.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetCollaborationIdMappingJobResponse": {
        "properties": {
          "idMappingJob": {
            "$ref": "#/components/schemas/CollaborationIdMappingJob"
          }
        },
        "type": "object"
      },
      "GetDataSourceResponse": {
        "properties": {
          "dataSource": {
            "$ref": "#/components/schemas/DataSource"
          }
        },
        "type": "object"
      },
      "GetDataViewResponse": {
        "properties": {
          "dataView": {
            "$ref": "#/components/schemas/DataView"
          }
        },
        "type": "object"
      },
      "GetInstanceAdvertisersResponse": {
        "properties": {
          "advertisers": {
            "description": "List of advertisers added to the AMC instance. Currently supported advertiser types include DSP advertisers and Sponsored Ads advertisers (entities).",
            "items": {
              "$ref": "#/components/schemas/Advertiser"
            },
            "maxItems": 1000,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "description": "Token to use in subsequent request to retrieve next page of results. Null if all results have been returned.",
            "type": "string"
          },
          "totalCount": {
            "description": "Total number of advertisers with the specified advertiser type in this instance",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "GetInstanceCollaborationResponse": {
        "properties": {
          "collaboration": {
            "$ref": "#/components/schemas/CollaborationSummary"
          }
        },
        "type": "object"
      },
      "GetInstanceResponse": {
        "properties": {
          "instance": {
            "$ref": "#/components/schemas/Instance"
          }
        },
        "type": "object"
      },
      "GetScheduleResponse": {
        "properties": {
          "schedule": {
            "$ref": "#/components/schemas/Schedule"
          }
        },
        "type": "object"
      },
      "GetWorkflowExecutionDownloadUrlsResponse": {
        "properties": {
          "downloadUrls": {
            "description": "A list of pre-signed S3 URLs for the workflow execution's results. Multiple URLs will be given for results that produce multiple files.",
            "items": {
              "type": "string"
            },
            "maxItems": 5,
            "minItems": 0,
            "type": "array"
          },
          "metadataDownloadUrls": {
            "description": "A list of pre-signed S3 URLs for the workflow execution's metadata used during execution.",
            "items": {
              "type": "string"
            },
            "maxItems": 5,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "description": "[Placeholder - To be used as a Future Scope] Token to use in subsequent request to retrieve next page of results. Null if all results have been returned.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "GetWorkflowExecutionResponse": {
        "properties": {
          "workflowExecution": {
            "$ref": "#/components/schemas/WorkflowExecution"
          }
        },
        "type": "object"
      },
      "GetWorkflowResponse": {
        "properties": {
          "workflow": {
            "$ref": "#/components/schemas/Workflow"
          }
        },
        "type": "object"
      },
      "Instance": {
        "description": "Details about an AMC instance.",
        "properties": {
          "advertiserTypes": {
            "description": "The set of advertiser types currently associated to this instance.",
            "items": {
              "enum": [
                "DISPLAY",
                "SAS",
                "SPONSORED_ADS"
              ],
              "type": "string"
            },
            "maxItems": 3,
            "minItems": 0,
            "type": "array"
          },
          "apiEndpoint": {
            "description": "The API URL for access the AMC reporting and Data Upload API. Each AMC instance has a unique API URL.",
            "type": "string"
          },
          "awsAccountId": {
            "description": "The 12-digit AWS account ID which owns the S3 bucket associated with the instance.",
            "type": "string"
          },
          "creationDatetime": {
            "description": "The date time string corresponding to the creation of the AMC instance in UTC. Format is yyyy-MM-dd'T'HH:mm:ss'Z'.",
            "format": "date-time",
            "type": "string"
          },
          "creationStatus": {
            "description": "The creation status of an AMC instance. The following table lists available statuses:\n\n|Status Name|Description|\n|-----------|-----------|\n|REQUESTED|Instance creation is successfully requested.|\n|SUBMITTED|Instance creation is submitted for processing.|\n|IN_PROGRESS|Instance creation is in progress.|\n|SUCCEEDED|This field is deprecated, use COMPLETED instead.|\n|COMPLETED|Instance creation is complete.|\n|FAILED|Instance creation failed.|",
            "enum": [
              "COMPLETED",
              "FAILED",
              "IN_PROGRESS",
              "REQUESTED",
              "SUBMITTED",
              "SUCCEEDED"
            ],
            "type": "string"
          },
          "customerCanonicalName": {
            "description": "Name of advertiser associated with the AMC instance.",
            "type": "string"
          },
          "dataUploadAwsAccountId": {
            "description": "This AWS account ID is generated by Amazon for each AMC instance. It allows AMC users to grant an AMC instance permission to read data files from an S3 bucket(s). For more info on AMC Data Upload and setting up permissions on an owned S3 bucket, visit https://advertising.amazon.com/API/docs/en-us/guides/amazon-marketing-cloud/advertiser-data-upload/advertiser-data-s3-bucket. This is not the ID of the customer linked AWS account.",
            "type": "string"
          },
          "entities": {
            "description": "The Amazon Advertising entities associated with this AMC instance.",
            "items": {
              "type": "string"
            },
            "maxItems": 1000,
            "minItems": 0,
            "type": "array"
          },
          "instanceId": {
            "description": "AMC instance identifier.",
            "type": "string"
          },
          "instanceName": {
            "description": "Human-readable AMC instance identifier.",
            "type": "string"
          },
          "s3BucketName": {
            "description": "The name of the S3 bucket associated with the AMC instance. This bucket will contain reporting workflow output.",
            "type": "string"
          },
          "s3BucketRegion": {
            "description": "The AWS region of the S3 bucket associated with the AMC instance.",
            "type": "string"
          }
        },
        "required": [
          "apiEndpoint",
          "awsAccountId",
          "creationDatetime",
          "creationStatus",
          "dataUploadAwsAccountId",
          "entities",
          "instanceId",
          "instanceName",
          "s3BucketName",
          "s3BucketRegion"
        ],
        "type": "object"
      },
      "InstanceCustomerAwsAccountMetadataPayload": {
        "description": "AWS account metadata",
        "properties": {
          "awsAccountId": {
            "description": "The identifier of the customer's AWS account.",
            "type": "string"
          },
          "bucketName": {
            "description": "The name of the S3 bucket in the customer's AWS account.",
            "type": "string"
          }
        },
        "required": [
          "awsAccountId",
          "bucketName"
        ],
        "type": "object"
      },
      "ListCollaborationIdMappingJobsPayload": {
        "description": "The payload of the request.",
        "properties": {
          "maxResults": {
            "default": 25,
            "description": "Optional. Maximum number of results to retrieve in a single API call.",
            "format": "int64",
            "maximum": 25,
            "type": "integer"
          },
          "nextToken": {
            "description": "Optional. The pagination token from the previous API call.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListCollaborationIdMappingJobsResponse": {
        "properties": {
          "idMappingJobs": {
            "description": "List of id mapping jobs.",
            "items": {
              "$ref": "#/components/schemas/CollaborationIdMappingJobSummary"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "idMappingTableId": {
            "description": "Unique identifier of the id mapping table the jobs are associated to.",
            "type": "string"
          },
          "nextToken": {
            "description": "The pagination token from the previous API call.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListCollaborationIdMappingTablesPayload": {
        "description": "The payload of the request.",
        "properties": {
          "maxResults": {
            "default": 100,
            "description": "Optional. Maximum number of results to retrieve in a single API call.",
            "format": "int64",
            "maximum": 100,
            "type": "integer"
          },
          "nextToken": {
            "description": "Optional. The pagination token from the previous API call.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListCollaborationIdMappingTablesResponse": {
        "properties": {
          "collaborationId": {
            "description": "Unique identifier of the collaboration the ID mapping tables are associated to.",
            "type": "string"
          },
          "idMappingTables": {
            "description": "The list of id mapping tables.",
            "items": {
              "$ref": "#/components/schemas/CollaborationIdMappingTable"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "description": "The pagination token from the previous API call.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListCollaborationIdNamespacesPayload": {
        "description": "The payload of the request.",
        "properties": {
          "maxResults": {
            "default": 100,
            "description": "Optional (not used). Maximum number of results to retrieve in a single API call. This API will always use the default value.",
            "format": "int64",
            "maximum": 100,
            "type": "integer"
          },
          "nextToken": {
            "description": "Optional. The pagination token from the previous API call.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListCollaborationIdNamespacesResponse": {
        "properties": {
          "collaborationId": {
            "description": "Unique identifier of the collaboration the ID namespaces are associated to.",
            "type": "string"
          },
          "collaborationIdNamespaceAssociations": {
            "description": "The list of ID namespaces associated to the collaboration.",
            "items": {
              "$ref": "#/components/schemas/CollaborationIdNamespaceAssociation"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "description": "The pagination token from the previous API call.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListDataSourcesResponse": {
        "properties": {
          "dataSources": {
            "description": "List of data sources.",
            "items": {
              "$ref": "#/components/schemas/DataSource"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "description": "Optional. Token to use in subsequent request to retrieve next page of results. Null if all results have been returned.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListDataViewsResponse": {
        "properties": {
          "dataSources": {
            "description": "List of data views.",
            "items": {
              "$ref": "#/components/schemas/DataView"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "description": "Optional. Token to use in subsequent request to retrieve next page of results. Null if all results have been returned.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListInstancesResponse": {
        "properties": {
          "instances": {
            "description": "List of AMC instances.",
            "items": {
              "$ref": "#/components/schemas/Instance"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "description": "Optional. Token to use in subsequent request to retrieve next page of results. Null if all results have been returned.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListSchedulesResponse": {
        "properties": {
          "nextToken": {
            "description": "Optional. Token to use in subsequent request to retrieve next page of results. Null if all results have been returned.",
            "type": "string"
          },
          "schedules": {
            "description": "List of schedules.",
            "items": {
              "$ref": "#/components/schemas/Schedule"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "ListWorkflowExecutionsResponse": {
        "properties": {
          "executions": {
            "description": "List of workflow executions.",
            "items": {
              "$ref": "#/components/schemas/WorkflowExecution"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "description": "Optional. Token to use in subsequent request to retrieve next page of results. Null if all results have been returned.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListWorkflowsResponse": {
        "properties": {
          "nextToken": {
            "description": "Optional. Token to use in subsequent request to retrieve next page of results. Null if all results have been returned.",
            "type": "string"
          },
          "workflows": {
            "description": "List of workflows.",
            "items": {
              "$ref": "#/components/schemas/Workflow"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object"
      },
      "OutputChannel": {
        "description": "Contains information about a channel for retrieving workflow execution output in an instance.",
        "properties": {
          "acrMemberId": {
            "description": "The account ID of the AWS Clean Rooms member to which results were delivered. Is only populated for the ACR channel type.",
            "type": "string"
          },
          "acrMembershipId": {
            "description": "The membership ID of the AWS Clean Rooms member to which results were delivered. Is only populated for the ACR channel type.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/OutputChannelType",
            "description": "The mechanism for retrieving output."
          }
        },
        "required": [
          "type"
        ],
        "type": "object"
      },
      "OutputChannelType": {
        "description": "Defines the mechanism for retrieving output for a workflow execution. The following are the possible output channel types:\n|Type|Description|\n|-----------|-----------|\n|DOWNLOAD|The output can be downloaded directly from AMC using the `GET /amc/reporting/{instanceId}/workflowExecutions/{workflowExecutionId}/downloadUrls` endpoint to retrieve pre-signed S3 URLs.|\n|PUBLISH|The output was published by AMC to the configured output bucket to the location indicated by the `outputS3URI` specified on the workflow execution.|\n|ACR|The output was directly published by AWS Clean Rooms to the defined member. For this channel type, the output's location and format is based on the output configuration defined for the membership in ACR. The account ID and membership ID for this member can be found in the `acrMemberId` and `acrMembershipId` on the output channel, respectively.|\",",
        "enum": [
          "ACR",
          "DOWNLOAD",
          "PUBLISH"
        ],
        "type": "string"
      },
      "RefreshCollaborationIdMappingTableResponse": {
        "properties": {
          "collaborationId": {
            "description": "Unique identifier of the collaboration the id mapping table belongs to.",
            "type": "string"
          },
          "idMappingWorkflowJobId": {
            "description": "Unique identifier of the job started to refresh the id mapping table. If AMC was not able to start the job, this field will be null and a tracking ID will be provided in the attribute queueTrackingId.",
            "type": "string"
          },
          "trackingId": {
            "description": "Unique identifier of a job tracking token in AMC. When this attribute is not null, it indicates an idMappingWorkflowJobId is not available at the time of the response. This identifier can be used to retrieve the idMappingWorkflowJobId at a later time when it is available.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "Schedule": {
        "properties": {
          "aggregationHourUtc": {
            "description": "Specifies the number of hours of offset from UTC, which designates the delineating hour for workflow runs.",
            "type": "integer"
          },
          "aggregationPeriod": {
            "description": "The cadence at which to run a workflow. The following table lists available periods:\n|Period Name|Description|\n|-----------|-----------|\n|Daily|Schedule a workflow to run every day. If selected, `aggregationStartDay` is not used and `aggregationHourUtc` specifies the number of hours of offset from UTC, which designates the delineating hour for workflow runs.|\n|Weekly|Schedule a workflow to run every every week.|",
            "enum": [
              "Daily",
              "Weekly"
            ],
            "type": "string"
          },
          "aggregationStartDay": {
            "description": "Day of week to start aggregations. If not specified, this defaults to the day of week that the schedule is created.",
            "enum": [
              "Friday",
              "Monday",
              "Saturday",
              "Sunday",
              "Thursday",
              "Tuesday",
              "Wednesday"
            ],
            "type": "string"
          },
          "disableAggregationControls": {
            "description": "If true aggregation controls were NOT applied to the workflow. \nQuery output could still be retrieved when aggregation controls were skipped if only requireSyntheticData was true.",
            "type": "boolean"
          },
          "requireSyntheticData": {
            "description": "If true the execution was allowed to use data sets that only contain synthetic data.",
            "type": "boolean"
          },
          "scheduleEnabled": {
            "description": "Boolean flag to signify whether or not the schedule is enabled. Disabled schedules will not run workflows.",
            "type": "boolean"
          },
          "scheduleId": {
            "description": "User-supplied identifier of the schedule.",
            "type": "string"
          },
          "workflowId": {
            "description": "The identifier of the workflow associated with the schedule.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateDataViewResponse": {
        "description": "Empty response object denoting successful update of a data view.",
        "type": "object"
      },
      "UpdateInstanceCustomerAwsAccountMetadataResponse": {
        "properties": {
          "cfnBucketUrl": {
            "description": "The CloudFormation link to create the S3 bucket in the customer's AWS account.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateScheduleResponse": {
        "description": "Empty response object denoting successful update of a schedule.",
        "type": "object"
      },
      "UpdateWorkflowExecutionResponse": {
        "description": "Empty response object denoting a successful update of a workflow execution.",
        "type": "object"
      },
      "UpdateWorkflowResponse": {
        "description": "Empty response object denoting a successful update of a workflow.",
        "type": "object"
      },
      "Workflow": {
        "description": "Workflows are defined as a set of operations that take previously defined data sources as input and use them to generate reports.       \n\nFurther information can be found in the AMC documentation hosted [here](https://advertising.amazon.com/dsp/help/apiv2/en/ADAPI-AMC-resource/AMCAPI-Documentation/).",
        "properties": {
          "filteredMetricsDiscriminatorColumn": {
            "description": "If this field is not provided, rows which do not meet the minimum distinct user count requirements will be completely filtered out of the workflow output. If this field is provided, rows which do not meet the minimum distinct user count requirements will have values in sensitive columns removed and then the output will be re-aggregated with [AggregationType.SUM].\n\nThis field gives the name of the boolean column that will be added to the workflow output that will discriminate between rows with and without values in sensitive columns removed. Unchanged rows will have a value of FALSE for this column and while rows with fields removed will have a value of TRUE.",
            "type": "string"
          },
          "inputParameters": {
            "description": "Optional. Defines the parameters that can be referenced by workflow definition. If workflow references a parameter not defined here the compilation fails.",
            "items": {
              "properties": {
                "columnType": {
                  "description": "The type of the column corresponding to the parameter. The following table lists available types:\n|Type Name|Description|\n|-----------|-----------|\n|METRIC|The column is a quantity or value rather than a dimension. In queries, metric columns are aggregated in `AggregateOperation`s. Typical examples include impressions and clicks.|\n|DIMENSION|The column is a characteristic rather than a quantity. In queries, dimension columns are used as group by keys in `AggregateOperation`s. Typical examples include `ad_id` and `campaign_id`.|",
                  "enum": [
                    "DIMENSION",
                    "METRIC"
                  ],
                  "type": "string"
                },
                "dataType": {
                  "description": "The data type of the parameter corresponding to the data type of a column. The following table lists available types:\n|Type Name|Description|\n|-----------|-----------|\n|BINARY|Binary data.|\n|BOOLEAN|TRUE or FALSE.|\n|BYTE|8 bit signed integral numeric data.|\n|CALENDAR_INTERVAL|An interval of time in months and milliseconds.|\n|DATE|Date with no time zone information. Output in CSV files is formatted as yyyy-MM-dd.|\n|DECIMAL|Decimal numeric data.|\n|DOUBLE|64 bit floating point numeric data.|\n|FLOAT|32 bit floating point numeric data.|\n|INTEGER|32 bit signed integral numeric data.|\n|LONG|64 bit signed integral numeric data.|\n|SHORT|16 bit signed integral numeric data.|\n|STRING|Text data. No length limitation can be specified.|\n|TIMESTAMP|Time with no time zone information. Output in CSV files is formatted as yyyy-MM-dd'T'HH:mm:ss.SSS.|",
                  "enum": [
                    "BINARY",
                    "BOOLEAN",
                    "BYTE",
                    "CALENDAR_INTERVAL",
                    "DATE",
                    "DECIMAL",
                    "DOUBLE",
                    "FLOAT",
                    "INTEGER",
                    "LONG",
                    "SHORT",
                    "STRING",
                    "TIMESTAMP"
                  ],
                  "type": "string"
                },
                "defaultValue": {
                  "description": "The value to assign to the parameter if no value is provided.",
                  "type": "string"
                },
                "description": {
                  "description": "The human-readable description of what the parameter is used for.",
                  "type": "string"
                },
                "displayName": {
                  "description": "The human-readable name of the parameter.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of the parameter used as a variable in SQL.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "inputSchema": {
            "description": "Optional. 'null' schema if not provided. Provides the schema to use when resolving unqualified data sources to avoid collisions. Data sources include their schema in their ids, ex: 'sandbox.dsp_impressions' has a schema of 'sandbox'. Fully qualified names in your SQL, ex: 'sandbox.dsp_impressions' will always work, but if name is used without the schema, ex: 'dsp_impressions', it will be resolved by using the provided input schema name.",
            "type": "string"
          },
          "outputColumns": {
            "description": "Optional. The columns that the workflow must produce as output. If provided, the workflow will be validated during compilation to ensure that the schema of the output from the workflow exactly matches the [outputColumns] provided. Serves as a way to protect against the output schema of the workflow unexpectedly changing if the [query] changes and as a way to better document exactly what a workflow produces.",
            "items": {
              "properties": {
                "columnType": {
                  "description": "The type of the column. The following table lists available types:\n|Type Name|Description|\n|-----------|-----------|\n|METRIC|The column is a quantity or value rather than a dimension. In queries, metric columns are aggregated in `AggregateOperation`s. Typical examples include impressions and clicks.|\n|DIMENSION|The column is a characteristic rather than a quantity. In queries, dimension columns are used as group by keys in `AggregateOperation`s. Typical examples include `ad_id` and `campaign_id`.|",
                  "enum": [
                    "DIMENSION",
                    "METRIC"
                  ],
                  "type": "string"
                },
                "dataType": {
                  "description": "The data type of the column. The following table lists available types:\n|Type Name|Description|\n|-----------|-----------|\n|BINARY|Binary data.|\n|BOOLEAN|TRUE or FALSE.|\n|BYTE|8 bit signed integral numeric data.|\n|CALENDAR_INTERVAL|An interval of time in months and milliseconds.|\n|DATE|Date with no time zone information. Output in CSV files is formatted as yyyy-MM-dd.|\n|DECIMAL|Decimal numeric data.|\n|DOUBLE|64 bit floating point numeric data.|\n|FLOAT|32 bit floating point numeric data.|\n|INTEGER|32 bit signed integral numeric data.|\n|LONG|64 bit signed integral numeric data.|\n|SHORT|16 bit signed integral numeric data.|\n|STRING|Text data. No length limitation can be specified.|\n|TIMESTAMP|Time with no time zone information. Output in CSV files is formatted as yyyy-MM-dd'T'HH:mm:ss.SSS.|",
                  "enum": [
                    "BINARY",
                    "BOOLEAN",
                    "BYTE",
                    "CALENDAR_INTERVAL",
                    "DATE",
                    "DECIMAL",
                    "DOUBLE",
                    "FLOAT",
                    "INTEGER",
                    "LONG",
                    "SHORT",
                    "STRING",
                    "TIMESTAMP"
                  ],
                  "type": "string"
                },
                "dataTypePrecision": {
                  "description": "Specifies additional information about the dataType for DataType.DECIMAL. Corresponds to the total number of digits.",
                  "type": "integer"
                },
                "dataTypeScale": {
                  "description": "Specifies additional information about the dataType DataType.DECIMAL. Corresponds to the number of digits to the right of the decimal point.",
                  "type": "integer"
                },
                "description": {
                  "description": "The human-readable description of what the parameter is used for.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of the column.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "outputFormat": {
            "description": "Specifies the CSV output format for a workflow.",
            "properties": {
              "escapeCharacter": {
                "description": "The character to use for escaping characters inside a quoted field.",
                "type": "string"
              },
              "quoteCharacter": {
                "description": "The character to use for quoting fields that need it.",
                "type": "string"
              },
              "separatorCharacter": {
                "description": "The character to use for separating fields.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "privacyFilteringBehavior": {
            "description": "Specifies how workflow output will be processed after sensitive values have been removed. The following table lists available behaviors:\n|Behavior|Description|\n|-----------|-----------|\n|REMOVE_VALUES|If a row does not meet the minimum distinct contributing user count for the one or more columns based on the [ColumnSensitivity] for those columns, the sensitive values will be removed from those columns.|\n|REMOVE_ROWS|If a row does not meet the minimum distinct contributing user count for the one or more columns based on the [ColumnSensitivity] for those columns, the entire row will be removed.|",
            "enum": [
              "REMOVE_ROWS",
              "REMOVE_VALUES"
            ],
            "type": "string"
          },
          "query": {
            "description": "Defines a list of [operations] that produce a set of output data based on input data from one or more [DataSource]s. The first operation in a query must be a [SelectOperation] that uses a [DataSource] as its input data source. In most cases, (specifically, whenever the query uses any column from a [DataSource] with event level data), the query must have an [AggregateOperation] at some point after all the necessary data has been selected.\n\nThe last operation on the query will produce the output for the query. The schema of the output, including the [DataType]s and [ColumnType]s for each column, will be based on the schemas of the [DataSource]s used in the query and on the way they are affected by the [operations] that make up the query.\n\nEach operation is represented as a self-contained JSON object. Available operations are enumerated in the AMC documentation hosted [here](https://advertising.amazon.com/dsp/help/apiv2/en/ADAPI-AMC-resource/AMCAPI-Documentation/).",
            "items": {
              "format": "byte",
              "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
              "type": "string"
            },
            "maxItems": 100,
            "minItems": 0,
            "type": "array"
          },
          "sqlQuery": {
            "description": "The SQL query to run to produce output for the workflow. If a [sqlQuery] and a [query] are both provided, the [sqlQuery] will be used.",
            "type": "string"
          },
          "workflowId": {
            "description": "User-supplied identifier of the workflow.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkflowExecution": {
        "properties": {
          "acrCollaborationId": {
            "description": "The ID of the ACR collaboration that the execution is being executed in. Will only be populated for executions where at least one customer-owned member will be receiving results directly from ACR.",
            "type": "string"
          },
          "acrCustomerMembershipId": {
            "description": "The ID of the ACR membership for the primary customer-owned member. Will only be populated for executions where the primary customer-owned member will be receiving results directly from ACR.",
            "type": "string"
          },
          "acrDetailPageUrl": {
            "description": "The URL for the detail page of the ACR protected query performing the compute for this execution. Will only be populated for executions where the primary customer-owned member will be receiving results directly from ACR and where a protected query has already been submitted.",
            "type": "string"
          },
          "acrProtectedQueryId": {
            "description": "The ID for the ACR protected query performing the compute for this execution. Will only be populated for executions where at least one customer-owned member will be receiving results directly from ACR and where a protected query has already been submitted.",
            "type": "string"
          },
          "advertisers": {
            "description": "If the execution was configured to read data for only a specified list of advertisers queryable for the instance, contains the advertisers for which data was read. Null if the execution was not configured to read data for a specific subset of advertisers.",
            "items": {
              "$ref": "#/components/schemas/AmcAdvertiserIdentifier"
            },
            "type": "array"
          },
          "createTime": {
            "description": "The time the workflow execution was created. This field is in UTC and is formatted as yyyy-MM-dd'T'HH:mm:ss'Z'.",
            "type": "string"
          },
          "disableAggregationControls": {
            "description": "If true aggregation controls were NOT applied to the workflow. \nQuery output could still be retrieved when aggregation controls were skipped if only requireSyntheticData was true.",
            "type": "boolean"
          },
          "expireTime": {
            "description": "The time at which the workflow execution will alarm due to SLA breach (if it has not already started running). This field is in UTC and is formatted as yyyy-MM-dd'T'HH:mm:ss'Z'.",
            "type": "string"
          },
          "invalidationOffsetSecs": {
            "description": "How much wider of a time range should be used for fact invalidation data than for fact data, in seconds. For example, an offset of 259200 (72 hours) would mean that a workflow that read fact data for 2019-07-04T00:00:00Z -2019-07-04T01:00:00Z and would read fact invalidation data for 2019-07-04T00:00:00Z -2019-07-07T01:00:00Z.",
            "type": "integer"
          },
          "lastUpdatedTime": {
            "description": "The last time the workflow execution was updated. This field is in UTC and is formatted as yyyy-MM-dd'T'HH:mm:ss'Z'.",
            "type": "string"
          },
          "outputChannels": {
            "description": "The possible channels for retrieving workflow execution output in this instance with information about whether or not it's possible to retrieve the output of this workflow execution through the channel and if not, why. Note that this property is populated with all possible output channels for the instance - to determine if output is available through a given channel for this workflow execution, see the `status` property of the channel.",
            "items": {
              "$ref": "#/components/schemas/WorkflowExecutionOutputChannel"
            },
            "type": "array"
          },
          "outputS3URI": {
            "description": "The fully qualified S3 path at which the output files for the workflow execution will be created inside the AMC instance. Note that the path the files will be created in your AWS account will be the same except for the bucket.",
            "type": "string"
          },
          "requireSyntheticData": {
            "description": "If true the execution was allowed to use data sets that only contain synthetic data.",
            "type": "boolean"
          },
          "sqlQuery": {
            "description": "The SQL query that was executed.\nWill only be populated if includeWorkflow was true for the request to retrieve the execution and the workflow used a SQL query.",
            "type": "string"
          },
          "status": {
            "description": "The current status of the workflow execution. The following table lists available statuses:\n|Status Name|Description|\n|-----------|-----------|\n|PENDING|The workflow execution has not yet started running. It may be queueing to run, waiting for data to become available, or waiting until a specified time.|\n|RUNNING|The workflow execution is running.|\n|SUCCEEDED|The workflow execution has finished successfully.|\n|FAILED|The workflow execution failed.|\n|CANCELLED|The workflow execution was cancelled before succeeding or failing.",
            "enum": [
              "CANCELLED",
              "FAILED",
              "PENDING",
              "RUNNING",
              "SUCCEEDED"
            ],
            "type": "string"
          },
          "timeWindowEnd": {
            "description": "The end of the time window for data being used as input for the workflow execution. This is a nominal time window and not a guarantee that timestamps on any rows will be inside this window. This field is in UTC and is formatted as yyyy-MM-dd'T'HH:mm:ss'Z'.",
            "type": "string"
          },
          "timeWindowEndOriginal": {
            "description": "The originally provided end of the time window. This field is in the original timezone and is formatted as yyyy-MM-dd'T'HH:mm:ss with no offset. The value will be in UTC when the execution was created before this field was added.",
            "type": "string"
          },
          "timeWindowStart": {
            "description": "The start of the time window for data being used as input for the workflow execution. This is a nominal time window and not a guarantee that timestamps on any rows will be inside this window. This field is in UTC and is formatted as yyyy-MM-dd'T'HH:mm:ss'Z'.",
            "type": "string"
          },
          "timeWindowStartOriginal": {
            "description": "The originally provided start of the time window. This field is in the original timezone and is formatted as yyyy-MM-dd'T'HH:mm:ss with no offset. The value will be in UTC when the execution was created before this field was added.",
            "type": "string"
          },
          "timeWindowTimeZoneOriginal": {
            "description": "The timezone provided when creating the workflow execution. This field allows using the timeWindowStartOriginal and timeWindowEndOriginal fields to produce the original localized time window. This field is formatted as the TZ database name (ex: 'America/Denver'). The value will be 'UTC' when the execution was created before this field was added.",
            "type": "string"
          },
          "waitUntil": {
            "description": "The time at which the workflow execution will not start running before. This field is in UTC and is formatted as yyyy-MM-dd'T'HH:mm:ss'Z'.",
            "type": "string"
          },
          "workflowExecutionId": {
            "description": "The unique identifier of the workflow execution.",
            "type": "string"
          },
          "workflowExecutionTimeoutSeconds": {
            "description": "The amount of time that the workflow is allowed to execute in the compute engine. If a workflow exceeds this value, the execution will timeout.",
            "type": "integer"
          },
          "workflowId": {
            "description": "The ID of the workflow being executed. This ID is automatically generated when a new execution is created and can be used to retrieve the status of the execution via the read workflow execution endpoint.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "WorkflowExecutionOutputChannel": {
        "description": "Contains information about a channel for retrieving workflow execution output in an instance and information about whether or not the output of a specific workflow execution can be retrieved through the channel and if not, why.",
        "properties": {
          "acrDetailPageUrl": {
            "description": "The URL of the AWS Clean Rooms protected query detail page URL which can be used to view information about this protected query, including information about where the output can be retrieved. Is only populated for the `ACR` channel type.",
            "type": "string"
          },
          "channel": {
            "$ref": "#/components/schemas/OutputChannel",
            "description": "The channel for receiving output."
          },
          "status": {
            "$ref": "#/components/schemas/WorkflowExecutionOutputChannelStatus",
            "description": "A status indicating whether output can be retrieved through the channel now or in the future."
          },
          "statusReason": {
            "description": "If output cannot be retrieved through this channel, contains a description of why not. Otherwise, is null.",
            "type": "string"
          }
        },
        "required": [
          "channel",
          "status"
        ],
        "type": "object"
      },
      "WorkflowExecutionOutputChannelStatus": {
        "description": "Defines the status of output being available for a workflow execution through a given channel. The following are the possible statuses:\n|Status|Description|\n|-----------|-----------|\n|PENDING|The output is not yet available but is expected to eventually be available through this channel. This status typically indicates that the workflow execution is still running.|\n|AVAILABLE|The output is available through this channel.|\n|UNAVAILABLE|The output is not and will not be available through this channel because of known configuration or restrictions. For example, if the workflow execution queried a customer-connected ACR data set which did not include AMC in its list of allowed results receivers, the status for the `DOWNLOAD` channel will be `UNAVAILABLE` because this channel requires that output is delivered to AMC. For channels with an `UNAVAILABLE` status, the status reason of the workflow execution output channel will be populated with information about why that channel was unavailable.|\n|FAILED|The output is not and will not be available through this channel due to an unexpected error. For example, if an output bucket has been defined for the instance but permission for AMC to write to that bucket has not been configured, the status for the `PUBLISH` channel will be `FAILED`. For channels with a `FAILED` status, the status reason of the workflow execution output channel will be populated with information about why output is not available through that channel.|\",",
        "enum": [
          "AVAILABLE",
          "FAILED",
          "PENDING",
          "UNAVAILABLE"
        ],
        "type": "string"
      }
    },
    "securitySchemes": {}
  },
  "info": {
    "description": "This set of APIs allow developers to manage their Amazon Marketing Cloud accounts and instances.",
    "title": "AMC Administration",
    "version": "3.0"
  },
  "openapi": "3.0.1",
  "paths": {
    "/amc/accounts": {
      "get": {
        "description": "Get a list of AMC Accounts that the user have access to.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "AmcpLinkListAmcAccounts",
        "parameters": [
          {
            "description": "Optional. Token to retrieve subsequent page of results.",
            "in": "query",
            "name": "nextToken",
            "schema": {
              "description": "Optional. Token to retrieve subsequent page of results.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkListAmcAccountsResponseContent"
                }
              }
            },
            "description": "Operation is successful."
          },
          "400": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkBadRequestExceptionResponseContent"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkUnauthorizedRequestExceptionResponseContent"
                }
              }
            },
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation."
          },
          "403": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkForbiddenRequestExceptionResponseContent"
                }
              }
            },
            "description": "Forbidden. The request failed because the user does not have access to the specified resource."
          },
          "429": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkTooManyRequestsExceptionResponseContent"
                }
              }
            },
            "description": "Too Many Requests. The request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.amcaudiencesconnections.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcpLinkServerExceptionResponseContent"
                }
              }
            },
            "description": "Internal server error. Retry later. Contact support if this response persists."
          }
        },
        "summary": "Get a list of AMC Accounts that the user have access to.",
        "tags": [
          "AMC Accounts"
        ]
      }
    },
    "/amc/instances": {
      "get": {
        "description": "Gets information about all AMC instances that the requesting entity has access to. Information for each instance includes the name, creation status, and the entities with access to the instance.",
        "operationId": "listInstances",
        "parameters": [
          {
            "description": "The identifier of a client associated with an Amazon Developer account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "This header is deprecated.   Clients must pass in Amazon-Advertising-API-AdvertiserId and Amazon-Advertising-API-MarketplaceId as headers",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The AMC Account ID",
            "in": "header",
            "name": "Amazon-Advertising-API-AdvertiserId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Marketplace ID",
            "in": "header",
            "name": "Amazon-Advertising-API-MarketplaceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Token to retrieve subsequent page of results.",
            "in": "query",
            "name": "nextToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Limits the number of items to return in the response. Max value is 100. Defaults to 100.",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ListInstancesResponse"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized. Request failed because user is not authenticated or is not allowed to invoke the operation."
          },
          "403": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden. Request failed because user does not have access to a specified resource."
          },
          "422": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unprocessable Entity - Request was understood, but contained invalid parameters"
          },
          "429": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too many requests. The request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Internal server error. Retry later. Contact support if this response persists."
          }
        },
        "summary": "Gets information about all AMC instances.",
        "tags": [
          "Instance management"
        ]
      },
      "post": {
        "description": "Creates a new AMC instance.",
        "operationId": "createInstance",
        "parameters": [
          {
            "description": "The identifier of a client associated with an Amazon Developer account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The AMC Account ID",
            "in": "header",
            "name": "Amazon-Advertising-API-AdvertiserId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Marketplace ID",
            "in": "header",
            "name": "Amazon-Advertising-API-MarketplaceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.amcinstances.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/AmcCreateInstanceRequest"
              }
            }
          },
          "description": "Request to create a new AMC instance.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcCreateInstanceResponse"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized. Request failed because user is not authenticated or is not allowed to invoke the operation."
          },
          "403": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden. Request failed because user does not have access to a specified resource."
          },
          "429": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too many requests. The request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Internal server error. Retry later. Contact support if this response persists."
          }
        },
        "summary": "Creates a new AMC instance.",
        "tags": [
          "Instance management"
        ]
      }
    },
    "/amc/instances/{instanceId}": {
      "delete": {
        "description": "Deletes the requested AMC instance.",
        "operationId": "deleteInstance",
        "parameters": [
          {
            "description": "The identifier of a client associated with an Amazon Developer account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The AMC Account ID",
            "in": "header",
            "name": "Amazon-Advertising-API-AdvertiserId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Marketplace ID",
            "in": "header",
            "name": "Amazon-Advertising-API-MarketplaceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The instance identifier.",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcDeleteInstanceResponse"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized. Request failed because user is not authenticated or is not allowed to invoke the operation."
          },
          "403": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden. Request failed because user does not have access to a specified resource."
          },
          "404": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found. The requested resource either does not exist or the currently authenticated user does not have permission to access it."
          },
          "429": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too many requests. The request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Internal server error. Retry later. Contact support if this response persists."
          }
        },
        "summary": "Deletes the requested AMC instance.",
        "tags": [
          "Instance management"
        ]
      },
      "get": {
        "description": "Gets information about the requested AMC instance. Information includes the name, creation status, and the entities with access to the instance.",
        "operationId": "getInstance",
        "parameters": [
          {
            "description": "The identifier of a client associated with an Amazon Developer account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "This header is deprecated.   Clients must pass in Amazon-Advertising-API-AdvertiserId and Amazon-Advertising-API-MarketplaceId as headers",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The AMC Account ID",
            "in": "header",
            "name": "Amazon-Advertising-API-AdvertiserId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Marketplace ID",
            "in": "header",
            "name": "Amazon-Advertising-API-MarketplaceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The instance identifier.",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInstanceResponse"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized. Request failed because user is not authenticated or is not allowed to invoke the operation."
          },
          "403": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden. Request failed because user does not have access to a specified resource."
          },
          "404": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found. The requested resource either does not exist or the currently authenticated user does not have permission to access it."
          },
          "415": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unsupported media type provided in the accept header of the request."
          },
          "429": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too many requests. The request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Internal server error. Retry later. Contact support if this response persists."
          }
        },
        "summary": "Gets information about the requested AMC instance.",
        "tags": [
          "Instance management"
        ]
      },
      "put": {
        "description": "Updates the requested AMC instance.",
        "operationId": "updateInstance",
        "parameters": [
          {
            "description": "The identifier of a client associated with an Amazon Developer account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The AMC Account ID",
            "in": "header",
            "name": "Amazon-Advertising-API-AdvertiserId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Marketplace ID",
            "in": "header",
            "name": "Amazon-Advertising-API-MarketplaceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The instance identifier.",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.amcinstances.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/AmcUpdateInstanceRequest"
              }
            }
          },
          "description": "Request to update an existing AMC instance",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcUpdateInstanceResponse"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized. Request failed because user is not authenticated or is not allowed to invoke the operation."
          },
          "403": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden. Request failed because user does not have access to a specified resource."
          },
          "404": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found. The requested resource either does not exist or the currently authenticated user does not have permission to access it."
          },
          "429": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too many requests. The request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Internal server error. Retry later. Contact support if this response persists."
          }
        },
        "summary": "Updates the requested AMC instance.",
        "tags": [
          "Instance management"
        ]
      }
    },
    "/amc/instances/{instanceId}/advertisers": {
      "get": {
        "description": "Gets advertisers information about the requested AMC instance.",
        "operationId": "getInstanceAdvertisers",
        "parameters": [
          {
            "description": "The identifier of a client associated with an Amazon Developer account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "This header is deprecated.   Clients must pass in Amazon-Advertising-API-AdvertiserId and Amazon-Advertising-API-MarketplaceId as headers",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The AMC Account ID",
            "in": "header",
            "name": "Amazon-Advertising-API-AdvertiserId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Marketplace ID",
            "in": "header",
            "name": "Amazon-Advertising-API-MarketplaceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The instance identifier.",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Filter advertisers by advertiser type in the response, if not provided, return all advertisers",
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Token to retrieve subsequent page of results.",
            "in": "query",
            "name": "nextToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Limits the number of items to return in the response. Max value is 100. Defaults to 100.",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInstanceAdvertisersResponse"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized. Request failed because user is not authenticated or is not allowed to invoke the operation."
          },
          "403": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden. Request failed because user does not have access to a specified resource."
          },
          "404": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found. The requested resource either does not exist or the currently authenticated user does not have permission to access it."
          },
          "429": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too many requests. The request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Internal server error. Retry later. Contact support if this response persists."
          }
        },
        "summary": "Gets advertisers information about the requested AMC instance.",
        "tags": [
          "Instance management"
        ]
      }
    },
    "/amc/instances/{instanceId}/advertisers/updates": {
      "get": {
        "description": "Gets advertiser updates for the requested AMC instance.",
        "operationId": "listAdvertiserUpdates",
        "parameters": [
          {
            "description": "The identifier of a client associated with an Amazon Developer account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The AMC Account ID",
            "in": "header",
            "name": "Amazon-Advertising-API-AdvertiserId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Marketplace ID",
            "in": "header",
            "name": "Amazon-Advertising-API-MarketplaceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The instance identifier.",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Token to retrieve subsequent page of results.",
            "in": "query",
            "name": "nextToken",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Optional. Limits the number of items to return in the response. Max value is 100. Defaults to 100.",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcListAdvertiserUpdatesResponse"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized. Request failed because user is not authenticated or is not allowed to invoke the operation."
          },
          "403": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden. Request failed because user does not have access to a specified resource."
          },
          "404": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found. The requested resource either does not exist or the currently authenticated user does not have permission to access it."
          },
          "429": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too many requests. The request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Internal server error. Retry later. Contact support if this response persists."
          }
        },
        "summary": "Lists advertiser updates for the requested AMC instance.",
        "tags": [
          "Instance management"
        ]
      },
      "post": {
        "description": "Creates a new advertiser update for the requested AMC instance. If there is already an open request(REQUESTED, AWAITING_APPROVAL, UPDATING), the request will fail.",
        "operationId": "createAdvertiserUpdate",
        "parameters": [
          {
            "description": "The identifier of a client associated with an Amazon Developer account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The AMC Account ID",
            "in": "header",
            "name": "Amazon-Advertising-API-AdvertiserId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Marketplace ID",
            "in": "header",
            "name": "Amazon-Advertising-API-MarketplaceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The instance identifier.",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.amcinstances.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/AmcCreateAdvertiserUpdateRequest"
              }
            }
          },
          "description": "Request to create a new instance advertiser update.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcCreateAdvertiserUpdateResponse"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized. Request failed because user is not authenticated or is not allowed to invoke the operation."
          },
          "403": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden. Request failed because user does not have access to a specified resource."
          },
          "404": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found. The requested resource either does not exist or the currently authenticated user does not have permission to access it."
          },
          "429": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too many requests. The request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Internal server error. Retry later. Contact support if this response persists."
          }
        },
        "summary": "Creates a new advertiser update for the requested AMC instance.",
        "tags": [
          "Instance management"
        ]
      }
    },
    "/amc/instances/{instanceId}/advertisers/updates/{updateId}": {
      "get": {
        "description": "Gets the requested advertiser update for the requested AMC instance.",
        "operationId": "getAdvertiserUpdate",
        "parameters": [
          {
            "description": "The identifier of a client associated with an Amazon Developer account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The AMC Account ID",
            "in": "header",
            "name": "Amazon-Advertising-API-AdvertiserId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Marketplace ID",
            "in": "header",
            "name": "Amazon-Advertising-API-MarketplaceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The instance identifier.",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The advertiser update identifier.",
            "in": "path",
            "name": "updateId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AmcGetAdvertiserUpdateResponse"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized. Request failed because user is not authenticated or is not allowed to invoke the operation."
          },
          "403": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden. Request failed because user does not have access to a specified resource."
          },
          "404": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found. The requested resource either does not exist or the currently authenticated user does not have permission to access it."
          },
          "429": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too many requests. The request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Internal server error. Retry later. Contact support if this response persists."
          }
        },
        "summary": "Gets the requested advertiser update for the requested AMC instance.",
        "tags": [
          "Instance management"
        ]
      }
    },
    "/amc/instances/{instanceId}/collaboration": {
      "get": {
        "description": "Gets the collaboration metadata for the requested AMC instance. Collaboration metadata is only available in instances backed by ACR.",
        "operationId": "getInstanceCollaboration",
        "parameters": [
          {
            "description": "The identifier of a client associated with an Amazon Developer account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "This header is deprecated.   Clients must pass in Amazon-Advertising-API-AdvertiserId and Amazon-Advertising-API-MarketplaceId as headers",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The AMC Account ID",
            "in": "header",
            "name": "Amazon-Advertising-API-AdvertiserId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Marketplace ID",
            "in": "header",
            "name": "Amazon-Advertising-API-MarketplaceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The instance identifier.",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInstanceCollaborationResponse"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized. Request failed because user is not authenticated or is not allowed to invoke the operation."
          },
          "403": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden. Request failed because user does not have access to a specified resource."
          },
          "404": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found. The requested resource either does not exist or the currently authenticated user does not have permission to access it."
          },
          "429": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too many requests. The request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Internal server error. Retry later. Contact support if this response persists."
          }
        },
        "summary": "Gets the collaboration metadata for the requested AMC instance.",
        "tags": [
          "Collaboration instance management"
        ]
      }
    },
    "/amc/instances/{instanceId}/collaboration/idmappingtables": {
      "post": {
        "description": "Creates an ID Mapping Table in the requested AMC instance collaboration and starts the job to populate the table.",
        "operationId": "createCollaborationIdMappingTable",
        "parameters": [
          {
            "description": "The identifier of a client associated with an Amazon Developer account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "This header is deprecated. Clients must pass in Amazon-Advertising-API-AdvertiserId and Amazon-Advertising-API-MarketplaceId as headers",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The AMC Account ID",
            "in": "header",
            "name": "Amazon-Advertising-API-AdvertiserId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Marketplace ID",
            "in": "header",
            "name": "Amazon-Advertising-API-MarketplaceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The instance identifier.",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.amcinstances.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCollaborationIdMappingTablePayload"
              }
            }
          },
          "description": "The required input data to create the ID Mapping Table.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCollaborationIdMappingTableResponse"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized. Request failed because user is not authenticated or is not allowed to invoke the operation."
          },
          "403": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden. Request failed because user does not have access to a specified resource."
          },
          "404": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found. The requested resource either does not exist or the currently authenticated user does not have permission to access it."
          },
          "429": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too many requests. The request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Internal server error. Retry later. Contact support if this response persists."
          }
        },
        "summary": "Creates an ID Mapping Table in the requested AMC instance collaboration and starts the job to populate the table.",
        "tags": [
          "Collaboration instance management"
        ]
      }
    },
    "/amc/instances/{instanceId}/collaboration/idmappingtables/list": {
      "post": {
        "description": "Lists the ID mapping tables in the collaboration in the requested AMC instance. ID Mapping Tables are only available in instances backed by ACR.",
        "operationId": "listCollaborationIdMappingTables",
        "parameters": [
          {
            "description": "The identifier of a client associated with an Amazon Developer account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "This header is deprecated.   Clients must pass in Amazon-Advertising-API-AdvertiserId and Amazon-Advertising-API-MarketplaceId as headers",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The AMC Account ID",
            "in": "header",
            "name": "Amazon-Advertising-API-AdvertiserId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Marketplace ID",
            "in": "header",
            "name": "Amazon-Advertising-API-MarketplaceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The instance identifier.",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.amcinstances.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/ListCollaborationIdMappingTablesPayload"
              }
            }
          },
          "description": "The payload of the request.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCollaborationIdMappingTablesResponse"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized. Request failed because user is not authenticated or is not allowed to invoke the operation."
          },
          "403": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden. Request failed because user does not have access to a specified resource."
          },
          "404": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found. The requested resource either does not exist or the currently authenticated user does not have permission to access it."
          },
          "429": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too many requests. The request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Internal server error. Retry later. Contact support if this response persists."
          }
        },
        "summary": "Lists the ID mapping tables in the collaboration in the requested AMC instance.",
        "tags": [
          "Collaboration instance management"
        ]
      }
    },
    "/amc/instances/{instanceId}/collaboration/idmappingtables/{idMappingTableId}": {
      "delete": {
        "description": "Deletes the given ID Mapping Table in the collaboration for the requested AMC instance.",
        "operationId": "deleteCollaborationIdMappingTable",
        "parameters": [
          {
            "description": "The identifier of a client associated with an Amazon Developer account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "This header is deprecated.   Clients must pass in Amazon-Advertising-API-AdvertiserId and Amazon-Advertising-API-MarketplaceId as headers",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The AMC Account ID",
            "in": "header",
            "name": "Amazon-Advertising-API-AdvertiserId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Marketplace ID",
            "in": "header",
            "name": "Amazon-Advertising-API-MarketplaceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The instance identifier.",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID mapping table identifier.",
            "in": "path",
            "name": "idMappingTableId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteCollaborationIdMappingTableResponse"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized. Request failed because user is not authenticated or is not allowed to invoke the operation."
          },
          "403": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden. Request failed because user does not have access to a specified resource."
          },
          "404": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found. The requested resource either does not exist or the currently authenticated user does not have permission to access it."
          },
          "429": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too many requests. The request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Internal server error. Retry later. Contact support if this response persists."
          }
        },
        "summary": "Deletes the given ID Mapping Table in the collaboration for the requested AMC instance.",
        "tags": [
          "Collaboration instance management"
        ]
      }
    },
    "/amc/instances/{instanceId}/collaboration/idmappingtables/{idMappingTableId}/jobTracker/{trackingId}": {
      "get": {
        "description": "Retrieves the ID mapping workflow job associated to the tracking ID. ID mapping workflow jobs are only available in instances backed by ACR.",
        "operationId": "getCollaborationIdMappingJobForTrackingId",
        "parameters": [
          {
            "description": "The identifier of a client associated with an Amazon Developer account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "This header is deprecated.   Clients must pass in Amazon-Advertising-API-AdvertiserId and Amazon-Advertising-API-MarketplaceId as headers",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The AMC Account ID",
            "in": "header",
            "name": "Amazon-Advertising-API-AdvertiserId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Marketplace ID",
            "in": "header",
            "name": "Amazon-Advertising-API-MarketplaceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The instance identifier.",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID mapping table identifier.",
            "in": "path",
            "name": "idMappingTableId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The job tracking ID. Tracks when the ID mapping workflow job associated to the ID mapping table created by this request is available.",
            "in": "path",
            "name": "trackingId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCollaborationIdMappingJobForTrackingIdResponse"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized. Request failed because user is not authenticated or is not allowed to invoke the operation."
          },
          "403": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden. Request failed because user does not have access to a specified resource."
          },
          "404": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found. The requested resource either does not exist or the currently authenticated user does not have permission to access it."
          },
          "429": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too many requests. The request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Internal server error. Retry later. Contact support if this response persists."
          }
        },
        "summary": "Retrieves the ID mapping workflow job associated to the tracking ID.",
        "tags": [
          "Collaboration instance management"
        ]
      }
    },
    "/amc/instances/{instanceId}/collaboration/idmappingtables/{idMappingTableId}/jobs/list": {
      "post": {
        "description": "Lists the jobs associated to the given ID mapping table in the collaboration for the requested AMC instance. The response is paginated. Maximum number of jobs in the response is 100. If more jobs exist, the token included in the response can be used to get the next page of jobs.",
        "operationId": "listCollaborationIdMappingJobs",
        "parameters": [
          {
            "description": "The identifier of a client associated with an Amazon Developer account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "This header is deprecated.   Clients must pass in Amazon-Advertising-API-AdvertiserId and Amazon-Advertising-API-MarketplaceId as headers",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The AMC Account ID",
            "in": "header",
            "name": "Amazon-Advertising-API-AdvertiserId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Marketplace ID",
            "in": "header",
            "name": "Amazon-Advertising-API-MarketplaceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The instance identifier.",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID mapping table identifier.",
            "in": "path",
            "name": "idMappingTableId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.amcinstances.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/ListCollaborationIdMappingJobsPayload"
              }
            }
          },
          "description": "The payload of the request.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCollaborationIdMappingJobsResponse"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized. Request failed because user is not authenticated or is not allowed to invoke the operation."
          },
          "403": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden. Request failed because user does not have access to a specified resource."
          },
          "404": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found. The requested resource either does not exist or the currently authenticated user does not have permission to access it."
          },
          "429": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too many requests. The request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Internal server error. Retry later. Contact support if this response persists."
          }
        },
        "summary": "Lists the ID mapping jobs associated to the ID mapping table.",
        "tags": [
          "Collaboration instance management"
        ]
      }
    },
    "/amc/instances/{instanceId}/collaboration/idmappingtables/{idMappingTableId}/jobs/{jobId}": {
      "get": {
        "description": "Gets the metadata of the job associated to the ID Mapping Table in the collaboration for the requested AMC instance. ID mapping job metadata is only available in instances backed by ACR.",
        "operationId": "getCollaborationIdMappingJob",
        "parameters": [
          {
            "description": "The identifier of a client associated with an Amazon Developer account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "This header is deprecated.   Clients must pass in Amazon-Advertising-API-AdvertiserId and Amazon-Advertising-API-MarketplaceId as headers",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The AMC Account ID",
            "in": "header",
            "name": "Amazon-Advertising-API-AdvertiserId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Marketplace ID",
            "in": "header",
            "name": "Amazon-Advertising-API-MarketplaceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The instance identifier.",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID mapping table identifier.",
            "in": "path",
            "name": "idMappingTableId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID mapping job identifier.",
            "in": "path",
            "name": "jobId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCollaborationIdMappingJobResponse"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized. Request failed because user is not authenticated or is not allowed to invoke the operation."
          },
          "403": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden. Request failed because user does not have access to a specified resource."
          },
          "404": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found. The requested resource either does not exist or the currently authenticated user does not have permission to access it."
          },
          "429": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too many requests. The request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Internal server error. Retry later. Contact support if this response persists."
          }
        },
        "summary": "Gets the ID mapping job metadata for the requested AMC instance.",
        "tags": [
          "Collaboration instance management"
        ]
      }
    },
    "/amc/instances/{instanceId}/collaboration/idmappingtables/{idMappingTableId}/refresh": {
      "post": {
        "description": "Starts a workflow job to refresh the data in the given ID Mapping Table in the collaboration for the requested AMC instance. Only one refresh every 14 days is allowed.",
        "operationId": "refreshCollaborationIdMappingTable",
        "parameters": [
          {
            "description": "The identifier of a client associated with an Amazon Developer account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "This header is deprecated.   Clients must pass in Amazon-Advertising-API-AdvertiserId and Amazon-Advertising-API-MarketplaceId as headers",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The AMC Account ID",
            "in": "header",
            "name": "Amazon-Advertising-API-AdvertiserId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Marketplace ID",
            "in": "header",
            "name": "Amazon-Advertising-API-MarketplaceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The instance identifier.",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID mapping table identifier.",
            "in": "path",
            "name": "idMappingTableId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshCollaborationIdMappingTableResponse"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized. Request failed because user is not authenticated or is not allowed to invoke the operation."
          },
          "403": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden. Request failed because user does not have access to a specified resource."
          },
          "404": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found. The requested resource either does not exist or the currently authenticated user does not have permission to access it."
          },
          "429": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too many requests. The request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Internal server error. Retry later. Contact support if this response persists."
          }
        },
        "summary": "Refreshes the data in the given ID Mapping Table in the collaboration for the requested AMC instance.",
        "tags": [
          "Collaboration instance management"
        ]
      }
    },
    "/amc/instances/{instanceId}/collaboration/idnamespaces/list": {
      "post": {
        "description": "Lists the advertiser ID namespaces that are not connected to an ID mapping table in the collaboration in the requested AMC instance. Advertiser ID Namespaces are only available in instances backed by ACR.",
        "operationId": "listCollaborationIdNamespaces",
        "parameters": [
          {
            "description": "The identifier of a client associated with an Amazon Developer account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "This header is deprecated.   Clients must pass in Amazon-Advertising-API-AdvertiserId and Amazon-Advertising-API-MarketplaceId as headers",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The AMC Account ID",
            "in": "header",
            "name": "Amazon-Advertising-API-AdvertiserId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Marketplace ID",
            "in": "header",
            "name": "Amazon-Advertising-API-MarketplaceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The instance identifier.",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.amcinstances.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/ListCollaborationIdNamespacesPayload"
              }
            }
          },
          "description": "The payload of the request.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCollaborationIdNamespacesResponse"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized. Request failed because user is not authenticated or is not allowed to invoke the operation."
          },
          "403": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden. Request failed because user does not have access to a specified resource."
          },
          "404": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found. The requested resource either does not exist or the currently authenticated user does not have permission to access it."
          },
          "429": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too many requests. The request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Internal server error. Retry later. Contact support if this response persists."
          }
        },
        "summary": "Lists the ID namespaces associated to the collaboration in the requested AMC instance.",
        "tags": [
          "Collaboration instance management"
        ]
      }
    },
    "/amc/instances/{instanceId}/updateCustomerAwsAccount": {
      "post": {
        "description": "Updates customer's AWS account metadata in the requested AMC instance.",
        "operationId": "updateInstanceCustomerAwsAccountMetadata",
        "parameters": [
          {
            "description": "The identifier of a client associated with an Amazon Developer account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "This header is deprecated. Clients must pass in Amazon-Advertising-API-AdvertiserId and Amazon-Advertising-API-MarketplaceId as headers",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The AMC Account ID",
            "in": "header",
            "name": "Amazon-Advertising-API-AdvertiserId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Marketplace ID",
            "in": "header",
            "name": "Amazon-Advertising-API-MarketplaceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The instance identifier.",
            "in": "path",
            "name": "instanceId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.amcinstances.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/InstanceCustomerAwsAccountMetadataPayload"
              }
            }
          },
          "description": "The AWS account metadata.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateInstanceCustomerAwsAccountMetadataResponse"
                }
              }
            },
            "description": "Successful operation."
          },
          "400": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Unauthorized. Request failed because user is not authenticated or is not allowed to invoke the operation."
          },
          "403": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Forbidden. Request failed because user does not have access to a specified resource."
          },
          "404": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Not Found. The requested resource either does not exist or the currently authenticated user does not have permission to access it."
          },
          "429": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Too many requests. The request was rate-limited. Retry later."
          },
          "500": {
            "content": {
              "application/vnd.amcinstances.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            },
            "description": "Internal server error. Retry later. Contact support if this response persists."
          }
        },
        "summary": "Updates customer's AWS account metadata in the requested AMC instance.",
        "tags": [
          "Instance management"
        ]
      }
    }
  }
}