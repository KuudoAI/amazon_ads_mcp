{
  "components": {
    "callbacks": {},
    "examples": {},
    "headers": {},
    "links": {},
    "parameters": {},
    "requestBodies": {},
    "responses": {},
    "schemas": {
      "APPROVED_AD_POLICY": {
        "enum": [
          "STORE4V_SPOTLIGHT",
          "STORES_MODERATION",
          "HSA4V_PRODUCTS",
          "AD_POST"
        ],
        "type": "string"
      },
      "ASIN": {
        "description": "The ASIN value on which to filter.",
        "type": "string"
      },
      "ASSET_EXTENSION": {
        "enum": [
          "JPG",
          "JPEG",
          "PNG"
        ],
        "type": "string"
      },
      "ASSET_SUB_TYPE": {
        "description": "STORE4V_SPOTLIGHT = Store Spotlight STORES_MODERATION = Stores HSA4V_Products = Sponsored Brands AD_POST = Posts\n",
        "enum": [
          "AUTHOR_IMAGE",
          "LIFESTYLE_IMAGE",
          "PRODUCT_IMAGE",
          "OTHER_IMAGE",
          "LOGO"
        ],
        "type": "string"
      },
      "ASSET_TYPE": {
        "description": "Asset types available are only the following:",
        "enum": [
          "IMAGE"
        ],
        "type": "string"
      },
      "CAMPAIGN_ID": {
        "description": "The campaignID for which to filter.",
        "type": "string"
      },
      "CAMPAIGN_NAME": {
        "description": "The name of the campaign for which to filter.",
        "type": "string"
      },
      "DATE_UPLOADED": {
        "description": "The value for this should be timestamp in milliseconds. It is the same as creation date.",
        "type": "string"
      },
      "PROGRAM": {
        "enum": [
          "A_PLUS"
        ],
        "type": "string"
      },
      "SIZE": {
        "description": "File size in bytes.",
        "type": "string"
      },
      "TAG": {
        "description": "A tag is assigned to a creative asset at time of registration. Values can include any tags that you have created.",
        "type": "string"
      },
      "caAccounts": {
        "description": "The list of advertiser accounts the asset can be shared with. All the accounts within this list will be able to search this asset. Additional validation of checking that the accounts are associated will be done as part of this call.",
        "items": {
          "type": "string"
        },
        "maxItems": 100,
        "minItems": 1,
        "type": "array"
      },
      "caAdPolicyModerationResult": {
        "properties": {
          "locale": {
            "type": "string"
          },
          "marketplaceId": {
            "type": "string"
          },
          "moderationStatus": {
            "$ref": "#/components/schemas/caModerationStatus"
          },
          "policyName": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "caArgumentList": {
        "description": "List of arguments for translation string",
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "caAsins": {
        "description": "Tagging assets with ASIN, promotes asset discoverability downstream. If ASIN is provided at the time of upload/during asset registration, it is applied as a tag on that asset. This allows for that asset to be searchable using that ASIN#. For e.g., An advertiser may want to search for assets tagged with ASIN BC10001, so they can create a store spotlight ad with product images for that ASIN.",
        "items": {
          "type": "string"
        },
        "maxItems": 100,
        "minItems": 1,
        "type": "array"
      },
      "caAsset": {
        "properties": {
          "assetId": {
            "type": "string"
          },
          "assetSubTypes": {
            "items": {
              "$ref": "#/components/schemas/caAssetSubType"
            },
            "type": "array"
          },
          "assetType": {
            "$ref": "#/components/schemas/caAssetType"
          },
          "associatedAccountIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "associatedContexts": {
            "$ref": "#/components/schemas/caAssociatedContextTypeMapping"
          },
          "collections": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "createdBy": {
            "type": "string"
          },
          "creationTime": {
            "format": "int64",
            "type": "integer"
          },
          "fileMetadata": {
            "$ref": "#/components/schemas/caFileMetadata"
          },
          "lastUpdatedBy": {
            "type": "string"
          },
          "lastUpdatedTime": {
            "format": "int64",
            "type": "integer"
          },
          "marketplaces": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "moderationPolicyMap": {
            "$ref": "#/components/schemas/caModerationPolicyMap"
          },
          "name": {
            "type": "string"
          },
          "specCheckApprovedPrograms": {
            "$ref": "#/components/schemas/caSpecCheckApprovedPrograms"
          },
          "status": {
            "$ref": "#/components/schemas/caAssetStatus"
          },
          "storageLocationUrls": {
            "$ref": "#/components/schemas/caStorageLocationUrls"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "version": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "caAssetFiles": {
        "description": "Structure containing processed transcode files for an asset\n defaultUrl: This is the location of the original source.\n processedFiles: List of processed files with metadata.",
        "properties": {
          "defaultUrl": {
            "type": "string"
          },
          "processedFiles": {
            "items": {
              "$ref": "#/components/schemas/caProcessedFile"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "caAssetGlobal": {
        "properties": {
          "accountIds": {
            "$ref": "#/components/schemas/caAccounts"
          },
          "assetId": {
            "$ref": "#/components/schemas/caAssetId"
          },
          "assetType": {
            "$ref": "#/components/schemas/caAssetType"
          },
          "marketplaceId": {
            "$ref": "#/components/schemas/caMarketplaceIds"
          }
        },
        "type": "object"
      },
      "caAssetId": {
        "description": "The asset identifier.",
        "type": "string"
      },
      "caAssetIdentifier": {
        "properties": {
          "assetId": {
            "$ref": "#/components/schemas/caAssetId"
          },
          "version": {
            "$ref": "#/components/schemas/caVersion"
          }
        },
        "type": "object"
      },
      "caAssetName": {
        "description": "The name to be given to the asset being registered.",
        "type": "string"
      },
      "caAssetSortCriteria": {
        "properties": {
          "field": {
            "enum": [
              "CREATED_TIME",
              "SIZE",
              "NAME",
              "IMAGE_HEIGHT",
              "IMAGE_WIDTH",
              "EXTENSION"
            ],
            "type": "string"
          },
          "order": {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "caAssetSourceId": {
        "enum": [
          "AMAZON_CREATIVE_SERVICES",
          "AMAZON_VIDEO_BUILDER",
          "ASSET_LIBRARY",
          "SELF_SERVICE_FIRE_TV",
          "INTEGRATED_VIDEO_EXPERIENCE",
          "CANVA_PLUGIN",
          "AMAZON_DSP",
          "SPONSORED_DISPLAY",
          "SPONSORED_BRANDS"
        ],
        "type": "string"
      },
      "caAssetSourceInfo": {
        "description": "Details on the source of this asset and any source specific metadata to be associated against it.",
        "properties": {
          "assetSourceId": {
            "$ref": "#/components/schemas/caAssetSourceId"
          },
          "assetSourceMetadata": {
            "$ref": "#/components/schemas/caAssetSourceMetadataMap"
          }
        },
        "type": "object"
      },
      "caAssetSourceMetadataMap": {
        "additionalProperties": {
          "type": "string"
        },
        "description": "Map containing source information details. Total map size should not exceed 5, with each Key's length 50 and Value's length 500.",
        "example": {
          "key": "String upto length 50",
          "value": "String upto length 500"
        },
        "type": "object"
      },
      "caAssetStatus": {
        "enum": [
          "ACTIVE",
          "PROCESSING",
          "ARCHIVED"
        ],
        "type": "string"
      },
      "caAssetSubType": {
        "enum": [
          "LOGO",
          "PRODUCT_IMAGE",
          "AUTHOR_IMAGE",
          "LIFESTYLE_IMAGE",
          "OTHER_IMAGE",
          "BACKGROUND_VIDEO"
        ],
        "type": "string"
      },
      "caAssetSubTypes": {
        "items": {
          "$ref": "#/components/schemas/caAssetSubType"
        },
        "maxItems": 10,
        "minItems": 1,
        "type": "array"
      },
      "caAssetType": {
        "description": "The asset type you are registering [`IMAGE`, `VIDEO`]",
        "enum": [
          "IMAGE",
          "VIDEO"
        ],
        "type": "string"
      },
      "caAssetUploadLocation": {
        "description": "The url to upload the asset. The url expires in 15 minutes.",
        "type": "string"
      },
      "caAssetVersion": {
        "properties": {
          "assetFiles": {
            "$ref": "#/components/schemas/caAssetFiles"
          },
          "assetIdentifier": {
            "$ref": "#/components/schemas/caAssetIdentifier"
          },
          "assetStatus": {
            "$ref": "#/components/schemas/caAssetStatus"
          },
          "assetSubTypes": {
            "$ref": "#/components/schemas/caassetSubTypes"
          },
          "createdBy": {
            "type": "string"
          },
          "creationTime": {
            "format": "int64",
            "type": "integer"
          },
          "failedSpecChecks": {
            "$ref": "#/components/schemas/caProgramSpecificationsList"
          },
          "fileMetadata": {
            "$ref": "#/components/schemas/caFileMetadata"
          },
          "lastUpdatedBy": {
            "type": "string"
          },
          "lastUpdatedTime": {
            "format": "int64",
            "type": "integer"
          },
          "moderationContentList": {
            "items": {
              "$ref": "#/components/schemas/caModerationContent"
            },
            "type": "array"
          },
          "name": {
            "$ref": "#/components/schemas/caFileName"
          },
          "otherMetadata": {
            "$ref": "#/components/schemas/caMetadataMap"
          },
          "specCheckApprovedPrograms": {
            "$ref": "#/components/schemas/caSpecCheckApprovedPrograms"
          },
          "storageLocationUrls": {
            "$ref": "#/components/schemas/caStorageLocationUrls"
          },
          "url": {
            "$ref": "#/components/schemas/caURL"
          },
          "versionNotes": {
            "description": "The URL of the asset",
            "type": "string"
          }
        },
        "type": "object"
      },
      "caAssetVersionList": {
        "description": "The asset version list.",
        "items": {
          "$ref": "#/components/schemas/caAssetVersion"
        },
        "maxItems": 100,
        "minItems": 1,
        "type": "array"
      },
      "caAssociatedContextTypeMapping": {
        "description": "A hashmap of key-value pairs, this is the most accurate way of defining a map in swagger 2.0",
        "example": {
          "ASIN": "ContextDetailsList"
        },
        "type": "object"
      },
      "caAssociatedProgram": {
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/caMetadataMap"
          },
          "programName": {
            "$ref": "#/components/schemas/caProgram"
          }
        },
        "type": "object"
      },
      "caAssociatedSubEntity": {
        "properties": {
          "brandEntityId": {
            "description": "The entity id of brand, which can be retrieved using GET /brands.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "caAssociatedSubEntityList": {
        "description": "This field is required for sellers, but not required for vendors. The brandEntityId is required for sellers uploading assets for use in Sponsored Brands. As a best practice, ensure to include brandEntityId when uploading assets for sellers.",
        "items": {
          "$ref": "#/components/schemas/caAssociatedSubEntity"
        },
        "maxItems": 100,
        "minItems": 1,
        "type": "array"
      },
      "caAudioStreamMetadata": {
        "description": "Structure containing metadata of Video Stream.\n profile: This is the profile of the stream.\n duration: This is the duration of the stream in secs.\n codecName: This tells the codec of the media stream.\n codecType: This is the codec type of stream.\n bitRate: This tells the bit rate of the stream.\n channelLayout: This tells the channel of the stream\n sampleRate: This is the sample rate of the stream",
        "properties": {
          "bitRate": {
            "format": "int64",
            "type": "integer"
          },
          "channelLayout": {
            "type": "string"
          },
          "codecName": {
            "type": "string"
          },
          "codecType": {
            "type": "string"
          },
          "duration": {
            "format": "double",
            "type": "number"
          },
          "profile": {
            "type": "string"
          },
          "sampleRate": {
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "caBadRequest": {
        "description": "400 bad request",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "caBatchRegistrationContext": {
        "description": "Contextual information for asset registration e.g. what is the source of this asset.",
        "properties": {
          "assetSourceInfo": {
            "$ref": "#/components/schemas/caAssetSourceInfo"
          }
        },
        "type": "object"
      },
      "caFailedRegistrationDetails": {
        "description": "Structure containing details of registration failure for each url in a batch registration request.",
        "properties": {
          "failureReason": {
            "description": "Failure reason for registration of media file identified by corresponding url in batch registration request.",
            "type": "string"
          },
          "url": {
            "description": "Url of the media file as provided in the input of batch registration request.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "caFailedRegistrationDetailsList": {
        "description": "List containing failed registration details",
        "items": {
          "$ref": "#/components/schemas/caFailedRegistrationDetails"
        },
        "maxItems": 100,
        "minItems": 0,
        "type": "array"
      },
      "caFileMetadata": {
        "properties": {
          "aspectRatio": {
            "description": "The aspect ration of the asset.",
            "pattern": "[0-9]+:[0-9]+",
            "type": "string"
          },
          "audioSampleRate": {
            "format": "double",
            "type": "number"
          },
          "contentType": {
            "description": "The content type of the asset.",
            "enum": [
              "jpeg",
              "jpg",
              "png",
              "mp4",
              "image/jpg",
              "image/jpeg",
              "image/png"
            ],
            "type": "string"
          },
          "duration": {
            "format": "double",
            "type": "number"
          },
          "extension": {
            "description": "The extension of the file name.",
            "type": "string"
          },
          "fileSize": {
            "description": "The asset size in bytes.",
            "type": "number"
          },
          "height": {
            "description": "The height of the asset in pixels.",
            "type": "number"
          },
          "resolutionHeight": {
            "type": "integer"
          },
          "resolutionWidth": {
            "type": "integer"
          },
          "width": {
            "description": "The width of the asset in pixels.",
            "type": "number"
          }
        },
        "type": "object"
      },
      "caFileName": {
        "description": "The fileName of the asset.",
        "pattern": "[\\w]+\\.jpg|png|mp4|mov|wmv|avi",
        "type": "string"
      },
      "caFilterCriteria": {
        "description": "**Optional** this is used to filter results, we support two types of filters, valueFilter and rangeFilter",
        "properties": {
          "rangeFilters": {
            "items": {
              "$ref": "#/components/schemas/caRangeFilter"
            },
            "type": "array"
          },
          "valueFilters": {
            "items": {
              "$ref": "#/components/schemas/caValueFilter"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "caForbiddenRequest": {
        "description": "403 forbidden request",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "caInProgressRegistrationDetails": {
        "description": "Structure containing details of in progress registration for each url in a batch registration request.",
        "properties": {
          "url": {
            "description": "Url of the media file as provided in the input of batch registration request.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "caInProgressRegistrationDetailsList": {
        "description": "List containing in progress registration details",
        "items": {
          "$ref": "#/components/schemas/caInProgressRegistrationDetails"
        },
        "maxItems": 100,
        "minItems": 0,
        "type": "array"
      },
      "caInternalError": {
        "description": "500 internal server error",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "caMarketplaceIds": {
        "description": "The list of marketplace Ids.",
        "items": {
          "type": "string"
        },
        "maxItems": 100,
        "minItems": 1,
        "type": "array"
      },
      "caMetadataMap": {
        "additionalProperties": {
          "type": "string"
        },
        "description": "Include key-value pairs related to the asset. For DSP use \"dspAdvertiserId\" = \"ID\". Include program as AMAZON_DSP.",
        "example": {
          "dspAdvertiserId": "string"
        },
        "type": "object"
      },
      "caModerationContent": {
        "properties": {
          "adPolicyModerationResultList": {
            "items": {
              "$ref": "#/components/schemas/caAdPolicyModerationResult"
            },
            "maxItems": 10,
            "minItems": 1,
            "type": "array"
          },
          "assetSubType": {
            "$ref": "#/components/schemas/caAssetSubType"
          },
          "moderationContentStatus": {
            "$ref": "#/components/schemas/caModerationContentStatus"
          }
        },
        "type": "object"
      },
      "caModerationContentStatus": {
        "enum": [
          "IN_PROGRESS",
          "COMPLETED",
          "FAILED"
        ],
        "type": "string"
      },
      "caModerationPolicyMap": {
        "description": "A hashmap of key-value pairs, this is the most accurate way of defining a map in swagger 2.0",
        "example": {
          "HSA": "REJECTED",
          "Logo": "APPROVED",
          "Stores": "PENDING"
        },
        "type": "object"
      },
      "caModerationStatus": {
        "enum": [
          "REJECTED",
          "APPROVED",
          "PENDING"
        ],
        "type": "string"
      },
      "caPageCriteria": {
        "description": "used for pagination\n\nwhen searching for the first page, no need to put anything, otherwise, use the token returned from previous search call\n",
        "properties": {
          "identifier": {
            "$ref": "#/components/schemas/caPageIdentifier"
          },
          "size": {
            "$ref": "#/components/schemas/caPageSize"
          }
        },
        "type": "object"
      },
      "caPageIdentifier": {
        "properties": {
          "pageNumber": {
            "type": "integer"
          },
          "token": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "caPageSize": {
        "default": 25,
        "maximum": 500,
        "minimum": 1,
        "type": "integer"
      },
      "caProcessedFile": {
        "description": "Structure containing url, program, profile and metadata of processed output\n program: This is the program for which this transcoding is done.\n profile: This is the profile/outformat of the processed file.\n url: This is the location of the processed file.\n fileMetadata: This contains the metadata of file.",
        "properties": {
          "fileMetadata": {
            "$ref": "#/components/schemas/caProcessedFileMetadata"
          },
          "profile": {
            "$ref": "#/components/schemas/caProcessedUrlType"
          },
          "programs": {
            "items": {
              "$ref": "#/components/schemas/caProgram"
            },
            "type": "array"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "caProcessedFileMetadata": {
        "description": "Structure containing metadata of processed file.\n contentHash: This is the location of the original source.\n contentType: This is the location of the original source.\n videoStreams: This contains the metadata of Video streams.\n audioStreams: This contains the metadata of Audio streams.",
        "properties": {
          "audioStreams": {
            "items": {
              "$ref": "#/components/schemas/caAudioStreamMetadata"
            },
            "type": "array"
          },
          "contentHash": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "videoStreams": {
            "items": {
              "$ref": "#/components/schemas/caVideoStreamMetadata"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "caProcessedUrlType": {
        "description": "Enum containing different type of processed urls\n1. `MODERATION`: This is an internal url that will be used to moderate the asset.\n2. `IMAGE_THUMBNAIL_500`: This is the url for image asset type to support thumbnail rendering of max side 500px.\n3. `VIDEO_DEFAULT_OPTIMIZED`: This is the default processed url for video asset type for optimized rendering.\n4. `PRODUCT_VIDEO_OPTIMIZED`: This is the processed url for video that can be used for product.\n5. `BACKGROUND_VIDEO_TILE`: This is the processed url for video that can be used for background video tile.\n6. `VIDEO_TILE`: This is the processed url for video that can be used for video tile.\n7. `INTRO_SPLASH`: This is the processed url for video that can be used for intro splash.\n8. `MP4_260KBS_25FPS_48KHZ_64KBS_180P_H264_BASELINE`: This is the processed url for video that can be used with mp4 container, 260KBS bitrate, 25fps(frame per sec), 48KHZ sampleRate, 64KBS audio bit rate, 180p height and generated with codec profile H.264/ Baseline.\n9. `MP4_300KBS_15FPS_48KHZ_96KBS_360P`: This is the processed url for video that can be used with mp4 container, 300KBS bitrate, 15fps(frame per sec), 48KHZ sampleRate, 96KBS audio bit rate and 360p height.\n10. `MP4_300KBS_30FPS_48KHZ_96KBS_360P_H264_BASELINE`: This is the processed url for video that can be used with mp4 container, 300KBS bitrate, 30fps(frame per sec), 48KHZ sampleRate, 96KBS audio bit rate, 360p height and generated with codec profile H.264/ Baseline.\n11. `MP4_320KBS_25FPS_48KHZ_96KBS_576P_H264_HIGH`: This is the processed url for video that can be used with mp4 container, 320KBS bitrate, 25fps(frame per sec), 48KHZ sampleRate, 96KBS audio bit rate, 576p height and generated with codec profile H.264/ High.\n12. `MP4_375KBS_30FPS_48KHZ_192KBS_360P_H264_HIGH`: This is the processed url for video that can be used with mp4 container, 375KBS bitrate, 30fps(frame per sec), 48KHZ sampleRate, 192KBS audio bit rate, 360p height and generated with codec profile H.264/ High.\n13. `MP4_450KBS_15FPS_48KHZ_96KBS_360P`: This is the processed url for video that can be used with mp4 container, 450KBS bitrate, 15fps(frame per sec), 48KHZ sampleRate, 96KBS audio bit rate and 360p height. \n14. `MP4_450KBS_30FPS_48KHZ_96KBS_360P_H264_BASELINE`: This is the processed url for video that can be used with mp4 container, 450KBS bitrate, 30fps(frame per sec), 48KHZ sampleRate, 96KBS audio bit rate, 360p height and generated with codec profile H.264/ Baseline.\n15. `MP4_600KBS_15FPS_48KHZ_96KBS_480P`: This is the processed url for video that can be used with mp4 container, 600KBS bitrate, 15fps(frame per sec), 48KHZ sampleRate, 96KBS audio bit rate and 480p height. \n16. `MP4_600KBS_30FPS_48KHZ_96KBS_480P_H264_BASELINE`: This is the processed url for video that can be used with mp4 container, 600KBS bitrate, 30fps(frame per sec), 48KHZ sampleRate, 96KBS audio bit rate, 480p height and generated with codec profile H.264/ Baseline.\n17. `MP4_600KBS_25FPS_48KHZ_128KBS_360P_H264_BASELINE`: This is the processed url for video that can be used with mp4 container, 600KBS bitrate, 25fps(frame per sec), 48KHZ sampleRate, 128KBS audio bit rate, 360p height and generated with codec profile H.264/ Baseline.\n18. `MP4_600KBS_30FPS_48KHZ_128KBS_360P_H264_BASELINE`: This is the processed url for video that can be used with mp4 container, 600KBS bitrate, 30fps(frame per sec), 48KHZ sampleRate, 128KBS audio bit rate, 360p height and generated with codec profile H.264/ Baseline.\n19. `MP4_700KBS_24FPS_48KHZ_96KBS_360P`: This is the processed url for video that can be used with mp4 container, 700KBS bitrate, 24fps(frame per sec), 48KHZ sampleRate, 96KBS audio bit rate and 360p height.\n20. `MP4_750KBS_30FPS_48KHZ_192KBS_432P_H264_HIGH`: This is the processed url for video that can be used with mp4 container, 750KBS bitrate, 30fps(frame per sec), 48KHZ sampleRate, 192KBS audio bit rate, 432p height and generated with codec profile H.264/ High.\n21. `MP4_750KBS_25FPS_48KHZ_96KBS_576P_H264_HIGH`: This is the processed url for video that can be used with mp4 container, 750KBS bitrate, 25fps(frame per sec), 48KHZ sampleRate, 96KBS audio bit rate, 576p height and generated with codec profile H.264/ High.\n22. `MP4_900KBS_15FPS_48KHZ_96KBS_480P`: This is the processed url for video that can be used with mp4 container, 900KBS bitrate, 15fps(frame per sec), 48KHZ sampleRate, 96KBS audio bit rate and 480p height. \n23. `MP4_900KBS_30FPS_48KHZ_96KBS_480P_H264_BASELINE`: This is the processed url for video that can be used with mp4 container, 900KBS bitrate, 30fps(frame per sec), 48KHZ sampleRate, 96KBS audio bit rate, 480p height and generated with codec profile H.264/ Baseline.\n24. `MP4_1350KBS_30FPS_48KHZ_96KBS_720P`: This is the processed url for video that can be used with mp4 container, 1350KBS bitrate, 30fps(frame per sec), 48KHZ sampleRate, 96KBS audio bit rate and 720p height. \n25. `MP4_1350KBS_30FPS_48KHZ_96KBS_720P_H264_HIGH`: This is the processed url for video that can be used with mp4 container, 1.35MBPS bitrate, 30fps(frame per sec), 48KHZ sampleRate, 96KBS audio bit rate, 720p height and generated with codec profile H.264/ High.\n26. `MP4_1350KBS_25FPS_48KHZ_128KBS_540P_H264_MAIN`: This is the processed url for video that can be used with mp4 container, 1.35MBPS bitrate, 25fps(frame per sec), 48KHZ sampleRate, 128KBS audio bit rate, 540p height and generated with codec profile H.264/ Main.\n27. `MP4_1500KBS_24FPS_48KHZ_96KBS_576P`: This is the processed url for video that can be used with mp4 container, 1500KBS bitrate, 24fps(frame per sec), 48KHZ sampleRate, 96KBS audio bit rate and 576p height.\n28. `MP4_1500KBS_30FPS_48KHZ_192KBS_540P_H264_HIGH`: This is the processed url for video that can be used with mp4 container, 1.5MBPS bitrate, 30fps(frame per sec), 48KHZ sampleRate, 192KBS audio bit rate, 540p height and generated with codec profile H.264/ High.\n29. `MP4_1500KBS_25FPS_48KHZ_128KBS_576P_H264_HIGH`: This is the processed url for video that can be used with mp4 container, 1.5MBPS bitrate, 25fps(frame per sec), 48KHZ sampleRate, 128KBS audio bit rate, 576p height and generated with codec profile H.264/ High.\n30. `MP4_2000KBS_30FPS_48KHZ_96KBS_720P`: This is the processed url for video that can be used with mp4 container, 2000KBS bitrate, 30fps(frame per sec), 48KHZ sampleRate, 96KBS audio bit rate and 720p height. \n31. `MP4_2000KBS_30FPS_48KHZ_96KBS_720P_H264_HIGH`: This is the processed url for video that can be used with mp4 container, 2MBPS bitrate, 30fps(frame per sec), 48KHZ sampleRate, 96KBS audio bit rate, 720p height and generated with codec profile H.264/ High.\n32. `MP4_2000KBS_30FPS_48KHZ_192KBS_720P_H264_HIGH`: This is the processed url for video that can be used with mp4 container, 2MBPS bitrate, 30fps(frame per sec), 48KHZ sampleRate, 192KBS audio bit rate, 720p height and generated with codec profile H.264/ High.\n33. `MP4_2100KBS_30FPS_48KHZ_192KBS_576P_H264_HIGH`: This is the processed url for video that can be used with mp4 container, 2.1MBPS bitrate, 30fps(frame per sec), 48KHZ sampleRate, 192KBS audio bit rate, 576p height and generated with codec profile H.264/ High.\n34. `MP4_2100KBS_30FPS_48KHZ_192KBS_480P_H264_MAIN`: This is the processed url for video that can be used with mp4 container, 2.1MBPS bitrate, 30fps(frame per sec), 48KHZ sampleRate, 192KBS audio bit rate, 480p height and generated with codec profile H.264/ Main.\n35. `MP4_3400KBS_30FPS_48KHZ_192KBS_1080P_H264_HIGH`: This is the processed url for video that can be used with mp4 container, 3.4MBPS bitrate, 30fps(frame per sec), 48KHZ sampleRate, 192KBS audio bit rate, 1080p height and generated with codec profile H.264/ High.\n36. `MP4_3500KBS_24FPS_48KHZ_96KBS_1080P`: This is the processed url for video that can be used with mp4 container, 3500KBS bitrate, 24fps(frame per sec), 48KHZ sampleRate, 96KBS audio bit rate and 1080p height.\n37. `MP4_3500KBS_30FPS_48KHZ_128KBS_720P_H264_HIGH`: This is the processed url for video that can be used with mp4 container, 3.5MBPS bitrate, 30fps(frame per sec), 48KHZ sampleRate, 128KBS audio bit rate, 720p height and generated with codec profile H.264/ High.\n38. `MP4_4000KBS_30FPS_48KHZ_192KBS_1080P`: This is the processed url for video that can be used with mp4 container, 4000KBS bitrate, 30fps(frame per sec), 48KHZ sampleRate, 192KBS audio bit rate and 1080p height. \n39. `MP4_4000KBS_30FPS_48KHZ_192KBS_1080P_H264_HIGH`: This is the processed url for video that can be used with mp4 container, 4MBPS bitrate, 30fps(frame per sec), 48KHZ sampleRate, 192KBS audio bit rate, 1080p height and generated with codec profile H.264/ High.\n40. `MP4_10000KBS_30FPS_48KHZ_320KBS_1080P`: This is the processed url for video that can be used with mp4 container, 10000KBS bitrate, 30fps(frame per sec), 48KHZ sampleRate, 320KBS audio bit rate and 1080p height. \n41. `MP4_10000KBS_30FPS_48KHZ_320KBS_1080P_H264_HIGH`: This is the processed url for video that can be used with mp4 container, 10MBPS bitrate, 30fps(frame per sec), 48KHZ sampleRate, 320KBS audio bit rate, 1080p height and generated with codec profile H.264/ High.\n42. `MP4_20000KBS_AUTOFPS_48KHZ_320KBS`: This is the processed url for video that can be used with mp4 container, 20000KBS bitrate, auto fps, 48KHZ sampleRate, 320KBS audio bit rate.\n43. `MP4_20000KBS_AUTOFPS_48KHZ_320KBS_1080P_H264_HIGH`: This is the processed url for video that can be used with mp4 container, 20MBPS bitrate, auto fps, 48KHZ sampleRate, 320KBS audio bit rate, 1080p height and generated with codec profile H.264/ High.\n44. `MP4_25000KBS_30FPS_48KHZ_192KBS_1080P_H264_HIGH`: This is the processed url for video that can be used with mp4 container, 25MBPS bitrate, 30fps(frame per sec), 48KHZ sampleRate, 192KBS audio bit rate, 1080p height and generated with codec profile H.264/ High.\n45. `MP4_25000KBS_30FPS_48KHZ_192KBS_1080P_H264_MAIN`: This is the processed url for video that can be used with mp4 container, 25MBPS bitrate, 30fps(frame per sec), 48KHZ sampleRate, 192KBS audio bit rate, 1080p height and generated with codec profile H.264/ Main.",
        "enum": [
          "MODERATION",
          "IMAGE_THUMBNAIL_500",
          "VIDEO_DEFAULT_OPTIMIZED",
          "PRODUCT_VIDEO_OPTIMIZED",
          "BACKGROUND_VIDEO_TILE",
          "VIDEO_TILE",
          "INTRO_SPLASH",
          "MP4_260KBS_25FPS_48KHZ_64KBS_180P_H264_BASELINE",
          "MP4_300KBS_15FPS_48KHZ_96KBS_360P",
          "MP4_300KBS_30FPS_48KHZ_96KBS_360P_H264_BASELINE",
          "MP4_320KBS_25FPS_48KHZ_96KBS_576P_H264_HIGH",
          "MP4_375KBS_30FPS_48KHZ_192KBS_360P_H264_HIGH",
          "MP4_450KBS_15FPS_48KHZ_96KBS_360P",
          "MP4_450KBS_30FPS_48KHZ_96KBS_360P_H264_BASELINE",
          "MP4_600KBS_15FPS_48KHZ_96KBS_480P",
          "MP4_600KBS_30FPS_48KHZ_96KBS_480P_H264_BASELINE",
          "MP4_600KBS_25FPS_48KHZ_128KBS_360P_H264_BASELINE",
          "MP4_600KBS_30FPS_48KHZ_128KBS_360P_H264_BASELINE",
          "MP4_700KBS_24FPS_48KHZ_96KBS_360P",
          "MP4_750KBS_30FPS_48KHZ_192KBS_432P_H264_HIGH",
          "MP4_750KBS_25FPS_48KHZ_96KBS_576P_H264_HIGH",
          "MP4_900KBS_15FPS_48KHZ_96KBS_480P",
          "MP4_900KBS_30FPS_48KHZ_96KBS_480P_H264_BASELINE",
          "MP4_1350KBS_30FPS_48KHZ_96KBS_720P",
          "MP4_1350KBS_30FPS_48KHZ_96KBS_720P_H264_HIGH",
          "MP4_1350KBS_25FPS_48KHZ_128KBS_540P_H264_MAIN",
          "MP4_1500KBS_24FPS_48KHZ_96KBS_576P",
          "MP4_1500KBS_30FPS_48KHZ_192KBS_540P_H264_HIGH",
          "MP4_1500KBS_25FPS_48KHZ_128KBS_576P_H264_HIGH",
          "MP4_2000KBS_30FPS_48KHZ_96KBS_720P",
          "MP4_2000KBS_30FPS_48KHZ_96KBS_720P_H264_HIGH",
          "MP4_2000KBS_30FPS_48KHZ_192KBS_720P_H264_HIGH",
          "MP4_2100KBS_30FPS_48KHZ_192KBS_576P_H264_HIGH",
          "MP4_2100KBS_30FPS_48KHZ_192KBS_480P_H264_MAIN",
          "MP4_3400KBS_30FPS_48KHZ_192KBS_1080P_H264_HIGH",
          "MP4_3500KBS_24FPS_48KHZ_96KBS_1080P",
          "MP4_3500KBS_30FPS_48KHZ_128KBS_720P_H264_HIGH",
          "MP4_4000KBS_30FPS_48KHZ_192KBS_1080P",
          "MP4_4000KBS_30FPS_48KHZ_192KBS_1080P_H264_HIGH",
          "MP4_10000KBS_30FPS_48KHZ_320KBS_1080P",
          "MP4_10000KBS_30FPS_48KHZ_320KBS_1080P_H264_HIGH",
          "MP4_20000KBS_AUTOFPS_48KHZ_320KBS",
          "MP4_20000KBS_AUTOFPS_48KHZ_320KBS_1080P_H264_HIGH",
          "MP4_25000KBS_30FPS_48KHZ_192KBS_1080P_H264_HIGH",
          "MP4_25000KBS_30FPS_48KHZ_192KBS_1080P_H264_MAIN"
        ],
        "type": "string"
      },
      "caProcessedUrlsMap": {
        "additionalProperties": {
          "type": "object"
        },
        "description": "Map containing processed urls of the asset. Key is the processed type and value is the url",
        "example": {
          "MODERATION": "http://abc.xyz"
        },
        "type": "object"
      },
      "caProgram": {
        "description": "Use this field to specify which program you are uploading an asset for. Currently, the accepted value here on registration is to associate an asset with a DSP advertiser.",
        "enum": [
          "A_PLUS",
          "INTEGRATED_VIDEO_EXPERIENCE",
          "SB",
          "POSTS",
          "STORES",
          "SPONSORED_BRANDS_VIDEO",
          "SPONSORED_DISPLAY_VIDEO",
          "AMAZON_DSP",
          "FIRE_TV",
          "SPONSORED_TV",
          "PRODUCT_DESCRIPTION_PAGE"
        ],
        "type": "string"
      },
      "caProgramSpecifications": {
        "description": "Specification Check for program, This contains program name and specifications",
        "properties": {
          "specProgramName": {
            "$ref": "#/components/schemas/caSpecificationProgram"
          },
          "specifications": {
            "$ref": "#/components/schemas/caSpecificationList"
          }
        },
        "type": "object"
      },
      "caProgramSpecificationsList": {
        "description": "Specification Checks for all programs",
        "items": {
          "$ref": "#/components/schemas/caProgramSpecifications"
        },
        "type": "array"
      },
      "caRange": {
        "properties": {
          "end": {
            "type": "string"
          },
          "start": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "caRangeFilter": {
        "description": "Filter assets which have certain ranges of asset attributes.\n\nFor example, filter assets which have file size in the range of [10,20] or [40,50].\n",
        "properties": {
          "rangeField": {
            "$ref": "#/components/schemas/caValueRangeFilterOptions"
          },
          "ranges": {
            "items": {
              "$ref": "#/components/schemas/caRange"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "caRegistrationContext": {
        "description": "This is used on registration of an asset, to associate DSP assets to a specific advertiser. This is **required** for assets being uploaded for use in DSP.",
        "properties": {
          "associatedPrograms": {
            "items": {
              "$ref": "#/components/schemas/caAssociatedProgram"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "caRegistrationStatus": {
        "description": "Possible statuses of batch registration request",
        "enum": [
          "FAILED",
          "IN_PROGRESS",
          "COMPLETE"
        ],
        "type": "string"
      },
      "caResourceNotFound": {
        "description": "404 requested resource not found",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "caSearchAssetText": {
        "description": "The text used for searching assets, it matches asset name, asset name prefix, tags and ASINs associated with the assets",
        "type": "string"
      },
      "caSearchRequestCommon": {
        "properties": {
          "filterCriteria": {
            "$ref": "#/components/schemas/caFilterCriteria"
          },
          "pageCriteria": {
            "$ref": "#/components/schemas/caPageCriteria"
          },
          "sortCriteria": {
            "$ref": "#/components/schemas/caAssetSortCriteria"
          },
          "text": {
            "$ref": "#/components/schemas/caSearchAssetText"
          }
        }
      },
      "caSpecCheckApprovedPrograms": {
        "description": "List of spec programs for which asset spec check is approved",
        "items": {
          "$ref": "#/components/schemas/caSpecificationProgram"
        },
        "type": "array"
      },
      "caSpecification": {
        "description": "Structure containing specification\n stringId: This is the translated string Id, client will be retrieving the translation corresponding to this string.\n failureReason: This specifies the failure reason of specification. \n arguments: Arguments required for translation string.\n isPassed: Whether spec got passed or failed.\n actualValue: If spec got failed then this attribute represent the actual value of the spec parameter in the file.",
        "properties": {
          "actualValue": {
            "type": "string"
          },
          "arguments": {
            "$ref": "#/components/schemas/caArgumentList"
          },
          "failureReason": {
            "type": "string"
          },
          "isPassed": {
            "type": "boolean"
          },
          "stringId": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "caSpecificationList": {
        "description": "List of specifications",
        "items": {
          "$ref": "#/components/schemas/caSpecification"
        },
        "type": "array"
      },
      "caSpecificationProgram": {
        "enum": [
          "SPONSORED_BRANDS_VIDEO",
          "SPONSORED_DISPLAY_VIDEO",
          "SPONSORED_DISPLAY_LANDSCAPE_VIDEO",
          "SPONSORED_DISPLAY_PORTRAIT_VIDEO",
          "SPONSORED_DISPLAY_SQUARE_VIDEO",
          "STORES_VIDEO_TILE",
          "STORES_BACKGROUND_VIDEO_TILE",
          "STORES_INTRO_SPLASH",
          "FIRE_TV_FEATURE_ROTATOR",
          "SPONSORED_TV",
          "SPONSORED_BRANDS_VIDEO_PORTRAIT",
          "DEMAND_SIDE_PLATFORM_OTT",
          "DEMAND_SIDE_PLATFORM_OLV",
          "DEMAND_SIDE_PLATFORM_H1_DESKTOP",
          "DEMAND_SIDE_PLATFORM_H1_MOBILE",
          "LIVE_IMAGE_SPONSORED_DISPLAY"
        ],
        "type": "string"
      },
      "caStorageLocationUrls": {
        "properties": {
          "defaultUrl": {
            "type": "string"
          },
          "processedUrls": {
            "$ref": "#/components/schemas/caProcessedUrlsMap"
          }
        },
        "type": "object"
      },
      "caSuccessfulRegistrationDetails": {
        "description": "Structure containing details of successful registration for each url in a batch registration request.",
        "properties": {
          "assetIdentifier": {
            "$ref": "#/components/schemas/caAssetIdentifier"
          },
          "url": {
            "description": "Url of the media file as provided in the input of batch registration request.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "caSuccessfulRegistrationDetailsList": {
        "description": "List containing successful registration details",
        "items": {
          "$ref": "#/components/schemas/caSuccessfulRegistrationDetails"
        },
        "maxItems": 100,
        "minItems": 0,
        "type": "array"
      },
      "caTagList": {
        "description": "List of tags.",
        "items": {
          "$ref": "#/components/schemas/caTagName"
        },
        "maxItems": 10,
        "minItems": 1,
        "type": "array"
      },
      "caTagName": {
        "description": "Tag Name.",
        "minLength": 1,
        "type": "string"
      },
      "caThrottledRequest": {
        "description": "429 request throttled",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "caURL": {
        "description": "The URL of the asset.",
        "type": "string"
      },
      "caUnauthorizedRequest": {
        "description": "401 unauthorized request",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "caValueFilter": {
        "description": "Filter for certain values of asset attributes",
        "properties": {
          "valueField": {
            "enum": [
              "TAG",
              "ASIN",
              "CAMPAIGN_NAME",
              "CAMPAIGN_ID",
              "PROGRAM",
              "ASSET_TYPE",
              "ASSET_SUB_TYPE",
              "APPROVED_AD_POLICY",
              "ASSET_EXTENSION"
            ],
            "type": "string"
          },
          "values": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "caValueFilterOptions": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/ASSET_TYPE"
          },
          {
            "$ref": "#/components/schemas/TAG"
          },
          {
            "$ref": "#/components/schemas/ASSET_SUB_TYPE"
          },
          {
            "$ref": "#/components/schemas/APPROVED_AD_POLICY"
          },
          {
            "$ref": "#/components/schemas/ASSET_EXTENSION"
          },
          {
            "$ref": "#/components/schemas/PROGRAM"
          },
          {
            "$ref": "#/components/schemas/ASIN"
          },
          {
            "$ref": "#/components/schemas/CAMPAIGN_NAME"
          },
          {
            "$ref": "#/components/schemas/CAMPAIGN_ID"
          }
        ]
      },
      "caValueRangeFilterOptions": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/SIZE"
          },
          {
            "$ref": "#/components/schemas/DATE_UPLOADED"
          }
        ]
      },
      "caVersion": {
        "description": "The version of the asset.",
        "type": "string"
      },
      "caVersionInfo": {
        "properties": {
          "linkedAssetId": {
            "description": "The registering asset will be created as a new version of this linkedAssetId.",
            "type": "string"
          },
          "versionNotes": {
            "description": "The version notes that client can associate to the asset.Versioning enables users to update an old asset, so that you can ensure the latest asset is being used. You can upload a new version of an existing asset along with version notes. Any tags/ASINs from previous version, will be retained on the new version too.",
            "maxLength": 1000,
            "type": "string"
          }
        },
        "type": "object"
      },
      "caVideoStreamMetadata": {
        "description": "Structure containing metadata of Video Stream.\n profile: This is the profile of the stream.\n width: This is the resolution width of stream.\n height: This is the resolution height of stream.\n duration: This is the duration of the stream in secs.\n codecName: This tells the codec of the media stream.\n codecType: This is the codec type of stream.\n displayAspectRatio: This tells the aspect ratio of the stream.\n bitRate: This tells the bit rate of the stream.\n frameRate: This is the frame rate of video stream per sec.",
        "properties": {
          "bitRate": {
            "format": "int64",
            "type": "integer"
          },
          "codecName": {
            "type": "string"
          },
          "codecType": {
            "type": "string"
          },
          "displayAspectRatio": {
            "type": "string"
          },
          "duration": {
            "format": "double",
            "type": "number"
          },
          "frameRate": {
            "format": "double",
            "type": "number"
          },
          "height": {
            "type": "integer"
          },
          "profile": {
            "type": "string"
          },
          "width": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "caassetSubTypes": {
        "description": "1. For assetType `IMAGE` acceptable assetSubTypes are `LOGO`, `PRODUCT_IMAGE`, `AUTHOR_IMAGE`, `LIFESTYLE_IMAGE`, `OTHER_IMAGE`\n\n2. For assetType `VIDEO` acceptable assetSubtype is `BACKGROUND_VIDEO`.",
        "items": {
          "$ref": "#/components/schemas/caAssetSubType"
        },
        "maxItems": 10,
        "minItems": 1,
        "type": "array"
      }
    },
    "securitySchemes": {}
  },
  "info": {
    "description": "Use the creative assets API to create and manage video and image assets for use in Amazon Ads campaigns. For details on using this API, see [Creatives overview](guides/creative-asset/asset-library-overview).",
    "title": "Creative assets",
    "version": "3.0"
  },
  "openapi": "3.0.1",
  "paths": {
    "/assets": {
      "get": {
        "operationId": "getAsset",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The assetId",
            "in": "query",
            "name": "assetId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The versionId of the asset, if not included all versions will return.",
            "in": "query",
            "name": "version",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.creativeassetsgetresponse.v3+json": {
                "schema": {
                  "properties": {
                    "assetGlobal": {
                      "$ref": "#/components/schemas/caAssetGlobal"
                    },
                    "assetVersionList": {
                      "$ref": "#/components/schemas/caAssetVersionList"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returns asset metadata."
          },
          "400": {
            "content": {
              "application/vnd.creativeassetsgetresponse.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/caBadRequest"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/vnd.creativeassetsgetresponse.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/caUnauthorizedRequest"
                }
              }
            },
            "description": "UnAuthorized Operation"
          },
          "403": {
            "content": {
              "application/vnd.creativeassetsgetresponse.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/caForbiddenRequest"
                }
              }
            },
            "description": "Forbidden Operation"
          },
          "500": {
            "content": {
              "application/vnd.creativeassetsgetresponse.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/caInternalError"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieve an asset",
        "tags": [
          "Creative assets"
        ]
      }
    },
    "/assets/batchRegister": {
      "post": {
        "description": "This is an asynchronous api that provides clients an identifier for their batch registration request. They need to check for the status of their request by calling the `GET /assets/batchRegister/{requestId}` api with the identifier.",
        "operationId": "assetsBatchRegister",
        "parameters": [
          {
            "description": "The identifier of a client associated with a `Login with Amazon` account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.assetsbatchregisterrequest.v1+json": {
              "schema": {
                "properties": {
                  "assetDetailsList": {
                    "description": "List containing details of assets to register.",
                    "items": {
                      "description": "Object containing details for individual assets to register.",
                      "properties": {
                        "asinList": {
                          "$ref": "#/components/schemas/caAsins"
                        },
                        "assetSubTypeList": {
                          "$ref": "#/components/schemas/caAssetSubTypes"
                        },
                        "assetType": {
                          "$ref": "#/components/schemas/caAssetType"
                        },
                        "associatedPrograms": {
                          "items": {
                            "$ref": "#/components/schemas/caAssociatedProgram"
                          },
                          "maxItems": 100,
                          "minItems": 1,
                          "type": "array"
                        },
                        "name": {
                          "$ref": "#/components/schemas/caAssetName"
                        },
                        "otherMetadata": {
                          "additionalProperties": {
                            "type": "string"
                          },
                          "description": "Any other metadata that client wants to associate with this asset.",
                          "type": "object"
                        },
                        "skipAssetSubTypesDetection": {
                          "description": "Flag to determine if asset subtype detection should be skipped.",
                          "type": "boolean"
                        },
                        "tagList": {
                          "$ref": "#/components/schemas/caTagList"
                        },
                        "url": {
                          "description": "Url of the media file to be registered as an asset.",
                          "type": "string"
                        },
                        "versionInfo": {
                          "$ref": "#/components/schemas/caVersionInfo"
                        }
                      },
                      "type": "object"
                    },
                    "maxItems": 50,
                    "minItems": 1,
                    "type": "array"
                  },
                  "batchRegistrationContext": {
                    "$ref": "#/components/schemas/caBatchRegistrationContext"
                  }
                },
                "title": "AssetsBatchRegisterRequest",
                "type": "object"
              }
            }
          },
          "description": "Batch Register Uploaded Assets.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.assetsbatchregisterresponse.v1+json": {
                "schema": {
                  "properties": {
                    "requestId": {
                      "type": "string"
                    }
                  },
                  "title": "BatchRegisterAssetResponse",
                  "type": "object"
                }
              }
            },
            "description": "Identifier for the batch registration request."
          },
          "400": {
            "content": {
              "application/vnd.assetsbatchregisterresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/caBadRequest"
                }
              }
            },
            "description": "Bad Request."
          },
          "401": {
            "content": {
              "application/vnd.assetsbatchregisterresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/caUnauthorizedRequest"
                }
              }
            },
            "description": "UnAuthorized Operation."
          },
          "403": {
            "content": {
              "application/vnd.assetsbatchregisterresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/caForbiddenRequest"
                }
              }
            },
            "description": "Forbidden Operation."
          },
          "429": {
            "content": {
              "application/vnd.assetsbatchregisterresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/caThrottledRequest"
                }
              }
            },
            "description": "Operation Throttled."
          },
          "500": {
            "content": {
              "application/vnd.assetsbatchregisterresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/caInternalError"
                }
              }
            },
            "description": "Internal Server Error."
          }
        },
        "summary": "Batch register uploaded assets",
        "tags": [
          "Creative assets"
        ]
      }
    },
    "/assets/batchRegister/{requestId}": {
      "get": {
        "operationId": "getAssetsBatchRegister",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Batch asset registration request id. It is returned in response of POST /assets/batchRegister API.",
            "in": "path",
            "name": "requestId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.creativeassetsgetbatchregisterresponse.v3+json": {
                "schema": {
                  "properties": {
                    "failedAssetDetails": {
                      "$ref": "#/components/schemas/caFailedRegistrationDetailsList"
                    },
                    "inProgressAssetDetails": {
                      "$ref": "#/components/schemas/caInProgressRegistrationDetailsList"
                    },
                    "registrationStatus": {
                      "$ref": "#/components/schemas/caRegistrationStatus"
                    },
                    "successfullyRegisteredAssets": {
                      "$ref": "#/components/schemas/caSuccessfulRegistrationDetailsList"
                    }
                  },
                  "title": "GetBatchRegisterAssetStatusOutput",
                  "type": "object"
                }
              }
            },
            "description": "Registration status of each media file( uniquely identified by their url)."
          },
          "400": {
            "content": {
              "application/vnd.creativeassetsgetbatchregisterresponse.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/caBadRequest"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/vnd.creativeassetsgetbatchregisterresponse.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/caUnauthorizedRequest"
                }
              }
            },
            "description": "UnAuthorized Operation"
          },
          "403": {
            "content": {
              "application/vnd.creativeassetsgetbatchregisterresponse.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/caForbiddenRequest"
                }
              }
            },
            "description": "Forbidden Operation"
          },
          "429": {
            "content": {
              "application/vnd.assetsbatchregisterresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/caThrottledRequest"
                }
              }
            },
            "description": "Operation Throttled."
          },
          "500": {
            "content": {
              "application/vnd.creativeassetsgetbatchregisterresponse.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/caInternalError"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Retrieves status of the batch asset registration request, uniquely identified by requestId.",
        "tags": [
          "Creative assets"
        ]
      }
    },
    "/assets/register": {
      "post": {
        "description": "The API should be called once the asset is uploaded to the location\nprovided by the /asset/upload API endpoint. See [Creating assets](guides/creative-asset/creating-assets) to understand the call flow.",
        "operationId": "registerAsset",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "asinList": {
                    "$ref": "#/components/schemas/caAsins"
                  },
                  "assetSubTypeList": {
                    "$ref": "#/components/schemas/caassetSubTypes"
                  },
                  "assetType": {
                    "$ref": "#/components/schemas/caAssetType"
                  },
                  "associatedSubEntityList": {
                    "$ref": "#/components/schemas/caAssociatedSubEntityList"
                  },
                  "name": {
                    "$ref": "#/components/schemas/caAssetName"
                  },
                  "registrationContext": {
                    "$ref": "#/components/schemas/caRegistrationContext"
                  },
                  "skipAssetSubTypesDetection": {
                    "description": "Select true if you want to set an asset to a specific assetSubType, if this is not included the system may reclassify your asset based on specifications.",
                    "type": "boolean"
                  },
                  "tags": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "url": {
                    "$ref": "#/components/schemas/caAssetUploadLocation"
                  },
                  "versionInfo": {
                    "$ref": "#/components/schemas/caVersionInfo"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Note - **asinList**, **versionInfo**, and **tags** are optional in the request body.",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.creativeassetsregisterresponse.v3+json": {
                "schema": {
                  "properties": {
                    "assetId": {
                      "$ref": "#/components/schemas/caAssetId"
                    },
                    "failedSpecChecks": {
                      "$ref": "#/components/schemas/caProgramSpecificationsList"
                    },
                    "versionId": {
                      "$ref": "#/components/schemas/caVersion"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "AssetResource"
          },
          "400": {
            "content": {
              "application/vnd.creativeassetsregisterresponse.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/caBadRequest"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/vnd.creativeassetsregisterresponse.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/caUnauthorizedRequest"
                }
              }
            },
            "description": "UnAuthorized Operation"
          },
          "403": {
            "content": {
              "application/vnd.creativeassetsregisterresponse.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/caForbiddenRequest"
                }
              }
            },
            "description": "UnAuthorized Operation"
          },
          "404": {
            "content": {
              "application/vnd.creativeassetsregisterresponse.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/caResourceNotFound"
                }
              }
            },
            "description": "Resource not found"
          },
          "500": {
            "content": {
              "application/vnd.creativeassetsregisterresponse.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/caInternalError"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Register an uploaded asset",
        "tags": [
          "Creative assets"
        ]
      }
    },
    "/assets/search": {
      "post": {
        "operationId": "searchAssets",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/caSearchRequestCommon"
              }
            }
          },
          "description": "text - optional, this field matches asset name, asset name prefix, tags and ASINs associated with the assets\n\nfilterCriteria - optional, this is used to filter results\n\nsortCriteria - optional, this is used to get sorted results\n\npageCriteria - optional, this is used for pagination\n",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.creativeassetssearchassetsresponse.v3+json": {
                "schema": {
                  "properties": {
                    "assetList": {
                      "items": {
                        "$ref": "#/components/schemas/caAsset"
                      },
                      "type": "array"
                    },
                    "token": {
                      "type": "string"
                    },
                    "totalRecords": {
                      "format": "int64",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returns search results"
          },
          "400": {
            "content": {
              "application/vnd.creativeassetssearchassetsresponse.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/caBadRequest"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/vnd.creativeassetssearchassetsresponse.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/caUnauthorizedRequest"
                }
              }
            },
            "description": "UnAuthorized Operation"
          },
          "403": {
            "content": {
              "application/vnd.creativeassetssearchassetsresponse.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/caForbiddenRequest"
                }
              }
            },
            "description": "Forbidden Operation"
          },
          "500": {
            "content": {
              "application/vnd.creativeassetssearchassetsresponse.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/caInternalError"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Search assets",
        "tags": [
          "Creative assets"
        ]
      }
    },
    "/assets/upload": {
      "post": {
        "description": "Creates an ephemeral resource (upload location) to upload Assets to Creative Assets tool. The upload location is short lived and expires in 15 minutes.The upload location only supports PUT HTTP Method to upload the asset content. If the upload location expires, API user will get `403` Forbidden response.\n* All ad specs - sizes and policies can be found [here](https://advertising.amazon.com/resources/ad-specs/?ref_=a20m_us_hnav_spcs)\n\n* Program specific links\n1. **Stores** - [here](https://advertising.amazon.com/resources/ad-specs/stores?ref_=a20m_us_spcs_stcrgd)\n2. **SB/SBV/sponsored ads** - [here](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies?ref_=a20m_us_spcs_sbv_spcs_spadcap)\nSee [Creating assets](guides/creative-asset/creating-assets) to understand the call flow.",
        "operationId": "getUploadLocation",
        "parameters": [
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "fileName": {
                    "$ref": "#/components/schemas/caFileName"
                  }
                },
                "type": "object"
              }
            }
          },
          "description": "Make sure to include file extension along with filename . (ie. \"filename.mp4\")",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.creativeassetsuploadresponse.v3+json": {
                "schema": {
                  "properties": {
                    "url": {
                      "$ref": "#/components/schemas/caAssetUploadLocation"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returns an upload location."
          },
          "400": {
            "content": {
              "application/vnd.creativeassetsuploadresponse.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/caBadRequest"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/vnd.creativeassetsuploadresponse.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/caUnauthorizedRequest"
                }
              }
            },
            "description": "UnAuthorized Operation"
          },
          "403": {
            "content": {
              "application/vnd.creativeassetsuploadresponse.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/caForbiddenRequest"
                }
              }
            },
            "description": "Forbidden Operation"
          },
          "500": {
            "content": {
              "application/vnd.creativeassetsuploadresponse.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/caInternalError"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "Create an upload location",
        "tags": [
          "Creative assets"
        ]
      }
    }
  }
}