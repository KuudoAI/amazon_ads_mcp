{
  "components": {
    "callbacks": {},
    "examples": {},
    "headers": {},
    "links": {},
    "parameters": {},
    "requestBodies": {},
    "responses": {},
    "schemas": {
      "AccessForbiddenErrorResponseContent": {
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "CreateDspStreamSubscriptionRequestContent": {
        "properties": {
          "clientRequestToken": {
            "description": "Unique value supplied by the caller used to track identical API requests.\nShould request be re-tried, the caller should supply the same value. We recommend using GUID.",
            "maxLength": 36,
            "minLength": 22,
            "type": "string"
          },
          "dataSetId": {
            "description": "Identifier of data set, callers can be subscribed to. Please refer to https://advertising.amazon.com/API/docs/en-us/amazon-marketing-stream/data-guide for the list of all data sets.",
            "type": "string"
          },
          "destination": {
            "$ref": "#/components/schemas/Destination"
          },
          "destinationArn": {
            "description": "AWS ARN of the destination endpoint associated with the subscription.\nSupported destination types:\n- SQS",
            "maxLength": 2048,
            "minLength": 20,
            "type": "string"
          },
          "notes": {
            "description": "Additional details associated with the subscription",
            "maxLength": 128,
            "type": "string"
          }
        },
        "required": [
          "clientRequestToken",
          "dataSetId"
        ],
        "type": "object"
      },
      "CreateDspStreamSubscriptionResponseContent": {
        "properties": {
          "clientRequestToken": {
            "description": "Unique value supplied by the caller used to track identical API requests.\nShould request be re-tried, the caller should supply the same value. We recommend using GUID.",
            "maxLength": 36,
            "minLength": 22,
            "type": "string"
          },
          "subscriptionId": {
            "description": "Unique subscription identifier",
            "maxLength": 255,
            "type": "string"
          }
        },
        "required": [
          "clientRequestToken",
          "subscriptionId"
        ],
        "type": "object"
      },
      "CreateLakeSubscriptionRequestContent": {
        "properties": {
          "clientRequestToken": {
            "description": "Unique value supplied by the caller used to track identical API requests.\nShould request be re-tried, the caller should supply the same value. We recommend using GUID.",
            "maxLength": 36,
            "minLength": 22,
            "type": "string"
          },
          "dataSetId": {
            "description": "Identifier of data set, callers can be subscribed to. Please refer to https://advertising.amazon.com/API/docs/en-us/amazon-marketing-stream/data-guide for the list of all data sets.",
            "type": "string"
          },
          "notes": {
            "description": "Additional details associated with the subscription",
            "maxLength": 128,
            "type": "string"
          },
          "principal": {
            "description": "AWS ARN of the principal associated with the subscription.\nSupported principal types:\n- AWS Account Principal",
            "maxLength": 2048,
            "minLength": 20,
            "type": "string"
          }
        },
        "required": [
          "clientRequestToken",
          "dataSetId",
          "principal"
        ],
        "type": "object"
      },
      "CreateLakeSubscriptionResponseContent": {
        "properties": {
          "clientRequestToken": {
            "description": "Unique value supplied by the caller used to track identical API requests.\nShould request be re-tried, the caller should supply the same value. We recommend using GUID.",
            "maxLength": 36,
            "minLength": 22,
            "type": "string"
          },
          "subscriptionId": {
            "description": "Unique subscription identifier",
            "maxLength": 255,
            "type": "string"
          }
        },
        "required": [
          "clientRequestToken",
          "subscriptionId"
        ],
        "type": "object"
      },
      "CreateMessagesSubscriptionRequestContent": {
        "properties": {
          "clientToken": {
            "description": "Unique value supplied by the caller used to track identical API requests.\nShould request be re-tried, the caller should supply the same value. We recommend using GUID.",
            "maxLength": 36,
            "minLength": 22,
            "type": "string"
          },
          "dataSetId": {
            "description": "Name of the dataset to create a  Subscription for.",
            "type": "string"
          },
          "destination": {
            "$ref": "#/components/schemas/Destination"
          },
          "destinationUri": {
            "description": "AWS ARN for the recipient of all data routed to the Consumer Destination.",
            "maxLength": 255,
            "type": "string"
          },
          "notes": {
            "description": "Additional details which can be used to identity the  Destination. (Max Size of 128 characters)",
            "maxLength": 128,
            "type": "string"
          }
        },
        "required": [
          "clientToken",
          "dataSetId",
          "notes"
        ],
        "type": "object"
      },
      "CreateMessagesSubscriptionResponseContent": {
        "properties": {
          "clientToken": {
            "description": "Unique value supplied by the caller used to track identical API requests.\nShould request be re-tried, the caller should supply the same value. We recommend using GUID.",
            "maxLength": 36,
            "minLength": 22,
            "type": "string"
          },
          "messagesSubscriptionId": {
            "description": "Subscription identifier. Ex: amzn1.fead.cs1.sample",
            "maxLength": 255,
            "type": "string"
          },
          "version": {
            "description": "version for the  Subscription. Defaults to 1 upon creation. This is used for tracking updates to the subscription. Every update increments the version by 1.",
            "minimum": 1,
            "type": "number"
          }
        },
        "required": [
          "clientToken",
          "messagesSubscriptionId",
          "version"
        ],
        "type": "object"
      },
      "CreateStreamSubscriptionBetaRequestContent": {
        "properties": {
          "clientRequestToken": {
            "description": "Unique value supplied by the caller used to track identical API requests.\nShould request be re-tried, the caller should supply the same value. We recommend using GUID.",
            "maxLength": 36,
            "minLength": 22,
            "type": "string"
          },
          "dataSetId": {
            "description": "Identifier of data set, callers can be subscribed to. Please refer to https://advertising.amazon.com/API/docs/en-us/amazon-marketing-stream/data-guide for the list of all data sets.",
            "type": "string"
          },
          "destination": {
            "$ref": "#/components/schemas/Destination"
          },
          "destinationArn": {
            "description": "AWS ARN of the destination endpoint associated with the subscription.\nSupported destination types:\n- SQS",
            "maxLength": 2048,
            "minLength": 20,
            "type": "string"
          },
          "notes": {
            "description": "Additional details associated with the subscription",
            "maxLength": 128,
            "type": "string"
          },
          "settingsTemplateId": {
            "description": "Generic resource identifier which will work in most of the cases",
            "maxLength": 255,
            "type": "string"
          }
        },
        "required": [
          "clientRequestToken",
          "dataSetId",
          "destination",
          "settingsTemplateId"
        ],
        "type": "object"
      },
      "CreateStreamSubscriptionBetaResponseContent": {
        "properties": {
          "clientRequestToken": {
            "description": "Unique value supplied by the caller used to track identical API requests.\nShould request be re-tried, the caller should supply the same value. We recommend using GUID.",
            "maxLength": 36,
            "minLength": 22,
            "type": "string"
          },
          "subscriptionId": {
            "description": "Unique subscription identifier",
            "maxLength": 255,
            "type": "string"
          }
        },
        "required": [
          "clientRequestToken",
          "subscriptionId"
        ],
        "type": "object"
      },
      "CreateStreamSubscriptionRequestContent": {
        "properties": {
          "clientRequestToken": {
            "description": "Unique value supplied by the caller used to track identical API requests.\nShould request be re-tried, the caller should supply the same value. We recommend using GUID.",
            "maxLength": 36,
            "minLength": 22,
            "type": "string"
          },
          "dataSetId": {
            "description": "Identifier of data set, callers can be subscribed to. Please refer to https://advertising.amazon.com/API/docs/en-us/amazon-marketing-stream/data-guide for the list of all data sets.",
            "type": "string"
          },
          "destination": {
            "$ref": "#/components/schemas/Destination"
          },
          "destinationArn": {
            "description": "AWS ARN of the destination endpoint associated with the subscription.\nSupported destination types:\n- SQS",
            "maxLength": 2048,
            "minLength": 20,
            "type": "string"
          },
          "notes": {
            "description": "Additional details associated with the subscription",
            "maxLength": 128,
            "type": "string"
          }
        },
        "required": [
          "clientRequestToken",
          "dataSetId"
        ],
        "type": "object"
      },
      "CreateStreamSubscriptionResponseContent": {
        "properties": {
          "clientRequestToken": {
            "description": "Unique value supplied by the caller used to track identical API requests.\nShould request be re-tried, the caller should supply the same value. We recommend using GUID.",
            "maxLength": 36,
            "minLength": 22,
            "type": "string"
          },
          "subscriptionId": {
            "description": "Unique subscription identifier",
            "maxLength": 255,
            "type": "string"
          }
        },
        "required": [
          "clientRequestToken",
          "subscriptionId"
        ],
        "type": "object"
      },
      "DataGranularity": {
        "enum": [
          "DAILY",
          "HOURLY"
        ],
        "type": "string"
      },
      "DeliveryFrequency": {
        "enum": [
          "BUFFERED_DAILY",
          "BUFFERED_HOURLY",
          "UNBUFFERED"
        ],
        "type": "string"
      },
      "Destination": {
        "properties": {
          "firehoseDestination": {
            "$ref": "#/components/schemas/FirehoseDestination"
          },
          "sqsDestination": {
            "$ref": "#/components/schemas/SqsDestination"
          }
        },
        "type": "object"
      },
      "FirehoseDestination": {
        "properties": {
          "deliveryStreamArn": {
            "maxLength": 255,
            "type": "string"
          },
          "subscriberRoleArn": {
            "maxLength": 255,
            "type": "string"
          },
          "subscriptionRoleArn": {
            "maxLength": 255,
            "type": "string"
          }
        },
        "required": [
          "deliveryStreamArn",
          "subscriberRoleArn",
          "subscriptionRoleArn"
        ],
        "type": "object"
      },
      "GetDspStreamSubscriptionResponseContent": {
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/StreamSubscription"
          }
        },
        "required": [
          "subscription"
        ],
        "type": "object"
      },
      "GetLakeSubscriptionResponseContent": {
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/LakeSubscription"
          }
        },
        "required": [
          "subscription"
        ],
        "type": "object"
      },
      "GetMessagesSubscriptionResponseContent": {
        "properties": {
          "messagesSubscription": {
            "$ref": "#/components/schemas/MessagesSubscription"
          }
        },
        "required": [
          "messagesSubscription"
        ],
        "type": "object"
      },
      "GetStreamSubscriptionBetaResponseContent": {
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/StreamSubscriptionBeta"
          }
        },
        "required": [
          "subscription"
        ],
        "type": "object"
      },
      "GetStreamSubscriptionResponseContent": {
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/StreamSubscription"
          }
        },
        "required": [
          "subscription"
        ],
        "type": "object"
      },
      "InternalServerErrorResponseContent": {
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "InvalidRequestErrorResponseContent": {
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "LakeSubscription": {
        "properties": {
          "createdDate": {
            "description": "ISO8601 Timestamp",
            "format": "date-time",
            "type": "string"
          },
          "dataSetId": {
            "description": "Identifier of data set, callers can be subscribed to. Please refer to https://advertising.amazon.com/API/docs/en-us/amazon-marketing-stream/data-guide for the list of all data sets.",
            "type": "string"
          },
          "notes": {
            "description": "Additional details associated with the subscription",
            "maxLength": 128,
            "type": "string"
          },
          "principal": {
            "description": "AWS ARN of the principal associated with the subscription.\nSupported principal types:\n- AWS Account Principal",
            "maxLength": 2048,
            "minLength": 20,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/SubscriptionEntityStatus"
          },
          "subscriptionId": {
            "description": "Unique subscription identifier",
            "maxLength": 255,
            "type": "string"
          },
          "updatedDate": {
            "description": "ISO8601 Timestamp",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "createdDate",
          "dataSetId",
          "principal",
          "status",
          "subscriptionId",
          "updatedDate"
        ],
        "type": "object"
      },
      "ListDspStreamSubscriptionsResponseContent": {
        "properties": {
          "nextToken": {
            "description": "Token which can be used to get the next page of results, if more entries exist",
            "type": "string"
          },
          "subscriptions": {
            "items": {
              "$ref": "#/components/schemas/StreamSubscription"
            },
            "maxItems": 5000,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "subscriptions"
        ],
        "type": "object"
      },
      "ListLakeSubscriptionsResponseContent": {
        "properties": {
          "nextToken": {
            "description": "Token which can be used to get the next page of results, if more entries exist",
            "type": "string"
          },
          "subscriptions": {
            "items": {
              "$ref": "#/components/schemas/LakeSubscription"
            },
            "maxItems": 5000,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "subscriptions"
        ],
        "type": "object"
      },
      "ListMessagesSubscriptionsResponseContent": {
        "properties": {
          "messagesSubscriptions": {
            "items": {
              "$ref": "#/components/schemas/MessagesSubscription"
            },
            "maxItems": 5000,
            "minItems": 0,
            "type": "array"
          },
          "nextToken": {
            "description": "Token which can be used to get the next page of results, if more entries exist.",
            "type": "string"
          }
        },
        "required": [
          "messagesSubscriptions"
        ],
        "type": "object"
      },
      "ListStreamSubscriptionsBetaResponseContent": {
        "properties": {
          "nextToken": {
            "description": "Token which can be used to get the next page of results, if more entries exist",
            "type": "string"
          },
          "subscriptions": {
            "items": {
              "$ref": "#/components/schemas/StreamSubscriptionBeta"
            },
            "maxItems": 5000,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "subscriptions"
        ],
        "type": "object"
      },
      "ListStreamSubscriptionsResponseContent": {
        "properties": {
          "nextToken": {
            "description": "Token which can be used to get the next page of results, if more entries exist",
            "type": "string"
          },
          "subscriptions": {
            "items": {
              "$ref": "#/components/schemas/StreamSubscription"
            },
            "maxItems": 5000,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "subscriptions"
        ],
        "type": "object"
      },
      "MessagesSubscription": {
        "properties": {
          "createdDate": {
            "description": "ISO8601 Timestamp",
            "format": "date-time",
            "type": "string"
          },
          "dataGranularity": {
            "$ref": "#/components/schemas/DataGranularity"
          },
          "dataSetId": {
            "description": "Identifier of data set, callers can be subscribed to. Please refer to https://advertising.amazon.com/API/docs/en-us/amazon-marketing-stream/data-guide for the list of all data sets.",
            "type": "string"
          },
          "deliveryFrequency": {
            "$ref": "#/components/schemas/DeliveryFrequency"
          },
          "destination": {
            "$ref": "#/components/schemas/Destination"
          },
          "destinationUri": {
            "maxLength": 255,
            "type": "string"
          },
          "fieldSelection": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "messagesSubscriptionId": {
            "description": "Generic resource identifier which will work in most of the cases",
            "maxLength": 255,
            "type": "string"
          },
          "notes": {
            "maxLength": 128,
            "type": "string"
          },
          "requiredIamPolicy": {
            "description": "the IAM policy which is required on the destination in order for Amazon\nbeing able to send data to it",
            "maxLength": 10240,
            "type": "string"
          },
          "settingsTemplateId": {
            "description": "Generic resource identifier which will work in most of the cases",
            "maxLength": 255,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/SubscriptionEntityStatus"
          },
          "statusMessage": {
            "maxLength": 128,
            "type": "string"
          },
          "updateType": {
            "$ref": "#/components/schemas/UpdateType"
          },
          "updatedDate": {
            "description": "ISO8601 Timestamp",
            "format": "date-time",
            "type": "string"
          },
          "version": {
            "minimum": 1,
            "type": "number"
          }
        },
        "required": [
          "createdDate",
          "dataSetId",
          "messagesSubscriptionId",
          "notes",
          "requiredIamPolicy",
          "status",
          "updatedDate",
          "version"
        ],
        "type": "object"
      },
      "OperationConflictErrorResponseContent": {
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "ResourceNotFoundErrorResponseContent": {
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "SqsDestination": {
        "properties": {
          "queueArn": {
            "maxLength": 255,
            "type": "string"
          }
        },
        "required": [
          "queueArn"
        ],
        "type": "object"
      },
      "StreamSubscription": {
        "properties": {
          "createdDate": {
            "description": "ISO8601 Timestamp",
            "format": "date-time",
            "type": "string"
          },
          "dataSetId": {
            "description": "Identifier of data set, callers can be subscribed to. Please refer to https://advertising.amazon.com/API/docs/en-us/amazon-marketing-stream/data-guide for the list of all data sets.",
            "type": "string"
          },
          "destination": {
            "$ref": "#/components/schemas/Destination"
          },
          "destinationArn": {
            "description": "AWS ARN of the destination endpoint associated with the subscription.\nSupported destination types:\n- SQS",
            "maxLength": 2048,
            "minLength": 20,
            "type": "string"
          },
          "notes": {
            "description": "Additional details associated with the subscription",
            "maxLength": 128,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/SubscriptionEntityStatus"
          },
          "subscriptionId": {
            "description": "Unique subscription identifier",
            "maxLength": 255,
            "type": "string"
          },
          "updatedDate": {
            "description": "ISO8601 Timestamp",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "createdDate",
          "dataSetId",
          "status",
          "subscriptionId",
          "updatedDate"
        ],
        "type": "object"
      },
      "StreamSubscriptionBeta": {
        "properties": {
          "createdDate": {
            "description": "ISO8601 Timestamp",
            "format": "date-time",
            "type": "string"
          },
          "dataGranularity": {
            "$ref": "#/components/schemas/DataGranularity"
          },
          "dataSetId": {
            "description": "Identifier of data set, callers can be subscribed to. Please refer to https://advertising.amazon.com/API/docs/en-us/amazon-marketing-stream/data-guide for the list of all data sets.",
            "type": "string"
          },
          "deliveryFrequency": {
            "$ref": "#/components/schemas/DeliveryFrequency"
          },
          "destination": {
            "$ref": "#/components/schemas/Destination"
          },
          "fieldSelection": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "notes": {
            "description": "Additional details associated with the subscription",
            "maxLength": 128,
            "type": "string"
          },
          "settingsTemplateId": {
            "description": "Generic resource identifier which will work in most of the cases",
            "maxLength": 255,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/SubscriptionEntityStatus"
          },
          "subscriptionId": {
            "description": "Unique subscription identifier",
            "maxLength": 255,
            "type": "string"
          },
          "updateType": {
            "$ref": "#/components/schemas/UpdateType"
          },
          "updatedDate": {
            "description": "ISO8601 Timestamp",
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "createdDate",
          "dataGranularity",
          "dataSetId",
          "deliveryFrequency",
          "destination",
          "fieldSelection",
          "settingsTemplateId",
          "status",
          "subscriptionId",
          "updateType",
          "updatedDate"
        ],
        "type": "object"
      },
      "SubscriptionEntityStatus": {
        "description": "Current status of the entity. Possible values are PROVISIONING, PENDING_CONFIRMATION, ACTIVE, ARCHIVED, FAILED_CONFIRMATION, SUSPENDED, FAILED_PROVISIONING",
        "enum": [
          "ACTIVE",
          "ARCHIVED",
          "FAILED_CONFIRMATION",
          "FAILED_PROVISIONING",
          "PENDING_CONFIRMATION",
          "PROVISIONING",
          "SUSPENDED"
        ],
        "type": "string"
      },
      "TooManyRequestsErrorResponseContent": {
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "UnauthorizedAccessErrorResponseContent": {
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "UpdateDspStreamSubscriptionRequestContent": {
        "properties": {
          "notes": {
            "description": "Additional details associated with the subscription",
            "maxLength": 128,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/UpdateEntityStatus"
          }
        },
        "type": "object"
      },
      "UpdateEntityStatus": {
        "description": "Update the status of the entity",
        "enum": [
          "ARCHIVED"
        ],
        "type": "string"
      },
      "UpdateLakeSubscriptionRequestContent": {
        "properties": {
          "notes": {
            "description": "Additional details associated with the subscription",
            "maxLength": 128,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/UpdateEntityStatus"
          }
        },
        "type": "object"
      },
      "UpdateMessagesSubscriptionRequestContent": {
        "properties": {
          "notes": {
            "description": "Additional details which can be used to identity the  Subscription. (Max Size of 128 characters)",
            "maxLength": 128,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/UpdateEntityStatus"
          },
          "version": {
            "description": "version of the  Subscription to apply the update to. This should match the current active version for the selected consumerSubscriptionId.",
            "minimum": 1,
            "type": "number"
          }
        },
        "required": [
          "version"
        ],
        "type": "object"
      },
      "UpdateMessagesSubscriptionResponseContent": {
        "properties": {
          "messagesSubscriptionId": {
            "description": "Subscription identifier. Ex: amzn1.fead.cd1.sample",
            "maxLength": 255,
            "type": "string"
          },
          "version": {
            "description": "Updated version of the  Subscription.",
            "minimum": 1,
            "type": "number"
          }
        },
        "required": [
          "messagesSubscriptionId",
          "version"
        ],
        "type": "object"
      },
      "UpdateStreamSubscriptionBetaRequestContent": {
        "properties": {
          "notes": {
            "description": "Additional details associated with the subscription",
            "maxLength": 128,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/UpdateEntityStatus"
          }
        },
        "type": "object"
      },
      "UpdateStreamSubscriptionRequestContent": {
        "properties": {
          "notes": {
            "description": "Additional details associated with the subscription",
            "maxLength": 128,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/UpdateEntityStatus"
          }
        },
        "type": "object"
      },
      "UpdateType": {
        "enum": [
          "DELTA",
          "SNAPSHOT"
        ],
        "type": "string"
      }
    },
    "securitySchemes": {}
  },
  "info": {
    "title": "Amazon Marketing Stream",
    "version": "3.0"
  },
  "openapi": "3.0.1",
  "paths": {
    "/dsp/streams/subscriptions": {
      "get": {
        "description": "List subscriptions\nNote: trailing slash in request uri is not allowed\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-Account-ID\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"view_performance_dashboard\"]",
        "operationId": "ListDspStreamSubscriptions",
        "parameters": [
          {
            "description": "desired number of entries in the response, defaults to maximum value",
            "in": "query",
            "name": "maxResults",
            "schema": {
              "description": "desired number of entries in the response, defaults to maximum value",
              "maximum": 5000,
              "minimum": 1,
              "type": "number"
            }
          },
          {
            "description": "Token which can be used to get the next page of results, if more entries exist",
            "in": "query",
            "name": "startingToken",
            "schema": {
              "description": "Token which can be used to get the next page of results, if more entries exist",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a DSP advertiser level account",
            "in": "header",
            "name": "Amazon-Ads-Account-ID",
            "required": true,
            "schema": {
              "description": "The identifier of a DSP advertiser level account",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDspStreamSubscriptionsResponseContent"
                }
              }
            },
            "description": "ListDspStreamSubscriptions 200 response"
          },
          "400": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidRequestErrorResponseContent"
                }
              }
            },
            "description": "InvalidRequestError 400 response"
          },
          "403": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessForbiddenErrorResponseContent"
                }
              }
            },
            "description": "AccessForbiddenError 403 response"
          },
          "429": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsErrorResponseContent"
                }
              }
            },
            "description": "TooManyRequestsError 429 response",
            "headers": {
              "Retry-After": {
                "description": "this type is used to convey a recommended delay before next re-try attempt to the operation given in seconds",
                "schema": {
                  "description": "this type is used to convey a recommended delay before next re-try attempt to the operation given in seconds",
                  "type": "number"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                }
              }
            },
            "description": "InternalServerError 500 response"
          }
        },
        "tags": [
          "DSP Stream Subscription"
        ]
      },
      "post": {
        "description": "Create a new subscription\nNote: trailing slash in request uri is not allowed\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-Account-ID\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"view_performance_dashboard\"]",
        "operationId": "CreateDspStreamSubscription",
        "parameters": [
          {
            "description": "The identifier of a DSP advertiser level account",
            "in": "header",
            "name": "Amazon-Ads-Account-ID",
            "required": true,
            "schema": {
              "description": "The identifier of a DSP advertiser level account",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDspStreamSubscriptionRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDspStreamSubscriptionResponseContent"
                }
              }
            },
            "description": "CreateDspStreamSubscription 200 response"
          },
          "400": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidRequestErrorResponseContent"
                }
              }
            },
            "description": "InvalidRequestError 400 response"
          },
          "403": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessForbiddenErrorResponseContent"
                }
              }
            },
            "description": "AccessForbiddenError 403 response"
          },
          "409": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationConflictErrorResponseContent"
                }
              }
            },
            "description": "OperationConflictError 409 response"
          },
          "429": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsErrorResponseContent"
                }
              }
            },
            "description": "TooManyRequestsError 429 response",
            "headers": {
              "Retry-After": {
                "description": "this type is used to convey a recommended delay before next re-try attempt to the operation given in seconds",
                "schema": {
                  "description": "this type is used to convey a recommended delay before next re-try attempt to the operation given in seconds",
                  "type": "number"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                }
              }
            },
            "description": "InternalServerError 500 response"
          }
        },
        "tags": [
          "DSP Stream Subscription"
        ]
      }
    },
    "/dsp/streams/subscriptions/{subscriptionId}": {
      "get": {
        "description": "Fetch a specific subscription by Id\nNote: trailing slash in request uri is not allowed\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-Account-ID\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"view_performance_dashboard\"]",
        "operationId": "GetDspStreamSubscription",
        "parameters": [
          {
            "description": "Unique subscription identifier",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": {
              "description": "Unique subscription identifier",
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "description": "The identifier of a DSP advertiser level account",
            "in": "header",
            "name": "Amazon-Ads-Account-ID",
            "required": true,
            "schema": {
              "description": "The identifier of a DSP advertiser level account",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDspStreamSubscriptionResponseContent"
                }
              }
            },
            "description": "GetDspStreamSubscription 200 response"
          },
          "400": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidRequestErrorResponseContent"
                }
              }
            },
            "description": "InvalidRequestError 400 response"
          },
          "403": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessForbiddenErrorResponseContent"
                }
              }
            },
            "description": "AccessForbiddenError 403 response"
          },
          "404": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundErrorResponseContent"
                }
              }
            },
            "description": "ResourceNotFoundError 404 response"
          },
          "429": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsErrorResponseContent"
                }
              }
            },
            "description": "TooManyRequestsError 429 response",
            "headers": {
              "Retry-After": {
                "description": "this type is used to convey a recommended delay before next re-try attempt to the operation given in seconds",
                "schema": {
                  "description": "this type is used to convey a recommended delay before next re-try attempt to the operation given in seconds",
                  "type": "number"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                }
              }
            },
            "description": "InternalServerError 500 response"
          }
        },
        "tags": [
          "DSP Stream Subscription"
        ]
      },
      "put": {
        "description": "Update an existing subscription\nNote: trailing slash in request uri is not allowed\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-Account-ID\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"view_performance_dashboard\"]",
        "operationId": "UpdateDspStreamSubscription",
        "parameters": [
          {
            "description": "Unique subscription identifier",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": {
              "description": "Unique subscription identifier",
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "description": "The identifier of a DSP advertiser level account",
            "in": "header",
            "name": "Amazon-Ads-Account-ID",
            "required": true,
            "schema": {
              "description": "The identifier of a DSP advertiser level account",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDspStreamSubscriptionRequestContent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "UpdateDspStreamSubscription 200 response"
          },
          "400": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidRequestErrorResponseContent"
                }
              }
            },
            "description": "InvalidRequestError 400 response"
          },
          "403": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessForbiddenErrorResponseContent"
                }
              }
            },
            "description": "AccessForbiddenError 403 response"
          },
          "404": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundErrorResponseContent"
                }
              }
            },
            "description": "ResourceNotFoundError 404 response"
          },
          "409": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationConflictErrorResponseContent"
                }
              }
            },
            "description": "OperationConflictError 409 response"
          },
          "429": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsErrorResponseContent"
                }
              }
            },
            "description": "TooManyRequestsError 429 response",
            "headers": {
              "Retry-After": {
                "description": "this type is used to convey a recommended delay before next re-try attempt to the operation given in seconds",
                "schema": {
                  "description": "this type is used to convey a recommended delay before next re-try attempt to the operation given in seconds",
                  "type": "number"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                }
              }
            },
            "description": "InternalServerError 500 response"
          }
        },
        "tags": [
          "DSP Stream Subscription"
        ]
      }
    },
    "/streams/subscriptions": {
      "get": {
        "description": "List subscriptions\nNote: trailing slash in request uri is not allowed\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"view_performance_dashboard\"]",
        "operationId": "ListStreamSubscriptions",
        "parameters": [
          {
            "description": "desired number of entries in the response, defaults to maximum value",
            "in": "query",
            "name": "maxResults",
            "schema": {
              "description": "desired number of entries in the response, defaults to maximum value",
              "maximum": 5000,
              "minimum": 1,
              "type": "number"
            }
          },
          {
            "description": "Token which can be used to get the next page of results, if more entries exist",
            "in": "query",
            "name": "startingToken",
            "schema": {
              "description": "Token which can be used to get the next page of results, if more entries exist",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a DSP advertiser level account",
            "in": "header",
            "name": "Amazon-Ads-AccountId",
            "schema": {
              "description": "The identifier of a DSP advertiser level account",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ListStreamSubscriptionsResponseContent"
                }
              }
            },
            "description": "ListStreamSubscriptions 200 response"
          },
          "400": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidRequestErrorResponseContent"
                }
              }
            },
            "description": "InvalidRequestError 400 response"
          },
          "401": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedAccessErrorResponseContent"
                }
              }
            },
            "description": "UnauthorizedAccessError 401 response"
          },
          "403": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessForbiddenErrorResponseContent"
                }
              }
            },
            "description": "AccessForbiddenError 403 response"
          },
          "404": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundErrorResponseContent"
                }
              }
            },
            "description": "ResourceNotFoundError 404 response"
          },
          "429": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsErrorResponseContent"
                }
              }
            },
            "description": "TooManyRequestsError 429 response",
            "headers": {
              "Retry-After": {
                "description": "this type is used to convey a recommended delay before next re-try attempt to the operation given in seconds",
                "schema": {
                  "description": "this type is used to convey a recommended delay before next re-try attempt to the operation given in seconds",
                  "type": "number"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                }
              }
            },
            "description": "InternalServerError 500 response"
          }
        },
        "tags": [
          "Stream Subscription"
        ]
      },
      "post": {
        "description": "Create a new subscription\nNote: trailing slash in request uri is not allowed\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"view_performance_dashboard\"]",
        "operationId": "CreateStreamSubscription",
        "parameters": [
          {
            "description": "The identifier of a DSP advertiser level account",
            "in": "header",
            "name": "Amazon-Ads-AccountId",
            "schema": {
              "description": "The identifier of a DSP advertiser level account",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStreamSubscriptionRequestContent"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateStreamSubscriptionResponseContent"
                }
              }
            },
            "description": "CreateStreamSubscription 200 response"
          },
          "400": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidRequestErrorResponseContent"
                }
              }
            },
            "description": "InvalidRequestError 400 response"
          },
          "401": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedAccessErrorResponseContent"
                }
              }
            },
            "description": "UnauthorizedAccessError 401 response"
          },
          "403": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessForbiddenErrorResponseContent"
                }
              }
            },
            "description": "AccessForbiddenError 403 response"
          },
          "404": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundErrorResponseContent"
                }
              }
            },
            "description": "ResourceNotFoundError 404 response"
          },
          "409": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationConflictErrorResponseContent"
                }
              }
            },
            "description": "OperationConflictError 409 response"
          },
          "429": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsErrorResponseContent"
                }
              }
            },
            "description": "TooManyRequestsError 429 response",
            "headers": {
              "Retry-After": {
                "description": "this type is used to convey a recommended delay before next re-try attempt to the operation given in seconds",
                "schema": {
                  "description": "this type is used to convey a recommended delay before next re-try attempt to the operation given in seconds",
                  "type": "number"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                }
              }
            },
            "description": "InternalServerError 500 response"
          }
        },
        "tags": [
          "Stream Subscription"
        ]
      }
    },
    "/streams/subscriptions/{subscriptionId}": {
      "get": {
        "description": "Fetch a specific subscription by Id\nNote: trailing slash in request uri is not allowed\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"view_performance_dashboard\"]",
        "operationId": "GetStreamSubscription",
        "parameters": [
          {
            "description": "Unique subscription identifier",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": {
              "description": "Unique subscription identifier",
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "description": "The identifier of a DSP advertiser level account",
            "in": "header",
            "name": "Amazon-Ads-AccountId",
            "schema": {
              "description": "The identifier of a DSP advertiser level account",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStreamSubscriptionResponseContent"
                }
              }
            },
            "description": "GetStreamSubscription 200 response"
          },
          "400": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidRequestErrorResponseContent"
                }
              }
            },
            "description": "InvalidRequestError 400 response"
          },
          "401": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedAccessErrorResponseContent"
                }
              }
            },
            "description": "UnauthorizedAccessError 401 response"
          },
          "403": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessForbiddenErrorResponseContent"
                }
              }
            },
            "description": "AccessForbiddenError 403 response"
          },
          "404": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundErrorResponseContent"
                }
              }
            },
            "description": "ResourceNotFoundError 404 response"
          },
          "429": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsErrorResponseContent"
                }
              }
            },
            "description": "TooManyRequestsError 429 response",
            "headers": {
              "Retry-After": {
                "description": "this type is used to convey a recommended delay before next re-try attempt to the operation given in seconds",
                "schema": {
                  "description": "this type is used to convey a recommended delay before next re-try attempt to the operation given in seconds",
                  "type": "number"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                }
              }
            },
            "description": "InternalServerError 500 response"
          }
        },
        "tags": [
          "Stream Subscription"
        ]
      },
      "put": {
        "description": "Update an existing subscription\nNote: trailing slash in request uri is not allowed\n\n**Authorized resource type**:\nDSP Rodeo Entity ID, DSP Advertiser Account ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"view_performance_dashboard\"]",
        "operationId": "UpdateStreamSubscription",
        "parameters": [
          {
            "description": "Unique subscription identifier",
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "schema": {
              "description": "Unique subscription identifier",
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "description": "The identifier of a DSP advertiser level account",
            "in": "header",
            "name": "Amazon-Ads-AccountId",
            "schema": {
              "description": "The identifier of a DSP advertiser level account",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "required": true,
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            }
          },
          {
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.",
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStreamSubscriptionRequestContent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "UpdateStreamSubscription 200 response"
          },
          "400": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/InvalidRequestErrorResponseContent"
                }
              }
            },
            "description": "InvalidRequestError 400 response"
          },
          "401": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedAccessErrorResponseContent"
                }
              }
            },
            "description": "UnauthorizedAccessError 401 response"
          },
          "403": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessForbiddenErrorResponseContent"
                }
              }
            },
            "description": "AccessForbiddenError 403 response"
          },
          "404": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundErrorResponseContent"
                }
              }
            },
            "description": "ResourceNotFoundError 404 response"
          },
          "409": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationConflictErrorResponseContent"
                }
              }
            },
            "description": "OperationConflictError 409 response"
          },
          "429": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/TooManyRequestsErrorResponseContent"
                }
              }
            },
            "description": "TooManyRequestsError 429 response",
            "headers": {
              "Retry-After": {
                "description": "this type is used to convey a recommended delay before next re-try attempt to the operation given in seconds",
                "schema": {
                  "description": "this type is used to convey a recommended delay before next re-try attempt to the operation given in seconds",
                  "type": "number"
                }
              }
            }
          },
          "500": {
            "content": {
              "application/vnd.amazonmarketingstreamsubscriptions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponseContent"
                }
              }
            },
            "description": "InternalServerError 500 response"
          }
        },
        "tags": [
          "Stream Subscription"
        ]
      }
    }
  }
}